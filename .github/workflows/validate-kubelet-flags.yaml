name: Generate valid Kubelet Flags per k8s version
on:
  push:
    branches:
      - amaheshwari/kubelettest  # for now

jobs:
  validate-kubelet-flags:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Set up containerd
      uses: crazy-max/ghaction-setup-containerd@v2
    - uses: actions/checkout@v3
    - run: |
        set -x
        retrycmd_get_tarball() {
          tar_retries=$1; wait_sleep=$2; tarball=$3; url=$4
          echo "${tar_retries} retries"
          for i in $(seq 1 $tar_retries); do
              tar -tzf $tarball && break || \
              if [ $i -eq $tar_retries ]; then
                  return 1
              else
                  timeout 60 curl -fsSL $url -o $tarball
                  sleep $wait_sleep
              fi
          done
        }
        
        sudo swapoff -a
        sudo ctr version
        sudo systemctl status containerd

        KUBE_BINARY_VERSIONS="$(jq -r .kubernetes.versions[] parts/linux/cloud-init/artifacts/manifest.json)"
        echo $KUBE_BINARY_VERSIONS

        for KUBE_BINARY_VERSION in $KUBE_BINARY_VERSIONS; do
          #K8S_VERSION=1.25.5
          K8S_DOWNLOADS_DIR="/opt/kubernetes/downloads"
          KUBE_BINARY_URL="https://acs-mirror.azureedge.net/kubernetes/v${KUBE_BINARY_VERSION}/binaries/kubernetes-node-linux-amd64.tar.gz"
          mkdir -p ${K8S_DOWNLOADS_DIR}
          K8S_TGZ_TMP=${KUBE_BINARY_URL##*/}
          retrycmd_get_tarball 120 5 "$K8S_DOWNLOADS_DIR/${K8S_TGZ_TMP}" ${KUBE_BINARY_URL} || exit 120
          tar --transform="s|.*|&-${KUBE_BINARY_VERSION}|" --show-transformed-names -xzvf "$K8S_DOWNLOADS_DIR/${K8S_TGZ_TMP}" \
              --strip-components=3 -C /usr/local/bin kubernetes/node/bin/kubelet kubernetes/node/bin/kubectl
          rm -f "$K8S_DOWNLOADS_DIR/${K8S_TGZ_TMP}"
          #ls /usr/local/bin
          #sudo /usr/local/bin/kubelet-1.25.5 -v 1 --container-runtime-endpoint unix:///var/run/containerd/containerd.sock
          cd e2e/kubelet
          #go run main.go
          go run -ldflags="-X main.KUBE_BINARY_VERSION=$KUBE_BINARY_VERSION" main.go
        done
        ls /usr/local/bin
      name: Download kubelet binary