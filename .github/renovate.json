{
  "extends": [
    "config:base"
  ],
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "enabledManagers": [
    "custom.regex"
  ],
  "prConcurrentLimit": 50,
  "prHourlyLimit": 50,
  "branchConcurrentLimit": 50,
  "separateMinorPatch": true,
  "recreateWhen": "never",
  "labels": [
    "renovate"
  ],
  "rebaseWhen": "automerging",
  "schedule": [
    "after 10pm and before 5am every weekday",
    "every weekend"
  ],
  "updateNotScheduled": false,
  "timezone": "America/Los_Angeles",
  "logLevelRemap": [
    {
      "matchMessage": "/^Custom manager fetcher/",
      "newLogLevel": "info"
    }
  ],
  "packageRules": [
    {
      "matchPackageNames": [
        "oss/kubernetes/autoscaler/addon-resizer",
        "oss/kubernetes/pause",
        "oss/v2/kubernetes/coredns",
        "containernetworking/azure-cni",
        "containernetworking/azure-cns",
        "containernetworking/azure-ipam",
        "containernetworking/cilium/cilium",
        "oss/kubernetes/apiserver-network-proxy/agent",
        "oss/kubernetes-csi/secrets-store/driver",
        "oss/azure/secrets-store/provider-azure",
        "azuremonitor/containerinsights/ciprod/prometheus-collector/images",
        "oss/kubernetes/azure-cloud-node-manager",
        "aks/ip-masq-agent-v2",
        "oss/kubernetes-csi/azuredisk-csi",
        "oss/kubernetes-csi/azurefile-csi",
        "oss/kubernetes-csi/blob-csi",
        "oss/kubernetes-csi/livenessprobe",
        "oss/kubernetes-csi/csi-node-driver-registrar",
        "oss/v2/open-policy-agent/gatekeeper",
        "azure-policy/policy-kubernetes-addon-prod",
        "azure-policy/policy-kubernetes-webhook",
        "oss/kubernetes/kube-proxy",
        "oss/binaries/kubernetes/kubernetes-node",
        "oss/binaries/kubernetes/azure-acr-credential-provider",
        "oss/binaries/deislabs/containerd-wasm-shims",
        "containernetworking/azure-npm"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "enabled": false
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "automerge": false,
      "enabled": true
    },
    {
      "matchDatasources": [
        "custom.deb1804",
        "custom.deb2004",
        "custom.deb2204",
        "custom.deb2404"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "automerge": false,
      "enabled": true
    },
    {
      "matchPackageNames": [
        "moby-runc",
        "moby-containerd",
        "aks/aks-node-ca-watcher"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "automerge": true,
      "enabled": true,
      "groupName": "runc-containerd-ca_watcher",
      "assignees": [
        "devinwong",
        "anujmaheshwari1",
        "cameronmeissner",
        "AlisonB319",
        "lilypan26",
        "djsly",
        "jason1028kr",
        "UtheMan",
        "zachary-bailey",
        "ganeshkumarashok"
      ],
      "reviewers": [
        "devinwong",
        "anujmaheshwari1",
        "cameronmeissner",
        "AlisonB319",
        "lilypan26",
        "djsly",
        "jason1028kr",
        "UtheMan",
        "zachary-bailey",
        "ganeshkumarashok"
      ]
    },
    {
      "matchPackageNames": [
        "moby-runc",
        "moby-containerd"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "automerge": false,
      "enabled": true,
      "groupName": "runc-containerd-minor",
      "assignees": [
        "devinwong",
        "anujmaheshwari1",
        "cameronmeissner",
        "AlisonB319",
        "lilypan26",
        "djsly",
        "jason1028kr",
        "UtheMan",
        "zachary-bailey",
        "ganeshkumarashok"
      ],
      "reviewers": [
        "devinwong",
        "anujmaheshwari1",
        "cameronmeissner",
        "AlisonB319",
        "lilypan26",
        "djsly",
        "jason1028kr",
        "UtheMan",
        "zachary-bailey",
        "ganeshkumarashok"
      ]
    },
    {
      "matchPackageNames": [
        "azure-cni",
        "containernetworking/azure-cni",
        "containernetworking/azure-ipam"
      ],
      "groupName": "azure-cni-cilium-ipam",
      "reviewers": [
        "team:acn-cni-reviewers"
      ],
      "assignees": [
        "rbtr",
        "behzad-mir",
        "jpayne3506",
        "QxBytes"
      ]
    },
    {
      "matchPackageNames": [
        "containernetworking/cilium/cilium"
      ],
      "groupName": "azure-cni-cilium-ipam",
      "versioning": "regex:^v(?<major>\\d+)(\\.(?<minor>\\d+))?(\\.(?<patch>\\d+))?(-(?<prerelease>.*))?$",
      "ignoreUnstable": false,
      "reviewers": [
        "team:acn-cni-reviewers"
      ],
      "assignees": [
        "rbtr",
        "behzad-mir",
        "jpayne3506",
        "QxBytes"
      ]
    },
    {
      "matchPackageNames": [
        "azure-cns",
        "containernetworking/azure-cns"
      ],
      "groupName": "azure-cns",
      "reviewers": [
        "team:acn-cns-reviewers"
      ],
      "assignees": [
        "rbtr",
        "behzad-mir",
        "jpayne3506",
        "QxBytes"
      ]
    },
    {
      "matchPackageNames": [
        "containernetworking/azure-npm"
      ],
      "groupName": "azure-npm",
      "assignees": [
        "rayaisaiah",
        "huntergregory"
      ],
      "reviewers": [
        "rayaisaiah",
        "huntergregory"
      ]
    },
    {
      "matchPackageNames": [
        "oss/kubernetes/autoscaler/addon-resizer",
        "oss/kubernetes/autoscaler/cluster-proportional-autoscaler",
        "oss/kubernetes/coredns",
        "oss/v2/kubernetes/coredns"
      ],
      "assignees": [
        "nirnaymsft",
        "SriHarsha001"
      ],
      "reviewers": [
        "nirnaymsft",
        "SriHarsha001"
      ]
    },
    {
      "matchPackageNames": [
        "oss/v2/open-policy-agent/gatekeeper",
        "azure-policy/policy-kubernetes-addon-prod"
      ],
      "assignees": [
        "kevinhwangkr-msft",
        "anlandu",
        "nreisch"
      ],
      "reviewers": [
        "kevinhwangkr-msft",
        "anlandu",
        "nreisch"
      ]
    },
    {
      "matchPackageNames": [
        "oss/binaries/kubernetes/azure-acr-credential-provider"
      ],
      "groupName": "acr-credential-provider",
      "assignees": [
        "mainred",
        "MartinForReal",
        "nilo19"
      ],
      "reviewers": [
        "mainred",
        "MartinForReal",
        "nilo19"
      ]
    },
    {
      "matchPackageNames": [
        "oss/kubernetes-csi/**"
      ],
      "groupName": "csi",
      "assignees": [
        "andyzhangx",
        "jiashun0011"
      ],
      "reviewers": [
        "andyzhangx",
        "jiashun0011"
      ]
    },
    {
      "matchPackageNames": [
        "oss/binaries/kubernetes/kubernetes-node",
        "oss/kubernetes/kube-proxy"
      ],
      "groupName": "kube-components",
      "assignees": [
        "haitch",
        "wenhug",
        "gaopenghigh"
      ],
      "reviewers": [
        "haitch",
        "wenhug",
        "gaopenghigh"
      ]
    },
    {
      "matchPackageNames": [
        "oss/kubernetes/azure-cloud-node-manager"
      ],
      "groupName": "azure-cloud-node-manager",
      "assignees": [
        "mainred",
        "MartinForReal",
        "nilo19"
      ],
      "reviewers": [
        "mainred",
        "MartinForReal",
        "nilo19"
      ]
    },
    {
      "matchPackageNames": [
        "windows/nanoserver",
        "windows/servercore"
      ],
      "groupName": "windowsbase",
      "assignees": [
        "timmy-wright"
      ],
      "reviewers": [
        "timmy-wright"
      ],
      "enabled": true,
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<compatibility>\\d+)\\.(?<patch>\\d+)$"
    },
    {
      "matchPackageNames": [
        "windows/servercore/iis",
        "oss/v2/kubernetes/windows-gmsa-webhook"
      ],
      "groupName": "windowsbase",
      "assignees": [
        "timmy-wright"
      ],
      "reviewers": [
        "timmy-wright"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "oss/binaries/kubernetes/kubernetes-node",
        "oss/binaries/kubernetes/azure-acr-credential-provider",
        "oss/binaries/deislabs/containerd-wasm-shims"
      ],
      "extractVersion": "^(?P<version>.*?)-[^-]*-[^-]*$"
    },
    {
      "matchPackageNames": [
        "aks/aks-gpu-cuda",
        "aks/aks-gpu-grid"
      ],
      "groupName": "nvidia-gpu",
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<prerelease>\\d{14})$",
      "automerge": true,
      "enabled": true,
      "ignoreUnstable": false
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "auto update containerImages in components.json",
      "fileMatch": [
        "parts/common/components.json"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "\"renovateTag\":\\s*\"registry=(?<registryUrl>[^,]+), name=(?<packageName>[^\"]+)\",\\s*\"latestVersion\":\\s*\"(?<currentValue>[^\"]+)\"(?:[^}]*\"previousLatestVersion\":\\s*\"(?<depType>[^\"]+)\")?"
      ],
      "datasourceTemplate": "docker",
      "autoReplaceStringTemplate": "\"renovateTag\": \"registry={{{registryUrl}}}, name={{{packageName}}}\",\n          \"latestVersion\": \"{{{newValue}}}\"{{#if depType}},\n          \"previousLatestVersion\": \"{{{currentValue}}}\"{{/if}}"
    },
    {
      "customType": "regex",
      "description": "auto update OCI artifacts in components.json",
      "fileMatch": [
        "parts/common/components.json"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "\"renovateTag\":\\s*\"OCI_registry=(?<registryUrl>[^,]+), name=(?<packageName>[^\"]+)\",\\s*\"latestVersion\":\\s*\"(?<currentValue>[^\"]+)\"(?:[^}]*\"previousLatestVersion\":\\s*\"(?<depType>[^\"]+)\")?"
      ],
      "datasourceTemplate": "docker",
      "autoReplaceStringTemplate": "\"renovateTag\": \"OCI_registry={{{registryUrl}}}, name={{{packageName}}}\",\n                \"latestVersion\": \"{{{newValue}}}\"{{#if depType}},\n                \"previousLatestVersion\": \"{{{currentValue}}}\"{{/if}}"
    },
    {
      "customType": "regex",
      "description": "auto update packages for OS ubuntu 18.04 in components.json",
      "fileMatch": [
        "parts/common/components.json"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "\"renovateTag\":\\s*\"name=(?<packageName>[^\"]+), os=ubuntu, release=18\\.04\",\\s*\"latestVersion\":\\s*\"(?<currentValue>[^\"]+)\"(?:[^}]*\"previousLatestVersion\":\\s*\"(?<depType>[^\"]+)\")?"
      ],
      "datasourceTemplate": "custom.deb1804",
      "versioningTemplate": "deb",
      "autoReplaceStringTemplate": "\"renovateTag\": \"name={{{packageName}}}, os=ubuntu, release=18.04\",\n                \"latestVersion\": \"{{{newValue}}}\"{{#if depType}},\n                \"previousLatestVersion\": \"{{{currentValue}}}\"{{/if}}"
    },
    {
      "customType": "regex",
      "description": "auto update packages for OS ubuntu 20.04 in components.json",
      "fileMatch": [
        "parts/common/components.json"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "\"renovateTag\":\\s*\"name=(?<packageName>[^\"]+), os=ubuntu, release=20\\.04\",\\s*\"latestVersion\":\\s*\"(?<currentValue>[^\"]+)\"(?:[^}]*\"previousLatestVersion\":\\s*\"(?<depType>[^\"]+)\")?"
      ],
      "datasourceTemplate": "custom.deb2004",
      "versioningTemplate": "deb",
      "autoReplaceStringTemplate": "\"renovateTag\": \"name={{{packageName}}}, os=ubuntu, release=20.04\",\n                \"latestVersion\": \"{{{newValue}}}\"{{#if depType}},\n                \"previousLatestVersion\": \"{{{currentValue}}}\"{{/if}}"
    },
    {
      "customType": "regex",
      "description": "auto update packages for OS ubuntu 22.04 in components.json",
      "fileMatch": [
        "parts/common/components.json"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "\"renovateTag\":\\s*\"name=(?<packageName>[^\"]+), os=ubuntu, release=22\\.04\",\\s*\"latestVersion\":\\s*\"(?<currentValue>[^\"]+)\"(?:[^}]*\"previousLatestVersion\":\\s*\"(?<depType>[^\"]+)\")?"
      ],
      "datasourceTemplate": "custom.deb2204",
      "versioningTemplate": "deb",
      "autoReplaceStringTemplate": "\"renovateTag\": \"name={{{packageName}}}, os=ubuntu, release=22.04\",\n                \"latestVersion\": \"{{{newValue}}}\"{{#if depType}},\n                \"previousLatestVersion\": \"{{{currentValue}}}\"{{/if}}"
    },
    {
      "customType": "regex",
      "description": "auto update packages for OS ubuntu 24.04 in components.json",
      "fileMatch": [
        "parts/common/components.json"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "\"renovateTag\":\\s*\"name=(?<packageName>[^\"]+), os=ubuntu, release=24\\.04\",\\s*\"latestVersion\":\\s*\"(?<currentValue>[^\"]+)\"(?:[^}]*\"previousLatestVersion\":\\s*\"(?<depType>[^\"]+)\")?"
      ],
      "datasourceTemplate": "custom.deb2404",
      "versioningTemplate": "deb",
      "autoReplaceStringTemplate": "\"renovateTag\": \"name={{{packageName}}}, os=ubuntu, release=24.04\",\n                \"latestVersion\": \"{{{newValue}}}\"{{#if depType}},\n                \"previousLatestVersion\": \"{{{currentValue}}}\"{{/if}}"
    },
    {
      "customType": "regex",
      "description": "update version line in any cse_*.sh",
      "fileMatch": [
        "^.*cse_.*\\.sh"
      ],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "#\\s*renovate:\\s*(datasource=(?<datasource>.*?) )?depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s*.*?version.*\\\"(?<currentValue>.*)\\\""
      ]
    }
  ],
  "customDatasources": {
    "deb1804": {
      "defaultRegistryUrlTemplate": "https://packages.microsoft.com/ubuntu/18.04/prod/dists/bionic/main/binary-amd64/Packages",
      "format": "plain",
      "transformTemplates": [
        "{\"releases\": $map(($index := releases#$i[version=\"Package: {{packageName}}\"].$i; $map($index, function($i) { $substringAfter(releases[$i + 1].version, \"Version: \") })), function($v) { {\"version\": $v} })[]}"
      ]
    },
    "deb2004": {
      "defaultRegistryUrlTemplate": "https://packages.microsoft.com/ubuntu/20.04/prod/dists/focal/main/binary-amd64/Packages",
      "format": "plain",
      "transformTemplates": [
        "{\"releases\": $map(($index := releases#$i[version=\"Package: {{packageName}}\"].$i; $map($index, function($i) { $substringAfter(releases[$i + 1].version, \"Version: \") })), function($v) { {\"version\": $v} })[]}"
      ]
    },
    "deb2204": {
      "defaultRegistryUrlTemplate": "https://packages.microsoft.com/ubuntu/22.04/prod/dists/jammy/main/binary-amd64/Packages",
      "format": "plain",
      "transformTemplates": [
        "{\"releases\": $map(($index := releases#$i[version=\"Package: {{packageName}}\"].$i; $map($index, function($i) { $substringAfter(releases[$i + 1].version, \"Version: \") })), function($v) { {\"version\": $v} })[]}"
      ]
    },
    "deb2404": {
      "defaultRegistryUrlTemplate": "https://packages.microsoft.com/ubuntu/24.04/prod/dists/noble/main/binary-amd64/Packages",
      "format": "plain",
      "transformTemplates": [
        "{\"releases\": $map(($index := releases#$i[version=\"Package: {{packageName}}\"].$i; $map($index, function($i) { $substringAfter(releases[$i + 1].version, \"Version: \") })), function($v) { {\"version\": $v} })[]}"
      ]
    }
  }
}