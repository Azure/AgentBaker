package main

import (
	"context"
	"flag"
	"fmt"
	"log"

	"github.com/Azure/agentbaker/vulnerability-reporting-vms/config"
)

// to run locally
// 		vlnerability-reporting-vms % go run . --json-dir testdata

type Options struct {
	JsonDir string
}

func parseFlags() Options {
	var opts Options
	flag.StringVar(&opts.JsonDir, "json-dir", "", "Directory containing JSON files")
	flag.Parse()
	return opts
}

func main() {
	log.Printf("Starting vulnerability-reporting-vms\n")
	ctx, cancel := context.WithTimeout(context.Background(), config.Config.TestTimeout)
	defer cancel()

	opts := parseFlags()
	if opts.JsonDir == "" {
		log.Fatalf("missing required flag: json-dir")
	}

	vhdData, err := extractVHDInformation(&opts.JsonDir)
	if err != nil || len(vhdData) == 0 {
		if err == nil {
			err = fmt.Errorf("no VHD data found")
		}
		log.Fatalf("failed to extract VHD Data: %v", err)
	}

	err = createVulnerabilityReportingVms(ctx, vhdData)
	if err != nil {
		log.Fatalf("failed to create vulnerability reporting VMs: %v", err)
	}
	log.Printf("Finished creating vulnerability VMs\n")

	err = deleteOldVulnerabilityReportingVms(ctx)
	if err != nil {
		log.Fatalf("failed to delete old vulnerability reporting VMs: %v", err)
	}
	log.Printf("Finished vulnerability-reporting-vms\n")
}
