package config

import (
	"time"

	"github.com/caarlos0/env/v11"
	"github.com/joho/godotenv"
)

// modeled after e2e/config/azure.go

var (
	Config            = mustLoadConfig()
	Azure             = mustNewAzureClient()
	ResourceGroupName = "alisonproduction-testvm-rg"
	CurrentDate       = time.Now().Format("2006-01-02")
	//CurrentDate = time.Now().AddDate(0, 0, +1).Format("2006-01-02") // testing
)

type Configuration struct {
	SubscriptionID       string        `env:"SUBSCRIPTION_ID" envDefault:"8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8"`
	Location             string        `env:"LOCATION" envDefault:"westus3"`
	TestTimeout          time.Duration `env:"TEST_TIMEOUT" envDefault:"30m"`
	UniqueVersions       int           `env:"UNIQUE_VERSIONS" envDefault:"2"`
	UselatestImageWithin int           `env:"USE_LATEST_BUILD" envDefault:"3"` // if VMs are created within X days of each other, override to use the latest
}

func mustLoadConfig() Configuration {
	_ = godotenv.Load(".env")
	cfg := Configuration{}
	if err := env.Parse(&cfg); err != nil {
		panic(err)
	}
	return cfg
}
