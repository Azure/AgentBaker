#! /bin/bash -e

# Cleanup function to restore the system to normal on exit or crash
function cleanup {
    # Remove iptables rules on shutdown
    while /usr/sbin/iptables -t raw -D PREROUTING -d 100.127.0.10/32 -p tcp -m comment --comment "aks-local-dns: skip conntrack for pod DNS queries" -j NOTRACK 2>/dev/null; do
        printf "Deleted iptables rule.\n"
    done

    while /usr/sbin/iptables -t raw -D PREROUTING -d 100.127.0.10/32 -p udp -m comment --comment "aks-local-dns: skip conntrack for pod DNS queries" -j NOTRACK 2>/dev/null; do
        printf "Deleted iptabels rule.\n"
    done

    # Revert the changes made to the DNS configuration
    /bin/rm -f /run/systemd/network/10-netplan-eth0.network.d/70-aks-local-dns.conf
    /usr/bin/networkctl reload

    # Delete the dummy interface
    /usr/sbin/ip link del name aks-local-dns
}
trap "exit 1"  HUP INT PIPE QUIT TERM
trap "cleanup" EXIT

# Make sure systemd-resolved is being used
/usr/bin/ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf

# Create a dummy interface listening on the link-local IP and the cluster DNS service IP
/usr/sbin/ip link add name aks-local-dns type dummy
/usr/sbin/ip link set up dev aks-local-dns
/usr/sbin/ip addr add 169.254.20.10/32 dev aks-local-dns
/usr/sbin/ip addr add 100.127.0.10/32 dev aks-local-dns

# Start coredns in the background
coproc COREDNS { /opt/azure/aks-local-dns/coredns -conf /opt/azure/aks-local-dns/Corefile; }
exec {COREDNS[1]}>&-

# Wait to direct traffic to coredns until it can serve traffic from the API server
declare -i ATTEMPTS=0
printf "Waiting for coredns to start and be able to serve traffic..."
until /usr/bin/dig +short +tries=1 +timeout=5 kubernetes.default.svc.cluster.local. @169.254.20.10 >/dev/null 2>&1; do
    if [ $ATTEMPTS -ge 12 ]; then
        printf "\nERROR: coredns failed to come online!\n"
        exit 255
    fi
    /usr/bin/sleep 1
    printf "."
    ATTEMPTS+=1
done
printf "done.\n"

# Add IPtables rules that skip conntrack for DNS connections coming from pods
/usr/sbin/iptables -t raw -A PREROUTING -d 100.127.0.10/32 -p tcp -m comment --comment "aks-local-dns: skip conntrack for pod DNS queries" -j NOTRACK
/usr/sbin/iptables -t raw -A PREROUTING -d 100.127.0.10/32 -p udp -m comment --comment "aks-local-dns: skip conntrack for pod DNS queries" -j NOTRACK

# Disable DNS from DHCP and point the system at aks-local-dns
mkdir -p /run/systemd/network/10-netplan-eth0.network.d
printf "[Network]\nDNS=169.254.20.10\n\n[DHCP]\nUseDNS=false\n" > /run/systemd/network/10-netplan-eth0.network.d/70-aks-local-dns.conf
chmod -R ugo+rX /run/systemd/network/10-netplan-eth0.network.d
networkctl reload

# Enable cluster DNS from the node by adding cluster.local as a domain on the dummy interface
resolvectl dns aks-local-dns 169.254.20.10
resolvectl domain aks-local-dns cluster.local

# Print the output from coredns so it goes into the system journal
while read -u ${COREDNS[0]} line; do printf "$line\n"; done
