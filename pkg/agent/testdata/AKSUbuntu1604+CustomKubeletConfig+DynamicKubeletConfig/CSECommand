echo $(date),$(hostname) > /var/log/azure/cluster-provision-cse-output.log; for i in $(seq 1 1200); do grep -Fq "EOF" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done;  { ADMINUSER=azureuser MOBY_VERSION= TENANT_ID=tenantID KUBERNETES_VERSION=1.16.13 HYPERKUBE_URL=hyperkube-amd64:v1.16.13 KUBE_BINARY_URL= CUSTOM_KUBE_BINARY_URL= KUBEPROXY_URL= APISERVER_PUBLIC_KEY= SUBSCRIPTION_ID=subID RESOURCE_GROUP=resourceGroupName LOCATION=southcentralus VM_TYPE=vmss SUBNET=subnet1 NETWORK_SECURITY_GROUP=aks-agentpool-36873793-nsg VIRTUAL_NETWORK=aks-vnet-07752737 VIRTUAL_NETWORK_RESOURCE_GROUP=MC_rg ROUTE_TABLE=aks-agentpool-36873793-routetable PRIMARY_AVAILABILITY_SET= PRIMARY_SCALE_SET=aks-agent2-36873793-vmss SERVICE_PRINCIPAL_CLIENT_ID=ClientID NETWORK_PLUGIN= NETWORK_POLICY= VNET_CNI_PLUGINS_URL=https://acs-mirror.azureedge.net/azure-cni/v1.1.3/binaries/azure-vnet-cni-linux-amd64-v1.1.3.tgz CNI_PLUGINS_URL=https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.6.tgz CLOUDPROVIDER_BACKOFF=<nil> CLOUDPROVIDER_BACKOFF_MODE= CLOUDPROVIDER_BACKOFF_RETRIES=0 CLOUDPROVIDER_BACKOFF_EXPONENT=0 CLOUDPROVIDER_BACKOFF_DURATION=0 CLOUDPROVIDER_BACKOFF_JITTER=0 CLOUDPROVIDER_RATELIMIT=<nil> CLOUDPROVIDER_RATELIMIT_QPS=0 CLOUDPROVIDER_RATELIMIT_QPS_WRITE=0 CLOUDPROVIDER_RATELIMIT_BUCKET=0 CLOUDPROVIDER_RATELIMIT_BUCKET_WRITE=0 LOAD_BALANCER_DISABLE_OUTBOUND_SNAT=<nil> USE_MANAGED_IDENTITY_EXTENSION=false USE_INSTANCE_METADATA=false LOAD_BALANCER_SKU= EXCLUDE_MASTER_FROM_STANDARD_LB=true MAXIMUM_LOADBALANCER_RULE_COUNT=0 CONTAINER_RUNTIME= CLI_TOOL= CONTAINERD_DOWNLOAD_URL_BASE=https://storage.googleapis.com/cri-containerd-release/ NETWORK_MODE= KUBE_BINARY_URL= USER_ASSIGNED_IDENTITY_ID=userAssignedID API_SERVER_NAME= IS_VHD=true GPU_NODE=false SGX_NODE=false MIG_NODE=false CONFIG_GPU_DRIVER_IF_NEEDED=true ENABLE_GPU_DEVICE_PLUGIN_IF_NEEDED=false TELEPORTD_PLUGIN_DOWNLOAD_URL= CONTAINERD_VERSION= CONTAINERD_PACKAGE_URL= RUNC_VERSION= RUNC_PACKAGE_URL= ENABLE_HOSTS_CONFIG_AGENT="false" DISABLE_SSH="false" SHOULD_CONFIGURE_HTTP_PROXY_CA="false" SHOULD_CONFIGURE_CUSTOM_CA_TRUST="false" OUTBOUND_COMMAND="retrycmd_if_failure() { r=$1; w=$2; t=$3; shift && shift && shift; for i in $(seq 1 $r); do timeout $t ${@}; [ $? -eq 0  ] && break || if [ $i -eq $r ]; then return 1; else sleep $w; fi; done }; ERR_OUTBOUND_CONN_FAIL=50; retrycmd_if_failure 50 1 5 nc -vz mcr.microsoft.com 443 >> /var/log/azure/cluster-provision-cse-output.log 2>&1 || time nc -vz mcr.microsoft.com 443 || exit $ERR_OUTBOUND_CONN_FAIL;" NEEDS_CONTAINERD="false" TELEPORT_ENABLED="false" IS_KRUSTLET="false" GPU_NEEDS_FABRIC_MANAGER="false" NEEDS_DOCKER_LOGIN="false" IPV6_DUAL_STACK_ENABLED="false" ENABLE_UNATTENDED_UPGRADES="true" ENSURE_NO_DUPE_PROMISCUOUS_BRIDGE="false" SHOULD_CONFIG_SWAP_FILE="false" SHOULD_CONFIG_TRANSPARENT_HUGE_PAGE="false"      TARGET_CLOUD="AzurePublicCloud" TARGET_ENVIRONMENT="AzurePublicCloud" CUSTOM_ENV_JSON="" IS_CUSTOM_CLOUD="false" CSE_HELPERS_FILEPATH="/opt/azure/containers/provision_source.sh" CSE_DISTRO_HELPERS_FILEPATH="/opt/azure/containers/provision_source_distro.sh" CSE_INSTALL_FILEPATH="/opt/azure/containers/provision_installs.sh" CSE_DISTRO_INSTALL_FILEPATH="/opt/azure/containers/provision_installs_distro.sh" CSE_CONFIG_FILEPATH="/opt/azure/containers/provision_configs.sh" AZURE_PRIVATE_REGISTRY_SERVER="" HAS_CUSTOM_SEARCH_DOMAIN="false" CUSTOM_SEARCH_DOMAIN_FILEPATH="/opt/azure/containers/setup-custom-search-domains.sh" CLIENT_TLS_BOOTSTRAPPING_ENABLED="false" DHCPV6_SERVICE_FILEPATH="/etc/systemd/system/dhcpv6.service" DHCPV6_CONFIG_FILEPATH="/opt/azure/containers/enable-dhcpv6.sh" THP_ENABLED="" THP_DEFRAG="" HTTP_PROXY_URLS="" HTTPS_PROXY_URLS="" NO_PROXY_URLS="" KUBELET_CONFIG_FILE_ENABLED="true" SWAP_FILE_SIZE_MB="0" KUBELET_CONFIG_FILE_CONTENT="{     "kind": "KubeletConfiguration",     "apiVersion": "kubelet.config.k8s.io/v1beta1",     "staticPodPath": "/etc/kubernetes/manifests",     "address": "0.0.0.0",     "readOnlyPort": 10255,     "tlsCertFile": "/etc/kubernetes/certs/kubeletserver.crt",     "tlsPrivateKeyFile": "/etc/kubernetes/certs/kubeletserver.key",     "tlsCipherSuites": [         "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",         "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",         "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",         "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",         "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",         "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",         "TLS_RSA_WITH_AES_256_GCM_SHA384",         "TLS_RSA_WITH_AES_128_GCM_SHA256"     ],     "rotateCertificates": true,     "authentication": {         "x509": {             "clientCAFile": "/etc/kubernetes/certs/ca.crt"         },         "webhook": {             "enabled": true         },         "anonymous": {}     },     "authorization": {         "mode": "Webhook",         "webhook": {}     },     "eventRecordQPS": 0,     "clusterDomain": "cluster.local",     "clusterDNS": [         "10.0.0.10"     ],     "streamingConnectionIdleTimeout": "4h0m0s",     "nodeStatusUpdateFrequency": "10s",     "imageGCHighThresholdPercent": 90,     "imageGCLowThresholdPercent": 70,     "cgroupsPerQOS": true,     "cpuManagerPolicy": "static",     "topologyManagerPolicy": "best-effort",     "maxPods": 110,     "podPidsLimit": 12345,     "resolvConf": "/etc/resolv.conf",     "cpuCFSQuota": false,     "cpuCFSQuotaPeriod": "200ms",     "evictionHard": {         "memory.available": "750Mi",         "nodefs.available": "10%",         "nodefs.inodesFree": "5%"     },     "protectKernelDefaults": true,     "featureGates": {         "CustomCPUCFSQuotaPeriod": true,         "DynamicKubeletConfig": false,         "PodPriority": true,         "RotateKubeletServerCertificate": true,         "TopologyManager": true,         "a": false,         "x": false     },     "containerLogMaxSize": "1000M",     "containerLogMaxFiles": 99,     "systemReserved": {         "cpu": "2",         "memory": "1Gi"     },     "kubeReserved": {         "cpu": "100m",         "memory": "1638Mi"     },     "enforceNodeAllocatable": [         "pods"     ],     "allowedUnsafeSysctls": [         "kernel.msg*",         "net.ipv4.route.min_pmtu"     ] }" GPU_DRIVER_VERSION="cuda-510.47.03" /usr/bin/nohup /bin/bash -xc "/bin/bash /opt/azure/containers/provision_start.sh"  } >> /var/log/azure/cluster-provision-cse-output.log 