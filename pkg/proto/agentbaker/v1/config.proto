syntax = "proto3";

package agentbaker.v1;

// illustrative division only
message Configuration {
  // System Configuration
  
  string cluster_certificate_authority = 1;

  // only required until Secure TLS bootstrapping in place
  // would use kubelet identity after that.
  string tls_bootstrap_token = 2;

  // cluster/user config
  string kubernetes_version = 3; // Q: can this be auto-detected? Or is this part of specifying the desired node version?
    // removed kubernetesHyperkubeSpec
  string kube_binary_url = 4;      // maybe we can combine this and custom_kube_binary_url later once we figure out the logic of how they are used.
  string custom_kube_binary_url = 5;
  string kubeproxy_url = 6;
  ApiServerConfig apiserver_config = 7;
  string subscription_id = 8;
  string resource_group = 9;
  string location = 10;
  string vm_type = 11;  
  
  string primary_availability_set = 12;
  string primary_scale_set = 13;
  
  CloudProviderConfig cloud_provider_config = 14;
  IdentityConfiguration identity_configuration = 15;

  RuncConfig runc_config = 16;

  // ... and a bunch of user-specified config
  string repo_depot_endpoint = 17;
  string linux_admin_username = 18;
    // removed mobyVersion
  string tenant_id = 19;
  bool use_instance_metadata = 20;
  LoadBalancerConfig load_balancer_config = 21;
    // removed containerRuntime
    // removed cliTool because docker is deprecated. Only "ctr" will be supported.
  ContainerdConfig containerd_config = 22;
  bool is_vhd = 23;
  GpuConfig gpu_config = 24;
  bool is_sgx_node = 25;
  TeleportConfig teleport_config = 26;
  // removed NEEDS_CONTAINERD because it's always needed now

  HttpProxyConfig http_proxy_configuration = 27;
  FeatureState ssh_status = 28;
  FeatureState unattended_upgrade_status = 29;
  string message_of_the_day = 30;
  string swap_file_size_mb = 31;
  SysctlConfig sysctls = 32;
  KubeletConfiguration kubelet_configuration = 33;
  optional string gpu_instance_profile = 34;
  FeatureState hosts_config_agent_status = 35;
  CustomCaTrustConfig custom_ca_trust_config = 36;
}

message KubeletConfiguration {
  // TODO(ace): remove these/make api defensible
  repeated string kubelet_flags = 1;
  map<string, string> kubelet_node_labels = 2;
  repeated Taint taints = 3;
  repeated Taint startup_taints = 4;
  KubeletDiskType kubelet_disk_type = 5;
}

message SysctlConfig {
  repeated Sysctl sysctls = 1;
}

enum FeatureState {
  FEATURE_STATE_UNSPECIFIED = 0;
  FEATURE_STATE_ENABLED = 1;
  FEATURE_STATE_DISABLED = 2;
}

message IdentityConfiguration {
  IdentityType identity_type = 1; // Q: I am assuming this is a better pattern than Oneof?
  string service_principal_id = 2;
  string service_principal_secret = 3;
  string assigned_identity_id = 4;  //could be user or system assigned, depending on the type
}

enum IdentityType {
  IDENTITY_TYPE_UNSPECIFIED = 0;
  IDENTITY_TYPE_SERVICE_PRINCIPAL = 1;
  IDENTITY_TYPE_SYSTEM_IDENTITY = 2;
  IDENTITY_TYPE_USER_IDENTITY = 3;
}

enum NetworkPluginType {
  NETWORK_PLUGIN_TYPE_UNSPECIFIED = 0;
  NETWORK_PLUGIN_TYPE_NONE = 1;
  NETWORK_PLUGIN_TYPE_AZURE = 2;
  NETWORK_PLUGIN_TYPE_KUBENET = 3;
}

enum NetworkPolicyType {
  NETWORK_POLICY_TYPE_UNSPECIFIED = 0;
  NETWORK_POLICY_TYPE_NONE = 1;
  NETWORK_POLICY_TYPE_AZURE = 2;
  NETWORK_POLICY_TYPE_CALICO = 3;
}

message HttpProxyConfig {
  optional string http_proxy = 1;
  optional string https_proxy = 2;
  repeated string no_proxy = 3;
  optional string trusted_certificate_authority = 4;
  FeatureState http_proxy_config_status = 5;
  FeatureState http_proxy_ca_config_status = 6;
  string http_proxy_trusted_ca = 7;
}

message CustomCaTrustConfig {
  FeatureState custom_ca_trust_status = 1;
  int32 custom_ca_trust_count = 2;
  repeated string custom_ca_certs = 3;
}

enum KubeletDiskType {
  KUBELET_DISK_TYPE_UNSPECIFIED = 0;
  KUBELET_DISK_TYPE_OS_DISK = 1;
  KUBELET_DISK_TYPE_TEMP_DISK = 2;
}

message Taint {
  string key = 1;
  string effect = 2;
}

message Sysctl {
  string token = 1;
  string value = 2;
}

message VirtualNetworkConfig {
  string name = 1;
  string resource_group = 2;
}

message CloudProviderConfig {
  CloudProviderBackoffConfig cloud_provider_backoff_config = 1;
  CloudProviderRateLimitConfig cloud_provider_rate_limit_config = 2;
  bool cloud_provider_disable_out_bound_snat = 3;
}

message CloudProviderBackoffConfig {
  FeatureState status = 1;
  string mode = 2;
  int32 retries = 3;
  double exponent = 4;
  int32 duration = 5;
  double jitter = 6;
}

message CloudProviderRateLimitConfig {
  FeatureState status = 1;
  double qps = 2;
  double qps_write = 3;
  int32 bucket = 4;
  int32 bucket_write = 5;  
}

message LoadBalancerConfig {
  LoadBalancerSku load_balancer_sku = 1;
  bool exclude_master_from_standard_load_balancer = 2;
  int32 max_load_balancer_rule_count = 3;
}

enum LoadBalancerSku {
  LOAD_BALANCER_SKU_UNSPECIFIED = 0;
  LOAD_BALANCER_SKU_BASIC = 1;  // to be confirmed
  LOAD_BALANCER_SKU_STANDARD = 2;
}

enum NetworkMode {
  NETWORK_MODE_UNSPECIFIED = 0;
  NETWORK_MODE_L2BRIDGE = 1;
  //could be more. Needs to check.
}

message ApiServerConfig {
  string apiserver_public_key = 1;
  string apiserver_name = 2;
  string api_server_endpoint = 3;
}

message GpuConfig {
  FeatureState status = 1;
  FeatureState is_mig_node = 2;
  FeatureState config_gpu_driver_if_needed = 3;    //we can revise this name later when we clearly understand what it's doing
  FeatureState enable_gpu_device_plugin_if_needed = 4; //we can revise this name later when we clearly understand what it's doing
  FeatureState fabric_manager_status = 5;  //consider just extracting vm_size since both GPUNeedsFabricManager and getGPUDriverVersion are just depending ont vm_size.
}

message ContainerdConfig {
  string containerd_download_url_base = 1;
  string containerd_version = 2;
  string containerd_package_url = 3;
}

message TeleportConfig {
  FeatureState status = 1;
  string teleportd_plugin_download_url = 2;
}

message RuncConfig {
  string runc_version = 1;
  string runc_package_url = 2;
}

message NetworkConfig {
  NetworkPluginType network_plugin = 1;
  NetworkPolicyType network_policy = 2;
  NetworkMode network_mode = 3;
  string network_security_group = 4;
  VirtualNetworkConfig virtual_network_config = 5;
  string vnet_cni_plugins_url = 6;
  string cni_plugins_url = 7;
  string subnet = 8;
  string route_table = 9;
}