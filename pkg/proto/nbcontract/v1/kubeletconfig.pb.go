// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: pkg/proto/nbcontract/v1/kubeletconfig.proto

package nbcontractv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KubeletDiskType int32

const (
	KubeletDiskType_KUBELET_DISK_TYPE_UNSPECIFIED KubeletDiskType = 0
	KubeletDiskType_KUBELET_DISK_TYPE_OS_DISK     KubeletDiskType = 1
	KubeletDiskType_KUBELET_DISK_TYPE_TEMP_DISK   KubeletDiskType = 2
)

// Enum value maps for KubeletDiskType.
var (
	KubeletDiskType_name = map[int32]string{
		0: "KUBELET_DISK_TYPE_UNSPECIFIED",
		1: "KUBELET_DISK_TYPE_OS_DISK",
		2: "KUBELET_DISK_TYPE_TEMP_DISK",
	}
	KubeletDiskType_value = map[string]int32{
		"KUBELET_DISK_TYPE_UNSPECIFIED": 0,
		"KUBELET_DISK_TYPE_OS_DISK":     1,
		"KUBELET_DISK_TYPE_TEMP_DISK":   2,
	}
)

func (x KubeletDiskType) Enum() *KubeletDiskType {
	p := new(KubeletDiskType)
	*p = x
	return p
}

func (x KubeletDiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubeletDiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_nbcontract_v1_kubeletconfig_proto_enumTypes[0].Descriptor()
}

func (KubeletDiskType) Type() protoreflect.EnumType {
	return &file_pkg_proto_nbcontract_v1_kubeletconfig_proto_enumTypes[0]
}

func (x KubeletDiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubeletDiskType.Descriptor instead.
func (KubeletDiskType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescGZIP(), []int{0}
}

type KubeletConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(ace): remove these/make api defensible
	KubeletFlags             []string          `protobuf:"bytes,1,rep,name=kubelet_flags,json=kubeletFlags,proto3" json:"kubelet_flags,omitempty"`
	KubeletNodeLabels        map[string]string `protobuf:"bytes,2,rep,name=kubelet_node_labels,json=kubeletNodeLabels,proto3" json:"kubelet_node_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Taints                   []*Taint          `protobuf:"bytes,3,rep,name=taints,proto3" json:"taints,omitempty"`
	StartupTaints            []*Taint          `protobuf:"bytes,4,rep,name=startup_taints,json=startupTaints,proto3" json:"startup_taints,omitempty"`
	KubeletDiskType          KubeletDiskType   `protobuf:"varint,5,opt,name=kubelet_disk_type,json=kubeletDiskType,proto3,enum=nbcontract.v1.KubeletDiskType" json:"kubelet_disk_type,omitempty"`
	KubeletConfigFileEnabled bool              `protobuf:"varint,6,opt,name=kubelet_config_file_enabled,json=kubeletConfigFileEnabled,proto3" json:"kubelet_config_file_enabled,omitempty"`
	KubeletConfigFileContent string            `protobuf:"bytes,7,opt,name=kubelet_config_file_content,json=kubeletConfigFileContent,proto3" json:"kubelet_config_file_content,omitempty"`
}

func (x *KubeletConfiguration) Reset() {
	*x = KubeletConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeletConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeletConfiguration) ProtoMessage() {}

func (x *KubeletConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeletConfiguration.ProtoReflect.Descriptor instead.
func (*KubeletConfiguration) Descriptor() ([]byte, []int) {
	return file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescGZIP(), []int{0}
}

func (x *KubeletConfiguration) GetKubeletFlags() []string {
	if x != nil {
		return x.KubeletFlags
	}
	return nil
}

func (x *KubeletConfiguration) GetKubeletNodeLabels() map[string]string {
	if x != nil {
		return x.KubeletNodeLabels
	}
	return nil
}

func (x *KubeletConfiguration) GetTaints() []*Taint {
	if x != nil {
		return x.Taints
	}
	return nil
}

func (x *KubeletConfiguration) GetStartupTaints() []*Taint {
	if x != nil {
		return x.StartupTaints
	}
	return nil
}

func (x *KubeletConfiguration) GetKubeletDiskType() KubeletDiskType {
	if x != nil {
		return x.KubeletDiskType
	}
	return KubeletDiskType_KUBELET_DISK_TYPE_UNSPECIFIED
}

func (x *KubeletConfiguration) GetKubeletConfigFileEnabled() bool {
	if x != nil {
		return x.KubeletConfigFileEnabled
	}
	return false
}

func (x *KubeletConfiguration) GetKubeletConfigFileContent() string {
	if x != nil {
		return x.KubeletConfigFileContent
	}
	return ""
}

type Taint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Effect string `protobuf:"bytes,2,opt,name=effect,proto3" json:"effect,omitempty"`
}

func (x *Taint) Reset() {
	*x = Taint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taint) ProtoMessage() {}

func (x *Taint) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taint.ProtoReflect.Descriptor instead.
func (*Taint) Descriptor() ([]byte, []int) {
	return file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescGZIP(), []int{1}
}

func (x *Taint) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Taint) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

var File_pkg_proto_nbcontract_v1_kubeletconfig_proto protoreflect.FileDescriptor

var file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x62, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65,
	0x74, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6e,
	0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x22, 0xa2, 0x04, 0x0a,
	0x14, 0x4b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x75,
	0x62, 0x65, 0x6c, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x6a, 0x0a, 0x13, 0x6b, 0x75,
	0x62, 0x65, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x62, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x61,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x5f,
	0x74, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e,
	0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x69,
	0x6e, 0x74, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x54, 0x61, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x4a, 0x0a, 0x11, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x73,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6e,
	0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x6c, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6b, 0x75,
	0x62, 0x65, 0x6c, 0x65, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a,
	0x1b, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x1b,
	0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x44, 0x0a, 0x16, 0x4b,
	0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x31, 0x0a, 0x05, 0x54, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x2a, 0x74, 0x0a, 0x0f, 0x4b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x4b, 0x55, 0x42, 0x45, 0x4c,
	0x45, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4b, 0x55,
	0x42, 0x45, 0x4c, 0x45, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x4b, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4b, 0x55, 0x42,
	0x45, 0x4c, 0x45, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x45, 0x4d, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x4b, 0x10, 0x02, 0x42, 0xbe, 0x01, 0x0a, 0x11, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x42, 0x12, 0x4b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x6b, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x62,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x62, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x58, 0x58, 0xaa, 0x02,
	0x0d, 0x4e, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0d, 0x4e, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x19, 0x4e, 0x62, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4e, 0x62, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescOnce sync.Once
	file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescData = file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDesc
)

func file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescGZIP() []byte {
	file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescOnce.Do(func() {
		file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescData)
	})
	return file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDescData
}

var file_pkg_proto_nbcontract_v1_kubeletconfig_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_proto_nbcontract_v1_kubeletconfig_proto_goTypes = []interface{}{
	(KubeletDiskType)(0),         // 0: nbcontract.v1.KubeletDiskType
	(*KubeletConfiguration)(nil), // 1: nbcontract.v1.KubeletConfiguration
	(*Taint)(nil),                // 2: nbcontract.v1.Taint
	nil,                          // 3: nbcontract.v1.KubeletConfiguration.KubeletNodeLabelsEntry
}
var file_pkg_proto_nbcontract_v1_kubeletconfig_proto_depIdxs = []int32{
	3, // 0: nbcontract.v1.KubeletConfiguration.kubelet_node_labels:type_name -> nbcontract.v1.KubeletConfiguration.KubeletNodeLabelsEntry
	2, // 1: nbcontract.v1.KubeletConfiguration.taints:type_name -> nbcontract.v1.Taint
	2, // 2: nbcontract.v1.KubeletConfiguration.startup_taints:type_name -> nbcontract.v1.Taint
	0, // 3: nbcontract.v1.KubeletConfiguration.kubelet_disk_type:type_name -> nbcontract.v1.KubeletDiskType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_proto_nbcontract_v1_kubeletconfig_proto_init() }
func file_pkg_proto_nbcontract_v1_kubeletconfig_proto_init() {
	if File_pkg_proto_nbcontract_v1_kubeletconfig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeletConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_proto_nbcontract_v1_kubeletconfig_proto_goTypes,
		DependencyIndexes: file_pkg_proto_nbcontract_v1_kubeletconfig_proto_depIdxs,
		EnumInfos:         file_pkg_proto_nbcontract_v1_kubeletconfig_proto_enumTypes,
		MessageInfos:      file_pkg_proto_nbcontract_v1_kubeletconfig_proto_msgTypes,
	}.Build()
	File_pkg_proto_nbcontract_v1_kubeletconfig_proto = out.File
	file_pkg_proto_nbcontract_v1_kubeletconfig_proto_rawDesc = nil
	file_pkg_proto_nbcontract_v1_kubeletconfig_proto_goTypes = nil
	file_pkg_proto_nbcontract_v1_kubeletconfig_proto_depIdxs = nil
}
