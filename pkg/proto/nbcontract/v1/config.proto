syntax = "proto3";

package nbcontract.v1;

import "pkg/proto/nbcontract/v1/httpproxyconfig.proto";
import "pkg/proto/nbcontract/v1/gpuconfig.proto";
import "pkg/proto/nbcontract/v1/customlinuxosconfig.proto";
import "pkg/proto/nbcontract/v1/kubebinaryconfig.proto";
import "pkg/proto/nbcontract/v1/customsearchdomainconfig.proto";
import "pkg/proto/nbcontract/v1/containerdconfig.proto";
import "pkg/proto/nbcontract/v1/networkconfig.proto";
import "pkg/proto/nbcontract/v1/authconfig.proto";
import "pkg/proto/nbcontract/v1/kubeletconfig.proto";
import "pkg/proto/nbcontract/v1/teleportconfig.proto";
import "pkg/proto/nbcontract/v1/runcconfig.proto";
import "pkg/proto/nbcontract/v1/customcloudconfig.proto";
import "pkg/proto/nbcontract/v1/apiserverconfig.proto";
import "pkg/proto/nbcontract/v1/tlsbootstrappingconfig.proto";
import "pkg/proto/nbcontract/v1/clusterconfig.proto";

enum WorkloadRuntime {
  WR_UNSPECIFIED = 0;
  OCI_CONTAINER= 1;
  WASM_WASI = 2;
}

message Configuration {
  
  // Semantic version of this node bootstrap contract
  string version = 1;

  // Kubernetes certificate authority (CA) certificate, required by the node to establish TLS with the API server
  string kubernetes_ca_cert = 2;

  // TLS bootstrap config 
  TLSBootstrappingConfig tls_bootstrapping_config = 3;

  // Cluster/user config
  string kubernetes_version = 4; // Q: can this be auto-detected? Or is this part of specifying the desired node version?

  // Kube binary URL config
  KubeBinaryConfig kube_binary_config = 5;

  // Custom cloud config
  CustomCloudConfig custom_cloud_config = 6;

  // Kube proxy URL
  string kube_proxy_url = 7;

  // Kubernetes API server configuration
  ApiServerConfig api_server_config = 8;
  
  // Various Kubernetes cluster level configuration
  ClusterConfig cluster_config = 9;

  // Authentication configuration
  AuthConfig auth_config = 10;

  // The CLI tool runc configuration
  RuncConfig runc_config = 11;

  // The VM size of the node
  string vm_size = 12;

  // Linux admin username. If not specified, the default value is "azureuser"
  string linux_admin_username = 13;

  // Containerd configuration
  ContainerdConfig containerd_config = 14;

  // Specifies whether the node is a VHD node. This is still needed for some customized scenarios.
  bool is_vhd = 15;

  // Network configuration. We assumed network mode is always "transparent" now so it's removed from the contract.
  NetworkConfig network_config = 16;

  // Teleport configuration
  TeleportConfig teleport_config = 17;

  // Specifies whether SSH is enabled or disabled on the VM node
  bool enable_ssh = 18;

  // Specifies whether unattended upgrade is enabled or disabled on the VM node
  bool enable_unattended_upgrade = 19;

  // The message of the day that is displayed on the VM node when a user logs in
  string message_of_the_day = 20;

  // Kubelet configuration
  KubeletConfig kubelet_config = 21;

  // Specifies whether the hosts config agent is enabled or disabled on the VM node
  bool enable_hosts_config_agent = 22;

  // Custom CA certificates to be added to the system trust store
  repeated string custom_ca_certs = 23;  

  // A local file path where cluster provision cse output should be stored
  string provision_output = 24;

  // Workload runtime, e.g., either "OCIContainer" or "WasmWasi", currently.
  WorkloadRuntime workload_runtime = 25;

  // Specifies whether IPv6 dual stack is enabled or disabled on the VM node
  bool ipv6_dual_stack_enabled = 26;

  // Command to use for outbound traffic
  string outbound_command = 27; 

  // specifies whether to ensure no duplicate promiscuous bridge
  bool ensure_no_dupe_promiscuous_bridge = 28; 

  // Custom search domain configurations
  CustomSearchDomain custom_search_domain = 29;

  // Custom Linux OS configurations including SwapFile, SysCtl configs, etc.
  CustomLinuxOSConfig custom_linux_os_config = 30;

  // Azure private registry server URI
  string azure_private_registry_server = 31;

  //Private egress proxy address
  string private_egress_proxy_address = 32;

  // Specifies whether artifact streaming is enabled or disabled on the VM node
  bool enable_artifact_streaming = 33;

  // Specifies whether the node is a Kata node
  bool is_kata = 34; 

  // Specifies whether the node needs cgroupv2.
  // When we actually work on the go binary, we should be able to query from the system. By then we can remove this.
  bool needs_cgroupv2 = 35;

  // HTTP/HTTPS proxy configuration for the node
  HTTPProxyConfig http_proxy_config = 36;

  // GPU configuration for the node
  GPUConfig gpu_config = 37;
}