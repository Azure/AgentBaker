syntax = "proto3";

package nbcontract.v1;

import "pkg/proto/nbcontract/v1/httpproxyconfig.proto";
import "pkg/proto/nbcontract/v1/gpuconfig.proto";
import "pkg/proto/nbcontract/v1/customlinuxosconfig.proto";
import "pkg/proto/nbcontract/v1/kubebinaryconfig.proto";
import "pkg/proto/nbcontract/v1/customsearchdomainconfig.proto";
import "pkg/proto/nbcontract/v1/containerdconfig.proto";
import "pkg/proto/nbcontract/v1/networkconfig.proto";
import "pkg/proto/nbcontract/v1/identityconfig.proto";
import "pkg/proto/nbcontract/v1/loadbalancerconfig.proto";
import "pkg/proto/nbcontract/v1/kubeletconfig.proto";
import "pkg/proto/nbcontract/v1/featurestate.proto";
import "pkg/proto/nbcontract/v1/teleportconfig.proto";
import "pkg/proto/nbcontract/v1/runcconfig.proto";
import "pkg/proto/nbcontract/v1/customcloudconfig.proto";
import "pkg/proto/nbcontract/v1/apiserverconfig.proto";
import "pkg/proto/nbcontract/v1/tlsbootstrappingconfig.proto";
import "pkg/proto/nbcontract/v1/nodepoolprofile.proto";

enum WorkloadRuntime {
  WR_UNSPECIFIED = 0;
  OCI_CONTAINER= 1;
  WASM_WASI = 2;
}

// illustrative division only
message Configuration {
  // System Configuration
  string cluster_certificate_authority = 1;
  TLSBootstrappingConfig tls_bootstrapping_config = 2;
  

  // cluster/user config
  string kubernetes_version = 3; // Q: can this be auto-detected? Or is this part of specifying the desired node version?
  KubeBinaryConfig kube_binary_config = 4;
  optional CustomCloudConfig custom_cloud_config = 5;
  string kubeproxy_url = 6;
  ApiServerConfig apiserver_config = 7;
  string subscription_id = 8;
  string resource_group = 9;
  string location = 10;
  string vm_type = 11;  
  
  string primary_availability_set = 12;
  string primary_scale_set = 13;
  
  IdentityConfig identity_config = 15;
  RuncConfig runc_config = 16;
  NodePoolProfileConfig node_pool_profile_config = 17;

  // ... and a bunch of user-specified config
  string linux_admin_username = 18;
  string tenant_id = 19;
  bool use_instance_metadata = 20;
  LoadBalancerConfig load_balancer_config = 21;
  ContainerdConfig containerd_config = 22;
  bool is_vhd = 23;
  NetworkConfig network_config = 24;
  bool is_sgx_node = 25;
  TeleportConfig teleport_config = 26;

  // enable_ssh specifies whether SSH is enabled or disabled on the VM node
  bool enable_ssh = 27;

  // enable_unattended_upgrade specifies whether unattended upgrade is enabled or disabled on the VM node
  bool enable_unattended_upgrade = 28;

  // message_of_the_day specifies the message of the day that is displayed on the VM node when a user logs in
  string message_of_the_day = 29;

  // kubelet_config specifies the kubelet configuration
  KubeletConfig kubelet_config = 31;

  // enable_hosts_config_agent specifies whether the hosts config agent is enabled or disabled on the VM node
  bool enable_hosts_config_agent = 32;

  // custom_ca_certs specifies the custom CA certificates
  repeated string custom_ca_certs = 33;  

  // provision_output specifies where cluster provision cse output should be stored at
  string provision_output = 34;

  // workload_runtime describes the workload runtime, e.g., either "OCIContainer" or "WasmWasi", currently.
  WorkloadRuntime workload_runtime = 40;

  // ipv6_dual_stack_enabled specifies whether IPv6 dual stack is enabled or disabled on the VM node
  bool ipv6_dual_stack_enabled = 42;

  // outbound_command specifies the command to use for outbound traffic
  string outbound_command = 43; 

  // ensure_no_dupe_promiscuous_bridge specifies whether to ensure no duplicate promiscuous bridge
  bool ensure_no_dupe_promiscuous_bridge = 45; 

  // custom_search_domain specifies the custom search domain configuration
  CustomSearchDomain custom_search_domain = 46;
  optional CustomLinuxOSConfig custom_linux_os_config = 47;

  // azure_private_registry_server specifies the Azure private registry server
  string azure_private_registry_server = 56;

  // private_egress_proxy_address specifies the private egress proxy address
  string private_egress_proxy_address = 57;

  // enable_artifact_streaming specifies whether artifact streaming is enabled or disabled on the VM node
  bool enable_artifact_streaming = 58;

  // is_kata specifies whether the node is a Kata node
  bool is_kata = 59; 

  // needs_cgroupv2 specifies whether the node needs cgroupv2
  bool needs_cgroupv2 = 60;

  // Here begins the final contract
  optional HTTPProxyConfig http_proxy_config = 61;
  optional GPUConfig gpu_config = 62;
}

// The following variables are removed from the contract
// Leaving them there for note. 
// All of them need default values configured in the VHD, likely in the go binary.
// will remove this section before release
/*

message CloudProviderConfig {
  CloudProviderBackoffConfig cloud_provider_backoff_config = 1;
  CloudProviderRateLimitConfig cloud_provider_rate_limit_config = 2;
  bool cloud_provider_disable_out_bound_snat = 3;
}

message CloudProviderBackoffConfig {
  FeatureState status = 1;
  string mode = 2;
  int32 retries = 3;
  double exponent = 4;
  int32 duration = 5;
  double jitter = 6;
}

message CloudProviderRateLimitConfig {
  FeatureState status = 1;
  double qps = 2;
  double qps_write = 3;
  int32 bucket = 4;
  int32 bucket_write = 5;  
}

CONTAINER_RUNTIME = "containerd"
CLI_TOOL = "ctr"

*/