syntax = "proto3";

package nbcontract.v1;

import "pkg/proto/nbcontract/v1/httpproxyconfig.proto";
import "pkg/proto/nbcontract/v1/gpuconfig.proto";
import "pkg/proto/nbcontract/v1/customlinuxosconfig.proto";
import "pkg/proto/nbcontract/v1/kubebinaryconfig.proto";
import "pkg/proto/nbcontract/v1/customsearchdomainconfig.proto";
import "pkg/proto/nbcontract/v1/containerdconfig.proto";
import "pkg/proto/nbcontract/v1/networkconfig.proto";
import "pkg/proto/nbcontract/v1/identityconfig.proto";
import "pkg/proto/nbcontract/v1/loadbalancerconfig.proto";
import "pkg/proto/nbcontract/v1/kubeletconfig.proto";
import "pkg/proto/nbcontract/v1/featurestate.proto";
import "pkg/proto/nbcontract/v1/teleportconfig.proto";
import "pkg/proto/nbcontract/v1/runcconfig.proto";
import "pkg/proto/nbcontract/v1/swapfileconfig.proto";

// illustrative division only
message Configuration {
  // System Configuration
  
  string cluster_certificate_authority = 1;

  // only required until Secure TLS bootstrapping in place
  // would use kubelet identity after that.
  string tls_bootstrap_token = 2;

  // cluster/user config
  string kubernetes_version = 3; // Q: can this be auto-detected? Or is this part of specifying the desired node version?
  KubeBinaryConfig kube_binary_config = 4;
  string kubeproxy_url = 6;
  ApiServerConfig apiserver_config = 7;
  string subscription_id = 8;
  string resource_group = 9;
  string location = 10;
  string vm_type = 11;  
  
  string primary_availability_set = 12;
  string primary_scale_set = 13;
  
  IdentityConfig identity_config = 15;

  RuncConfig runc_config = 16;

  // ... and a bunch of user-specified config
  string repo_depot_endpoint = 17;
  string linux_admin_username = 18;
  string tenant_id = 19;
  bool use_instance_metadata = 20;
  LoadBalancerConfig load_balancer_config = 21;
  ContainerdConfig containerd_config = 22;
  bool is_vhd = 23;
  NetworkConfig network_config = 24;
  bool is_sgx_node = 25;
  TeleportConfig teleport_config = 26;
  FeatureState ssh_status = 27;
  FeatureState unattended_upgrade_status = 28;
  string message_of_the_day = 29;
  SwapFileConfig swap_file_config = 30;
  KubeletConfiguration kubelet_configuration = 31;
  FeatureState hosts_config_agent_status = 32;
  CustomCaTrustConfig custom_ca_trust_config = 33;
  string provision_output = 34;
  string hyperkube_url = 35; //will be removed later
  string moby_version = 36; //will be removed later
  string container_runtime = 37; //will be removed later
  string cli_tool = 38;  //will be removed later
  bool needs_containerd = 39; //will be removed later
  bool is_krustlet = 40; //can be removed, this only depends on workload runtime, which is a better contract input
  bool needs_docker_login = 41; //useless, will remove
  optional FeatureState ipv6_dual_stack_enabled = 42; //seems very specific to RP, discuss with Alex wrt Karpenter
  optional string outbound_command = 43; //this is const depending on cloud, can be removed later with smart refactoring
  optional bool enable_unattended_upgrade = 44; //seems the current API is messed up with naming, fix soon
  optional bool ensure_no_dupe_promiscuous_bridge = 45; //this is little weird, check cse_cmd.sh for actual condition
  optional CustomSearchDomain custom_search_domain = 46;
  optional nbcontract.v1.CustomLinuxOSConfig custom_linux_os_config = 47;

  CustomCloudConfig custom_cloud_config = 48;
  
  //we do not need these in the final contract, these are consts
  string cse_helper_filepath = 49;
  string cse_distro_helper_filepath = 50;
  string cse_install_filepath = 51;
  string cse_distro_install_filepath = 52;
  string cse_config_filepath = 53;

  string dhcpv6_service_filepath = 54;
  string dhcpv6_config_filepath = 55;

  string azure_private_registry_server = 56;
  string private_egress_proxy_address = 57;
  FeatureState artifact_streaming_enabled = 58;
  bool is_kata = 59; // we can calculate this on the VHD, will remove from final contract
  bool needs_cgorupv2 = 60; // we can calculate this on the VHD, will remove from final contract

  // Here begins the final contract
  optional HTTPProxyConfig http_proxy_config = 61;
  optional GPUConfig gpu_config = 62;
}

message CustomCaTrustConfig {
  FeatureState custom_ca_trust_status = 1;
  int32 custom_ca_trust_count = 2;
  repeated string custom_ca_certs = 3;
}

message ApiServerConfig {
  string apiserver_public_key = 1;
  string apiserver_name = 2;
}

message TLSBootstrapping {
  // discuss whether this should be featureState or bool
  // understand how defaulting works for enum, because we want default to be false
  FeatureState tls_bootstrapping = 1;
  FeatureState secure_tls_bootstrapping = 2;
  string tls_bootstrap_token = 3;
  string custom_secure_tls_bootstrap_appserver_appid = 4;
}

message CustomCloudConfig {
  string target_environment = 1;
  string target_cloud = 2;  // can probably get rid of this, analyze more
  bool is_custom_cloud = 3;
  string custom_env_json_content = 4; // can be generated on the VHD, also rename
}

// The following variables are removed from the contract
// Leaving them there for note. 
// All of them need default values configured in the VHD, likely in the go binary.
// will remove this section before release
/*

message CloudProviderConfig {
  CloudProviderBackoffConfig cloud_provider_backoff_config = 1;
  CloudProviderRateLimitConfig cloud_provider_rate_limit_config = 2;
  bool cloud_provider_disable_out_bound_snat = 3;
}

message CloudProviderBackoffConfig {
  FeatureState status = 1;
  string mode = 2;
  int32 retries = 3;
  double exponent = 4;
  int32 duration = 5;
  double jitter = 6;
}

message CloudProviderRateLimitConfig {
  FeatureState status = 1;
  double qps = 2;
  double qps_write = 3;
  int32 bucket = 4;
  int32 bucket_write = 5;  
}

CONTAINER_RUNTIME = "containerd"

*/