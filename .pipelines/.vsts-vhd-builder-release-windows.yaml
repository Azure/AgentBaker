name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none
pr:
  branches:
    include:
    - master
  paths:
    include:
    - .pipelines/.vsts-vhd-builder-release-windows.yaml
    - .pipelines/templates/.builder-release-template-windows.yaml
    - packer.mk
    - vhdbuilder/packer/packer-plugin.pkr.hcl
    - vhdbuilder/packer/*.ps1
    - vhdbuilder/packer/test/*.ps1
    - vhdbuilder/packer/test/run-test.sh
    - vhdbuilder/packer/backfill-cleanup.sh
    - vhdbuilder/packer/cleanup.sh
    - vhdbuilder/packer/convert-sig-to-classic-storage-account-blob.sh
    - vhdbuilder/packer/generate-vhd-publishing-info.sh
    - vhdbuilder/packer/init-variables.sh
    - vhdbuilder/packer/windows-image.env
    - vhdbuilder/packer/windows-vhd-builder-sig.json

pool:
  name: $(AZURE_POOL_NAME)

parameters:
- name: build2019containerd
  displayName: Build 2019 containerd
  type: boolean
  default: True
- name: build2022containerd
  displayName: Build 2022 containerd
  type: boolean
  default: True
- name: build2022containerdgen2
  displayName: Build 2022 containerd Gen 2
  type: boolean
  default: True
- name: build23H2
  displayName: Build 23H2
  type: boolean
  default: False
- name: build23H2gen2
  displayName: Build 23H2 Gen 2
  type: boolean
  default: False
- name: dryrun
  displayName: Dry run
  type: boolean
  default: False
- name: vhddebug
  displayName: VHD Debug
  type: boolean
  default: False

# Use variable group "ab-windows-ame-tenant" and link it to the pipeline "AKS Windows VHD Build"
# Use variable group "ab-windows-ame-tenant" and link it to the pipeline "AKS Windows VHD Build - PR check-in gate"
# Use variable group "ab-windows-ms-tenant" and link it to the pipeline "[TEST All VHDs] AKS Windows VHD Build - Msft Tenant"
variables:
  LinuxContainerImage: 'mcr.microsoft.com/onebranch/cbl-mariner/build:2.0'
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest'
resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main
extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl:
      antimalwareScan:
        enabled: true
      armory:
        enabled: false
      binskim:
        enabled: true
      cg:
        failOnAlert: false
      credscan:
        enabled: true
      eslint:
        enabled: false
      tsa:
        enabled: false
      policheck:
        enabled: true
      publishLogs:
        enabled: true
      sdtReport:
        enabled: true
      suppression:
        suppressionFile: $(Build.SourcesDirectory)/.gdn/.gdnsuppress
        suppressionSet: default
    git:
      longpaths: true
    stages:
    - template: ./templates/.onebranch-release-windows-stages.yaml