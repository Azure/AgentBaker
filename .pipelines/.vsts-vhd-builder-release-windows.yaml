name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none

pool:
  name: $(PROD_POOL_NAME)

parameters:
- name: build2019containerd
  displayName: Build 2019 containerd
  type: boolean
  default: True
- name: build2022containerd
  displayName: Build 2022 containerd
  type: boolean
  default: True
- name: build2022containerdgen2
  displayName: Build 2022 containerd Gen 2
  type: boolean
  default: True
- name: dryrun
  displayName: Dry run
  type: boolean
  default: False
- name: backfillresourcedeletion
  displayName: Perform Resource Backfill Deletion
  type: boolean
  default: True

variables:
- group: ab-vhd-windows-prod

stages:
  - stage: build_vhd_2019_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2019containerd }}', True)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=BACKFILL_RESOURCE_DELETION]${{parameters.backfillresourcedeletion}}'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4s_v3'
            echo '##vso[task.setvariable variable=WINDOWS_SKU]2019-containerd'
            echo '##vso[task.setvariable variable=WINDOWS_BASE_IMAGE_URL]$(WINDOWS_2019_BASE_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_NANO_IMAGE_URL]$(WINDOWS_2019_NANO_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_CORE_IMAGE_URL]$(WINDOWS_2019_CORE_IMAGE_URL)'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template-windows.yaml
          parameters:
            artifactName: 2019-containerd

  - stage: build_vhd_2022_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2022containerd }}', True)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=BACKFILL_RESOURCE_DELETION]${{parameters.backfillresourcedeletion}}'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4s_v3'
            echo '##vso[task.setvariable variable=WINDOWS_SKU]2022-containerd'
            echo '##vso[task.setvariable variable=WINDOWS_BASE_IMAGE_URL]$(WINDOWS_2022_BASE_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_NANO_IMAGE_URL]$(WINDOWS_2022_NANO_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_CORE_IMAGE_URL]$(WINDOWS_2022_CORE_IMAGE_URL)'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template-windows.yaml
          parameters:
            artifactName: 2022-containerd

  - stage: build_vhd_2022_containerd_gen2
    dependsOn: []
    condition: eq('${{ parameters.build2022containerdgen2 }}', True)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=BACKFILL_RESOURCE_DELETION]${{parameters.backfillresourcedeletion}}'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4s_v3'
            echo '##vso[task.setvariable variable=WINDOWS_SKU]2022-containerd-gen2'
            echo '##vso[task.setvariable variable=WINDOWS_BASE_IMAGE_URL]$(WINDOWS_2022_GEN2_BASE_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_NANO_IMAGE_URL]$(WINDOWS_2022_NANO_IMAGE_URL)'
            echo '##vso[task.setvariable variable=WINDOWS_CORE_IMAGE_URL]$(WINDOWS_2022_CORE_IMAGE_URL)'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template-windows.yaml
          parameters:
            artifactName: 2022-containerd-gen2
  
  - stage: backfill_cleanup_outdated_resources
    dependsOn: []
    condition: always()
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=BACKFILL_RESOURCE_DELETION]${{parameters.backfillresourcedeletion}}'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template-windows-cleanup.yaml