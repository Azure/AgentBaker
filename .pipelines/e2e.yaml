name: $(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr:
  branches:
    include:
    - master
    - official/*
  paths:
    include:
    - .pipelines/e2e.yaml
    - e2e
    - parts/linux
    - pkg/agent
    exclude:
    - e2e/windows
    - pkg/agent/datamodel/sig_config*.go # SIG config changes
    - pkg/agent/datamodel/*.json # SIG version changes
    
variables:
- group: ab-e2e

pool:
  name: nodesigtest-pool

jobs:
- job: Run_AgentBaker_E2E
  steps:
  - bash: |
      az login --identity
      az account set -s $(AZURE_SUBSCRIPTION_ID)
    displayName: az login
  - bash: bash .pipelines/scripts/setup_go.sh
    displayName: setup go
  - bash: |
      export PATH="/usr/local/go/bin:$PATH"
      go version

      export BUILD_ID=$(Build.BuildId)

      cd e2e
      go test -timeout 90m -v -run Test_All ./
    displayName: Run AgentBaker E2E
    env:
      VHD_BUILD_ID: $(VHD_BUILD_ID)
      ADO_PAT: $(ADO_PAT)
  - publish: $(System.DefaultWorkingDirectory)/e2e/scenario-logs
    artifact: scenario-logs
    condition: always()
  - bash: |
      set -x

      vmssResourceIds=""
      for vmssModel in e2e/scenario-logs/*/vmssId.txt; do
        resourceId=$(cat ${vmssModel})
        vmssResourceIds="${vmssResourceIds} ${resourceId}"
      done

      if [ -n "${vmssResourceIds// }" ]; then
        az resource delete --ids ${vmssResourceIds}
      fi
    displayName: ensure vmss deletion
    condition: always()
 
 
