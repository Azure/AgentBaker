name: PR_$(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none
pr:
  branches:
    include:
      - master
      - dev
  paths:
    include:
      - .pipelines/.vsts-vhd-builder-release-windows.yaml
      - .pipelines/.vsts-vhd-builder-pr-windows.yaml
      - .pipelines/templates/.template-override-components-json.yaml
      - .pipelines/templates/.template-copy-file.yaml
      - .pipelines/templates/.build-and-test-windows-vhds-template.yaml
      - .pipelines/templates/.build-and-test-windows-vhd-template.yaml
      - .pipelines/templates/.builder-release-template-windows.yaml
      - .pipelines/templates/e2e-template.yaml
      - packer.mk
      - vhdbuilder/packer/packer-plugin.pkr.hcl
      - vhdbuilder/packer/*.ps1
      - vhdbuilder/packer/test/*.ps1
      - vhdbuilder/packer/test/run-test.sh
      - vhdbuilder/packer/backfill-cleanup.sh
      - vhdbuilder/packer/cleanup.sh
      - vhdbuilder/packer/convert-sig-to-classic-storage-account-blob.sh
      - vhdbuilder/packer/generate-vhd-publishing-info.sh
      - vhdbuilder/packer/produce-packer-settings.sh
      - vhdbuilder/packer/windows/
      - parts/common/components.json
      - parts/windows
      - go.mod
      - go.sum
    exclude:
      - vhdbuilder/release-notes
      - /**/*.md
      - .github/**
      - e2e/scenario_test.go

pool:
  name: $(AZURE_POOL_NAME)

# Use variable group "ab-windows-ame-tenant" and link it to the pipeline "AKS Windows VHD Build"
# Use variable group "ab-windows-ame-tenant" and link it to the pipeline "AKS Windows VHD Build - PR check-in gate"
# Use variable group "ab-windows-ms-tenant" and link it to the pipeline "[TEST All VHDs] AKS Windows VHD Build - Msft Tenant"
# Some templates use POOL_NAME instead of AZURE_POOL_NAME, so set POOL_NAME here just in case.

variables:
  - name: VHD_BUILD_ID
    value: $(Build.BuildId)
  - name: LOCATION
    value: $(PACKER_BUILD_LOCATION)
  - name: POOL_NAME
    value: $(AZURE_POOL_NAME)
  - name: SUBSCRIPTION_ID
    value: $(AZURE_BUILD_SUBSCRIPTION_ID)
    # if SIG_FOR_PRODUCTION is true, then the VHDs are deleted from the gallery before the e2e tests are run.
  - name: SIG_FOR_PRODUCTION
    value: False
    # These next vars are used for the e2e tests
  - name: AZURE_RESOURCE_GROUP_NAME
    value:  $(AZURE_BUILD_RESOURCE_GROUP_NAME)
  - name: GALLERY_RESOURCE_GROUP
    value: $(AZURE_BUILD_RESOURCE_GROUP_NAME)
  - name: GALLERY_SUBSCRIPTION_ID
    value: $(AZURE_BUILD_SUBSCRIPTION_ID)

stages:
  - template: ./templates/.build-and-test-windows-vhds-template.yaml
    parameters:
      vhddebug: False
      skipExtensionCheck: true
      dryrun: False
      ${{ if eq( variables.PACKER_VM_SIZE, '') }}:
        buildVmSize: Standard_D4ds_v5
      ${{ else }}:
        buildVmSize: ${{ variables.PACKER_VM_SIZE }}
      build2019containerd: True
      build2022containerd: False
      build2022containerdgen2: True
      build23H2: False
      build23H2gen2: True
      overrideBranch: master
      useOverrides: False
      build2025: False
      build2025gen2: True
