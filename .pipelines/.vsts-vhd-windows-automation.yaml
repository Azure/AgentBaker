name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)
pool:
  # uncomment this if the auto teardown pool is down.
  # vmImage: ubuntu-22.04
  name: $(1ES_DevInfra_Auto_TearDown_Pool_Name)

parameters:
- name: ImageBump
  displayName: Image Bump + Branch Cutting
  type: boolean
  default: false
- name: GithubUserName
  displayName: The user name of the owner to push changes
  type: string
- name: ReleaseNotes
  displayName: Release Notes
  type: boolean
  default: false
- name: ArtifactTrigger
  displayName: SIG Artifact Trigger
  type: boolean
  default: false

stages:
  - stage: bump_version
    dependsOn: []
    condition: eq('${{ parameters.ImageBump }}', true)
    jobs:
    - job: bump
      timeoutInMinutes: 180
      steps:
        - bash: |
                az extension add -n azure-devops
                echo $MAPPED_ADO_PAT | az devops login --organization=https://dev.azure.com/msazure
                az devops configure --defaults organization=https://dev.azure.com/msazure project=CloudNativeCompute
          env:
                MAPPED_ADO_PAT: $(ADO_PAT)
          displayName: 'az devops login'
        - bash: |
                echo "Bumping windows VHD base image version"
                /bin/bash vhdbuilder/scripts/windows/automate_version_bump.sh $MAPPED_GITHUB_PAT '${{ parameters.GithubUserName }}' "$CHERRY_PICK_COMMIT_ID"
          env:
                MAPPED_GITHUB_PAT: $(GITHUB_PAT)
          displayName: 'Image Version Bumping'
          condition: eq('${{ parameters.ImageBump }}', true)

  - stage: ev2_artifact
    dependsOn: []
    condition: eq('${{ parameters.ArtifactTrigger }}', true)
    jobs:
    - job: ev2
      timeoutInMinutes: 180
      steps:
        - bash: |
                az extension add -n azure-devops
                echo $MAPPED_ADO_PAT | az devops login --organization=https://dev.azure.com/msazure
                az devops configure --defaults organization=https://dev.azure.com/msazure project=CloudNativeCompute
          env:
                MAPPED_ADO_PAT: $(ADO_PAT)
          displayName: 'az devops login'
        - bash: |
                echo "Triggering windows VHD build ev2 artifacts pipeline"
                az login --identity
                pipeline_id="322622"
                echo "Build ID for the release is $BUILD_ID"
                run_id=$(az pipelines run --id $pipeline_id --variables VHD_PIPELINE_RUN_ID=$BUILD_ID | jq -r '.id')
                while ! az pipelines runs show --id $run_id | grep -q '"result": "succeeded"'; do
                    echo "ev2 artifacts still running for build $BUILD_ID"
                    sleep 100
                done
                echo "ev2 artifacts successfully built for build $BUILD_ID"
                echo "Windows images artifacts: https://msazure.visualstudio.com/CloudNativeCompute/_build/results?buildId=$run_id&view=results"
                echo "Build Number is $(Build.BuildNumber)"
                echo "##vso[task.setvariable variable=RUN_ID]$run_id"
                echo "Set run id to $BUILD_ID for the template"
          displayName: 'ev2 Artifact Pipeline Trigger'
          condition: eq('${{ parameters.ArtifactTrigger }}', true)
        - template: ./templates/.builder-release-template-windows-ev2.yaml
