pool:
  # uncomment this if the auto teardown pool is down.
  # vmImage: ubuntu-22.04
  name: $(1ES_DevInfra_Auto_TearDown_Pool_Name)

parameters:
- name: ImageBump
  displayName: Image Bump + Branch Cutting
  type: boolean
  default: false
- name: GithubUserName
  displayName: The user name of the owner to push changes
  type: string
- name: ReleaseNotes
  displayName: Release Notes
  type: boolean
  default: false

steps:
- bash: |
        az extension add -n azure-devops
        echo $MAPPED_ADO_PAT | az devops login --organization=https://dev.azure.com/msazure
        az devops configure --defaults organization=https://dev.azure.com/msazure project=CloudNativeCompute
  env:
        MAPPED_ADO_PAT: $(ADO_PAT)
  displayName: 'az devops login'
- bash: |
        echo "Bumping windows VHD base image version"
        /bin/bash vhdbuilder/scripts/windows/automate_version_bump.sh $MAPPED_GITHUB_PAT '${{ parameters.GithubUserName }}' "$CHERRY_PICK_COMMIT_ID"
  env:
        MAPPED_GITHUB_PAT: $(GITHUB_PAT)
  displayName: 'Image Version Bumping'
  condition: eq('${{ parameters.ImageBump }}', true)
- bash: |
        echo "PR for Release Notes"
        az extension add -n azure-devops
        echo $MAPPED_ADO_PAT | az devops login --organization=https://dev.azure.com/msazure
        az devops configure --defaults organization=https://dev.azure.com/msazure project=CloudNativeCompute
        cd vhdbuilder/release-notes/autonotes
        VER=$(go version)
        echo "Go version is $VER"
        go install .
        cd ../../..
        echo "go run autonotes to shuffle release note files from Azure Pipelines into the AgentBaker repo structure"
        go run vhdbuilder/release-notes/autonotes/main.go --build $BUILD_ID --include 2019-containerd,2022-containerd,2022-containerd-gen2,23H2,23H2-gen2
        echo "run bash to create pull request for the shuffled release note files"
        /bin/bash vhdbuilder/scripts/windows/automate_release_notes.sh $BUILD_ID $MAPPED_GITHUB_PAT '${{ parameters.GithubUserName }}'
  env:
        MAPPED_GITHUB_PAT: $(GITHUB_PAT)
        MAPPED_ADO_PAT: $(ADO_PAT)
  displayName: 'Release Notes'
  condition: eq('${{ parameters.ReleaseNotes }}', true)
  