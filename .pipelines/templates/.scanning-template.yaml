parameters:
    - name: artifactName
      type: string
      default: 1604
  
steps:
  - bash: |
        OS_DISK_URI="$(cat packer-output | grep "OSDiskUri:" | cut -d " " -f 2)" && \
        MANAGED_SIG_ID="/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${AZURE_RESOURCE_GROUP_NAME}/providers/Microsoft.Compute/galleries/${SIG_GALLERY_NAME}/images/${IMAGE_URL_NAME}/versions/" && \
        docker run --rm \
        -v ${PWD}:/go/src/github.com/Azure/AgentBaker \
        -w /go/src/github.com/Azure/AgentBaker \
        -e SUBSCRIPTION_ID="${SUBSCRIPTION_ID}" \
        -e AZURE_RESOURCE_GROUP_NAME=${AZURE_RESOURCE_GROUP_NAME} \
        -e CLASSIC_BLOB=${CLASSIC_BLOB} \
        -e BUILD_ID=$(Build.BuildId) \
        -e MANAGED_SIG_ID=${MANAGED_SIG_ID} \
        -e AZURE_LOCATION=${AZURE_LOCATION} \
        -e OS_VERSION=${OS_VERSION} \
        -e OS_SKU=${OS_SKU} \
        -e OS_TYPE="Linux" \
        -e ARCHITECTURE=${ARCHITECTURE} \
        -e ENABLE_TRUSTED_LAUNCH=${ENABLE_TRUSTED_LAUNCH} \
        ${CONTAINER_IMAGE} make -f packer.mk scanning-vhd
    retryCountOnTaskFailure: 2
    displayName: Scanning VHD
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: 'trivy-report.json'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: Copy trivy report
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
      Contents: 'trivy-images-table.txt'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: Copy trivy table
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: '${{ parameters.artifactName }}'
      targetPath: '$(Build.ArtifactStagingDirectory)'
    displayName: Publish bulk artifacts
    condition: and(succeeded(), eq(variables.DRY_RUN, 'False'))


