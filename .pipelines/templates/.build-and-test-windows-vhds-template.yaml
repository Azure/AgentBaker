parameters:
  - name: build2019containerd
    displayName: Build 2019 containerd
    type: boolean
  - name: build2022containerd
    displayName: Build 2022 containerd
    type: boolean
  - name: build2022containerdgen2
    displayName: Build 2022 containerd Gen 2
    type: boolean
  - name: build23H2
    displayName: Build 23H2
    type: boolean
  - name: build23H2gen2
    displayName: Build 23H2 Gen 2
    type: boolean
  - name: dryrun
    displayName: Dry run
    type: boolean
    default: False
  - name: vhddebug
    displayName: VHD Debug
    type: boolean
    default: False
  - name: skipExtensionCheck
    displayName: Skip Extension Check
    type: boolean
    default: False
  - name: installOpenSshServer
    displayName: Install Open SSH Server
    type: boolean
    default: True
  - name: buildVmSize
    displayName: Build VM Size
    type: string

stages:
  - template:   ./.build-and-test-windows-vhd-template.yaml
    parameters:
      stageName: win_2019_v1
      artifactName: 2019-containerd
      imageName: windows-2019-containerd
      windowsSku: 2019-containerd
      hyperVGeneration: V1
      build: ${{ parameters.build2019containerd }}
      vhddebug: ${{ parameters.vhddebug }}
      dryrun: ${{ parameters.dryrun }}
      buildVmSize: ${{ parameters.buildVmSize }}
      installOpenSshServer: ${{ parameters.installOpenSshServer }}
      skipExtensionCheck: ${{ parameters.skipExtensionCheck }}
      windowsBaseImageUrl: $(WINDOWS_2019_BASE_IMAGE_URL)
      windowsNanoImageUrl: $(WINDOWS_2019_NANO_IMAGE_URL)
      windowsCoreImageUrl: $(WINDOWS_2019_CORE_IMAGE_URL)

  - template:   ./.build-and-test-windows-vhd-template.yaml
    parameters:
      stageName: win_2022_v1
      artifactName: 2022-containerd
      imageName: windows-2022-containerd
      windowsSku: 2022-containerd
      hyperVGeneration: V1
      build: ${{ parameters.build2022containerd }}
      vhddebug: ${{ parameters.vhddebug }}
      dryrun: ${{ parameters.dryrun }}
      buildVmSize: ${{ parameters.buildVmSize }}
      installOpenSshServer: ${{ parameters.installOpenSshServer }}
      skipExtensionCheck: ${{ parameters.skipExtensionCheck }}
      windowsBaseImageUrl: $(WINDOWS_2022_BASE_IMAGE_URL)
      windowsNanoImageUrl: $(WINDOWS_2022_NANO_IMAGE_URL)
      windowsCoreImageUrl: $(WINDOWS_2022_CORE_IMAGE_URL)

  - template:   ./.build-and-test-windows-vhd-template.yaml
    parameters:
      stageName: win_2022_v2
      artifactName: 2022-containerd-gen2
      imageName: windows-2022-containerd-gen2
      windowsSku: 2022-containerd-gen2
      hyperVGeneration: V2
      buildVmSize: ${{ parameters.buildVmSize }}
      build: ${{ parameters.build2022containerdgen2 }}
      vhddebug: ${{ parameters.vhddebug }}
      dryrun: ${{ parameters.dryrun }}
      installOpenSshServer: ${{ parameters.installOpenSshServer }}
      skipExtensionCheck: ${{ parameters.skipExtensionCheck }}
      windowsBaseImageUrl: $(WINDOWS_23H2_GEN2_BASE_IMAGE_URL)
      windowsNanoImageUrl: $(WINDOWS_2022_NANO_IMAGE_URL)
      windowsCoreImageUrl: $(WINDOWS_2022_CORE_IMAGE_URL)

  - template:   ./.build-and-test-windows-vhd-template.yaml
    parameters:
      stageName: win_23H2_v1
      artifactName: 23H2
      imageName: windows-23H2
      windowsSku: 23H2
      hyperVGeneration: V1
      buildVmSize: ${{ parameters.buildVmSize }}
      build: ${{ parameters.build23H2 }}
      vhddebug: ${{ parameters.vhddebug }}
      dryrun: ${{ parameters.dryrun }}
      installOpenSshServer: ${{ parameters.installOpenSshServer }}
      skipExtensionCheck: ${{ parameters.skipExtensionCheck }}
      windowsBaseImageUrl: $(WINDOWS_23H2_BASE_IMAGE_URL)
      windowsNanoImageUrl: $(WINDOWS_2022_NANO_IMAGE_URL)
      windowsCoreImageUrl: $(WINDOWS_2022_CORE_IMAGE_URL)

  - template: ./.build-and-test-windows-vhd-template.yaml
    parameters:
      stageName: win_23H2_v2
      artifactName: 23H2-gen2
      imageName: windows-23H2-gen2
      windowsSku: 23H2-gen2
      hyperVGeneration: V2
      buildVmSize: ${{ parameters.buildVmSize }}
      build: ${{ parameters.build23H2gen2 }}
      vhddebug: ${{ parameters.vhddebug }}
      dryrun: ${{ parameters.dryrun }}
      installOpenSshServer: ${{ parameters.installOpenSshServer }}
      skipExtensionCheck: ${{ parameters.skipExtensionCheck }}
      windowsBaseImageUrl: $(WINDOWS_23H2_GEN2_BASE_IMAGE_URL)
      windowsNanoImageUrl: $(WINDOWS_2022_NANO_IMAGE_URL)
      windowsCoreImageUrl: $(WINDOWS_2022_CORE_IMAGE_URL)

  - stage: backfill_cleanup_outdated_resources
    dependsOn: []
    condition: always()
    jobs:
      - job: build
        timeoutInMinutes: 180
        steps:
          - bash: |
              m="windowsVhdMode"
              echo "Set build mode to $m" && \
              docker run --rm \
              -v ${PWD}:/go/src/github.com/Azure/AgentBaker \
              -w /go/src/github.com/Azure/AgentBaker \
              -e SUBSCRIPTION_ID="${AZURE_BUILD_SUBSCRIPTION_ID}" \
              -e PROD_SUBSCRIPTION_ID=${AZURE_PROD_SUBSCRIPTION_ID} \
              -e AZURE_RESOURCE_GROUP_NAME=${AZURE_BUILD_RESOURCE_GROUP_NAME} \
              -e MODE=$m \
              -e DRY_RUN=${DRY_RUN} \
              -e SIG_GALLERY_NAME=${SIG_GALLERY_NAME} \
              -e OS_TYPE="Windows" \
              ${AZURE_CONTAINER_IMAGE} make -f packer.mk backfill-cleanup
            enabled: true
            displayName: Backfill Clean Up Older Resources
            condition: eq(variables.ENABLE_BACKFILL_CLEANUP, 'True')
