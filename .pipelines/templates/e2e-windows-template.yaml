parameters:
  - name: windowsImage
    type: string
    default: 2019-containerd
  - name: windowsOSSKU
    type: string
    default: Windows2019
  - name: windowsVMSize
    type: string
    default: Standard_D2s_v3
  - name: windowsDistro
    type: string
    default: aks-windows-2019-containerd
  - name: windowsNodeImageVersion
    type: string
    default: AKSWindows-2019-containerd-test-2023.02.07
  - name: storageAccount
    type: string
    default: storewin19

jobs:
- job: Setup_Test_Cluster
  steps:
    - bash: |
        az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)
        az account set -s $(AZURE_SUBSCRIPTION_ID)
      displayName: az login
    - bash: bash .pipelines/scripts/setup_go.sh
      displayName: setup go
    - bash: |
        export WINDOWS_E2E_IMAGE=${{ parameters.windowsImage }}
        export WINDOWS_E2E_OSSKU=${{ parameters.windowsOSSKU }}
        export WINDOWS_E2E_VMSIZE=${{ parameters.windowsVMSize }}
        export WINDOWS_E2E_STORAGE_ACCOUNT=${{ parameters.storageAccount }}
        mkdir -p $WINDOWS_E2E_IMAGE
        cp -r e2e/windows/* $WINDOWS_E2E_IMAGE
        go version
        cd $WINDOWS_E2E_IMAGE
        bash ./e2e-starter.sh
        bash e2e-create-windows-nodepool.sh
      displayName: Setup Test Cluster
    - publish: $(System.DefaultWorkingDirectory)/${{ parameters.windowsImage }}
      artifact: ${{ parameters.windowsImage }}-clusterConfig
      condition: always()

- job: Generate_Matrix
  steps:
    - bash: |
        stringifyJson=$(cat e2e/windows/matrix.json | jq -r tojson | sed 's/\\//g')
        echo "##vso[task.setVariable variable=scenarioMatrix;isOutput=true]"$stringifyJson
      name: matrix
      
- job: Test
  dependsOn:
    - Setup_Test_Cluster
    - Generate_Matrix
  strategy:
    matrix: $[ dependencies.Generate_Matrix.outputs['matrix.scenarioMatrix'] ]
    maxParallel: 3
  steps:
    - download: current
      artifact: ${{ parameters.windowsImage }}-clusterConfig
    - bash: |
        az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)
        az account set -s $(AZURE_SUBSCRIPTION_ID)
      displayName: az login
    - bash: |
        export SCENARIO_NAME
        export WINDOWS_E2E_IMAGE=${{ parameters.windowsImage }}
        export WINDOWS_DISTRO=${{ parameters.windowsDistro }}
        export WINDOWS_NODE_IMAGE_VERSION=${{ parameters.windowsNodeImageVersion }}
        mkdir -p $WINDOWS_E2E_IMAGE
        cp -a $(Pipeline.Workspace)/${{ parameters.windowsImage }}-clusterConfig/* $WINDOWS_E2E_IMAGE
        cd $WINDOWS_E2E_IMAGE
        bash e2e-scenario.sh
      env:
        MAPPED_ACCOUNT_KEY: $(STORAGE_ACCOUNT_KEY)
    - publish: $(System.DefaultWorkingDirectory)/${{ parameters.windowsImage }}/$(SCENARIO_NAME)-logs
      artifact: ${{ parameters.windowsImage }}-$(SCENARIO_NAME)-logs
      condition: always()