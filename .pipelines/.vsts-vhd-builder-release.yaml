name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none

variables:
  - name: CONTAINER_IMAGE
    value: 'mcr.microsoft.com/oss/azcu/go-dev:v1.38.1'

pool:
  name: $(POOL_NAME)

parameters:
  - name: useOverrides
    displayName: Use component overrides
    type: boolean
    default: false
  - name: overrideBranch
    displayName: Branch in aks-rp to use for overrides
    type: string
    default: master
  - name: build1804containerd
    displayName: Build 1804 containerd
    type: boolean
    default: true
  - name: build1804gen2containerd
    displayName: Build 1804 Gen2 containerd
    type: boolean
    default: true
  - name: build1804gpucontainerd
    displayName: Build 1804 GPU+containerd
    type: boolean
    default: true
  - name: build1804gen2gpucontainerd
    displayName: Build 1804 Gen2 GPU+containerd
    type: boolean
    default: true
  - name: buildMarinerV2gen1
    displayName: Build MarinerV2 Gen1
    type: boolean
    default: true
  - name: buildAzureLinuxV2gen1
    displayName: Build AzureLinuxV2 Gen1
    type: boolean
    default: true
  - name: buildAzureLinuxV3gen1
    displayName: Build AzureLinuxV3 Gen1
    type: boolean
    default: true
  - name: buildMarinerV2gen2
    displayName: Build MarinerV2 Gen2
    type: boolean
    default: true
  - name: buildAzureLinuxV2gen2
    displayName: Build AzureLinuxV2 Gen2
    type: boolean
    default: true
  - name: buildAzureLinuxV3gen2
    displayName: Build AzureLinuxV3 Gen2
    type: boolean
    default: true
  - name: buildMarinerV2gen1fips
    displayName: Build MarinerV2 Gen1 FIPS
    type: boolean
    default: true
  - name: buildAzureLinuxV2gen1fips
    displayName: Build AzureLinuxV2 Gen1 FIPS
    type: boolean
    default: true
  - name: buildAzureLinuxV3gen1fips
    displayName: Build AzureLinuxV3 Gen1 FIPS
    type: boolean
    default: true
  - name: buildMarinerV2gen2fips
    displayName: Build MarinerV2 Gen2 FIPS
    type: boolean
    default: true
  - name: buildAzureLinuxV2gen2fips
    displayName: Build AzureLinuxV2 Gen2 FIPS
    type: boolean
    default: true
  - name: buildAzureLinuxV3gen2fips
    displayName: Build AzureLinuxV3 Gen2 FIPS
    type: boolean
    default: true
  - name: buildMarinerV2gen2kata
    displayName: Build MarinerV2 Gen2 Kata
    type: boolean
    default: true
  - name: buildAzureLinuxV2gen2kata
    displayName: Build AzureLinuxV2 Gen2 Kata
    type: boolean
    default: true
  - name: buildMarinerV2ARM64
    displayName: Build MarinerV2 Gen2 - ARM64
    type: boolean
    default: true
  - name: buildAzureLinuxV2ARM64
    displayName: Build AzureLinuxV2 Gen2 - ARM64
    type: boolean
    default: true
  - name: buildAzureLinuxV3ARM64
    displayName: Build AzureLinuxV3 Gen2 - ARM64
    type: boolean
    default: true
  - name: buildMarinerV2gen2TrustedLaunch
    displayName: Build MarinerV2 Gen2 - Trusted Launch
    type: boolean
    default: true
  - name: buildAzureLinuxV2gen2TrustedLaunch
    displayName: Build AzureLinuxV2 Gen2 - Trusted Launch
    type: boolean
    default: true
  - name: buildMarinerV2gen2kataTrustedLaunch
    displayName: Build MarinerV2 Gen2 Kata - Trusted Launch
    type: boolean
    default: false
  - name: buildAzureLinuxV2gen2kataTrustedLaunch
    displayName: Build AzureLinuxV2 Gen2 Kata - Trusted Launch
    type: boolean
    default: false
  - name: build1804fipscontainerd
    displayName: Build 1804 FIPS containerd
    type: boolean
    default: true
  - name: build1804fipsgen2containerd
    displayName: Build 1804 FIPS Gen2 containerd
    type: boolean
    default: true
  - name: build2004fipscontainerd
    displayName: Build 2004 FIPS containerd
    type: boolean
    default: true
  - name: build2004fipsgen2containerd
    displayName: Build 2004 FIPS Gen2 containerd
    type: boolean
    default: true
  - name: build2204fipscontainerd
    displayName: Build 2204 FIPS containerd
    type: boolean
    default: false
  - name: build2204fipsgen2containerd
    displayName: Build 2204 FIPS Gen2 containerd
    type: boolean
    default: false
  - name: build2204arm64gen2containerd
    displayName: Build 2204 ARM64 Gen2 containerd
    type: boolean
    default: true
  - name: build2404arm64gen2containerd
    displayName: Build 2404 ARM64 Gen2 containerd
    type: boolean
    default: false
  - name: build2204containerd
    displayName: Build 2204 Gen1 Containerd
    type: boolean
    default: true
  - name: build2204gen2containerd
    displayName: Build 2204 Gen2 Containerd
    type: boolean
    default: true
  - name: build2404containerd
    displayName: Build 2404 Gen1 Containerd
    type: boolean
    default: false
  - name: build2404gen2containerd
    displayName: Build 2404 Gen2 Containerd
    type: boolean
    default: false
  - name: build2004cvmgen2containerd
    displayName: Build 2004 CVM Gen2 Containerd
    type: boolean
    default: true
  - name: build2204tlgen2containerd
    displayName: Build 2204 TL Gen2 Containerd
    type: boolean
    default: true
  - name: build2204minimalgen1containerd
    displayName: Build 2204 Minimal Gen1 Containerd
    type: boolean
    default: false
  - name: build2204minimalgen2containerd
    displayName: Build 2204 Minimal Gen2 Containerd
    type: boolean
    default: false
  - name: dryrun
    displayName: Dry run
    type: boolean
    default: False

stages:
  - stage: build
    jobs:
      - job: build1804containerd
        condition: eq('${{ parameters.build1804containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]18.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
              echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 1804-containerd
      - job: build1804gen2containerd
        condition: eq('${{ parameters.build1804gen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]18.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
              echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 1804-gen2-containerd
      - job: build1804gpucontainerd
        condition: eq('${{ parameters.build1804gpucontainerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]18.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
              echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC16as_T4_v3'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 1804-gpu-containerd
      - job: build1804gen2gpucontainerd
        condition: eq('${{ parameters.build1804gen2gpucontainerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]18.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
              echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC16as_T4_v3'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 1804-gen2-gpu-containerd
      - job: buildMarinerV2gen1
        condition: eq('${{ parameters.buildMarinerV2gen1 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen1
      - job: buildAzureLinuxV2gen1
        condition: eq('${{ parameters.buildAzureLinuxV2gen1 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen1
      - job: buildAzureLinuxV3gen1
        condition: eq('${{ parameters.buildAzureLinuxV3gen1 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V3'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_SKU]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              artifactName: azurelinuxv3-gen1
      - job: buildMarinerV2gen2
        condition: eq('${{ parameters.buildMarinerV2gen2 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen2
      - job: buildAzureLinuxV2gen2
        condition: eq('${{ parameters.buildAzureLinuxV2gen2 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen2
      - job: buildAzureLinuxV3gen2
        condition: eq('${{ parameters.buildAzureLinuxV3gen2 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V3'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_SKU]azure-linux-3-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              artifactName: azurelinuxv3-gen2
      - job: buildMarinerV2gen1fips
        condition: eq('${{ parameters.buildMarinerV2gen1fips }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen1-fips
      - job: buildAzureLinuxV2gen1fips
        condition: eq('${{ parameters.buildAzureLinuxV2gen1fips }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen1-fips
      - job: buildAzureLinuxV3gen1fips
        condition: eq('${{ parameters.buildAzureLinuxV3gen1fips }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V3'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_SKU]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              artifactName: azurelinuxv3-gen1-fips
      - job: buildMarinerV2gen2fips
        condition: eq('${{ parameters.buildMarinerV2gen2fips }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen2-fips
      - job: buildAzureLinuxV2gen2fips
        condition: eq('${{ parameters.buildAzureLinuxV2gen2fips }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen2-fips
      - job: buildAzureLinuxV3gen2fips
        condition: eq('${{ parameters.buildAzureLinuxV3gen2fips }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V3'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_SKU]azure-linux-3-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              artifactName: azurelinuxv3-gen2-fips
      - job: buildMarinerV2ARM64
        condition: eq('${{ parameters.buildMarinerV2ARM64 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-arm64'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16pds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen2-arm64
      - job: buildAzureLinuxV2ARM64
        condition: eq('${{ parameters.buildAzureLinuxV2ARM64 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-arm64'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16pds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen2-arm64
      - job: buildAzureLinuxV3ARM64
        condition: eq('${{ parameters.buildAzureLinuxV3ARM64 }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V3'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]azure-linux-3'
              echo '##vso[task.setvariable variable=IMG_SKU]azure-linux-3-arm64'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16pds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              artifactName: azurelinuxv3-gen2-arm64
      - job: buildMarinerV2gen2kata
        condition: eq('${{ parameters.buildMarinerV2gen2kata }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ads_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen2-kata
      - job: buildAzureLinuxV2gen2kata
        condition: eq('${{ parameters.buildAzureLinuxV2gen2kata }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-kata'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ads_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen2-kata
      - job: buildMarinerV2gen2TrustedLaunch
        condition: eq('${{ parameters.buildMarinerV2gen2TrustedLaunch }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen2-trustedlaunch
      - job: buildAzureLinuxV2gen2TrustedLaunch
        condition: eq('${{ parameters.buildAzureLinuxV2gen2TrustedLaunch }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen2-trustedlaunch
      - job: buildMarinerV2gen2kataTrustedLaunch
        condition: eq('${{ parameters.buildMarinerV2gen2kataTrustedLaunch }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
              echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-kata'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ads_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: marinerv2-gen2-kata-trustedlaunch
      - job: buildAzureLinuxV2gen2kataTrustedLaunch
        condition: eq('${{ parameters.buildAzureLinuxV2gen2kataTrustedLaunch }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
              echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
              echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
              echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-kata'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ads_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
              echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: azurelinuxv2-gen2-kata-trustedlaunch
      - job: build1804fipscontainerd
        condition: eq('${{ parameters.build1804fipscontainerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]18.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
              echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 1804-fips-containerd
      - job: build1804fipsgen2containerd
        condition: eq('${{ parameters.build1804fipsgen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]18.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
              echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 1804-fips-gen2-containerd
      - job: build2004fipscontainerd
        condition: eq('${{ parameters.build2004fipscontainerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]20.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-focal'
              echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2004-fips-containerd
      - job: build2004fipsgen2containerd
        condition: eq('${{ parameters.build2004fipsgen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]20.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-focal'
              echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2004-fips-gen2-containerd
      - job: build2204fipscontainerd
        condition: eq('${{ parameters.build2204fipscontainerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
              echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-fips-containerd
      - job: build2204fipsgen2containerd
        condition: eq('${{ parameters.build2204fipsgen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
              echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-fips-gen2-containerd
      - job: build2204arm64gen2containerd
        condition: eq('${{ parameters.build2204arm64gen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
              echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-arm64'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16pds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]False'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-arm64-gen2-containerd
      - job: build2404arm64gen2containerd
        condition: eq('${{ parameters.build2404arm64gen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]24.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]ubuntu-24_04-lts'
              echo '##vso[task.setvariable variable=IMG_SKU]server-arm64'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16pds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
              echo '##vso[task.setvariable variable=ENABLE_FIPS]False'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2404-arm64-gen2-containerd
      - job: build2204containerd
        condition: eq('${{ parameters.build2204containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
              echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-containerd
      - job: build2204gen2containerd
        condition: eq('${{ parameters.build2204gen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
              echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-gen2-containerd
      - job: build2404containerd
        condition: eq('${{ parameters.build2404containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]24.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-noble-daily'
              echo '##vso[task.setvariable variable=IMG_SKU]24_04-daily-lts'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2404-containerd
      - job: build2404gen2containerd
        condition: eq('${{ parameters.build2404gen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]24.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-noble-daily'
              echo '##vso[task.setvariable variable=IMG_SKU]24_04-daily-lts-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2404-gen2-containerd
      - job: build2004cvmgen2containerd
        condition: eq('${{ parameters.build2004cvmgen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]20.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-confidential-vm-focal'
              echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts-cvm'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2004-cvm-gen2-containerd
      - job: build2204tlgen2containerd
        condition: eq('${{ parameters.build2204tlgen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
              echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
              echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-tl-gen2-containerd
      - job: build2204minimalgen1containerd
        condition: eq('${{ parameters.build2204minimalgen1containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-minimal-jammy-aks-daily-preview'
              echo '##vso[task.setvariable variable=IMG_SKU]minimal-aks-22_04-daily-lts'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-minimal-gen1-containerd
      - job: build2204minimalgen2containerd
        condition: eq('${{ parameters.build2204minimalgen2containerd }}', true)
        dependsOn: [ ]
        timeoutInMinutes: 180
        steps:
          - bash: |
              echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
              echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
              echo '##vso[task.setvariable variable=OS_VERSION]22.04'
              echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
              echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-minimal-jammy-aks-daily-preview'
              echo '##vso[task.setvariable variable=IMG_SKU]minimal-aks-22_04-daily-lts-gen2'
              echo '##vso[task.setvariable variable=IMG_VERSION]latest'
              echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
              echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D16ds_v5'
              echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
              echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
              echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
              echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
              echo '##vso[task.setvariable variable=SGX_INSTALL]False'
            displayName: Setup Build Variables
          - template: ./templates/.builder-release-template.yaml
            parameters:
              useOverrides: ${{ parameters.useOverrides }}
              overrideBranch: ${{ parameters.overrideBranch }}
              artifactName: 2204-minimal-gen2-containerd
  - stage: Run_E2E_Tests
    condition: and(ne(variables.SKIP_E2E_TESTS, 'true'), eq('${{ parameters.dryrun }}', false))
    variables:
      VHD_BUILD_ID: $(Build.BuildId)
      LOCATION: $(PACKER_BUILD_LOCATION)
    jobs:
      - template: ./templates/e2e-template.yaml
