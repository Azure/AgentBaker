name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none

pool:
  vmImage: ubuntu-18.04

parameters:
- name: build1604
  displayName: Build 1604
  type: boolean
  default: false
- name: build1804
  displayName: Build 1804
  type: boolean
  default: true
- name: build1804gen2
  displayName: Build 1804 Gen2
  type: boolean
  default: true
- name: build1804gpu
  displayName: Build 1804 GPU
  type: boolean
  default: true
- name: build1804gen2gpu
  displayName: Build 1804 Gen2 GPU
  type: boolean
  default: true
- name: build1804containerd
  displayName: Build 1804 containerd
  type: boolean
  default: true
- name: build1804gen2containerd
  displayName: Build 1804 Gen2 containerd
  type: boolean
  default: true
- name: build1804gpucontainerd
  displayName: Build 1804 GPU+containerd
  type: boolean
  default: true
- name: build1804gen2gpucontainerd
  displayName: Build 1804 Gen2 GPU+containerd
  type: boolean
  default: true
- name: buildMarinerV1
  displayName: Build MarinerV1
  type: boolean
  default: true
- name: buildMarinerV1gen2
  displayName: Build MarinerV1 Gen2
  type: boolean
  default: true
- name: buildMarinerV2gen2
  displayName: Build MarinerV2 Gen2
  type: boolean
  default: true
- name: build1804fipscontainerd
  displayName: Build 1804 FIPS containerd
  type: boolean
  default: true
- name: build1804fipsgen2containerd
  displayName: Build 1804 FIPS Gen2 containerd
  type: boolean
  default: true
- name: build1804fipsgpucontainerd
  displayName: Build 1804 FIPS GPU+containerd
  type: boolean
  default: true
- name: build1804fipsgen2gpucontainerd
  displayName: Build 1804 FIPS Gen2 GPU+containerd
  type: boolean
  default: true
- name: build1804arm64gen2containerd
  displayName: Build 1804 ARM64 Gen2 containerd
  type: boolean
  default: false
- name: build2204containerd
  displayName: Build 2204 Gen1 Containerd
  type: boolean
  default: false
- name: build2204gen2containerd
  displayName: Build 2204 Gen2 Containerd
  type: boolean
  default: false
- name: build2004cvmgen2containerd
  displayName: Build 2004 CVM Gen2 Containerd
  type: boolean
  default: false
- name: dryrun
  displayName: Dry run
  type: boolean
  default: False

variables:
  CONTAINER_IMAGE:  'mcr.microsoft.com/oss/azcu/go-dev:v1.34.7'

stages:
  - stage: build_vhd
    dependsOn: []
    condition: eq('${{ parameters.build1604 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]16.04'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1604
  - stage: build_vhd_1804
    dependsOn: []
    condition: eq('${{ parameters.build1804 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804
  - stage: build_vhd_1804_gen2
    dependsOn: []
    condition: eq('${{ parameters.build1804gen2 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gen2
  - stage: build_vhd_1804_gpu
    dependsOn: []
    condition: eq('${{ parameters.build1804gpu }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gpu
  - stage: build_vhd_1804_gen2_gpu
    dependsOn: []
    condition: eq('${{ parameters.build1804gen2gpu }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gen2-gpu
  - stage: build_vhd_1804_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-containerd
  - stage: build_vhd_1804_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804gen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gen2-containerd
  - stage: build_vhd_1804_gpu_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804gpucontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gpu-containerd
  - stage: build_vhd_1804_gen2_gpu_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804gen2gpucontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gen2-gpu-containerd
  - stage: build_vhd_marinerv1
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV1 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V1'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv1
  - stage: build_vhd_marinerv1_gen2
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV1gen2 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V1'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv1-gen2
  - stage: build_vhd_marinerv2_gen2
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen2 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen2
  - stage: build_vhd_1804_fips_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804fipscontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-fips-containerd
  - stage: build_vhd_1804_fips_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804fipsgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-fips-gen2-containerd
  - stage: build_vhd_1804_fips_gpu_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804fipsgpucontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-fips-gpu-containerd
  - stage: build_vhd_1804_fips_gen2_gpu_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804fipsgen2gpucontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-fips-gen2-gpu-containerd 
  - stage: build_vhd_1804_arm64_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804arm64gen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-lts-arm64'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_LOCATION]westus2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4pds_V5'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-arm64-gen2-containerd
  - stage: build_vhd_2204_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
            echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-containerd
  - stage: build_vhd_2204_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204gen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
            echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-gen2-containerd
  - stage: build_vhd_2004_cvm_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2004cvmgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]20.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-confidential-vm-focal'
            echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts-cvm'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2004-cvm-gen2-containerd