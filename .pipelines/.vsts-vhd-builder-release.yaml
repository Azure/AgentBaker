name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none

parameters:
- name: build1804containerd
  displayName: Build 1804 containerd
  type: boolean
  default: true
- name: build1804gen2containerd
  displayName: Build 1804 Gen2 containerd
  type: boolean
  default: true
- name: build1804gpucontainerd
  displayName: Build 1804 GPU+containerd
  type: boolean
  default: true
- name: build1804gen2gpucontainerd
  displayName: Build 1804 Gen2 GPU+containerd
  type: boolean
  default: true
- name: buildMarinerV2gen1
  displayName: Build MarinerV2 Gen1
  type: boolean
  default: true
- name: buildAzureLinuxV2gen1
  displayName: Build AzureLinuxV2 Gen1
  type: boolean
  default: true
- name: buildMarinerV2gen2
  displayName: Build MarinerV2 Gen2
  type: boolean
  default: true
- name: buildAzureLinuxV2gen2
  displayName: Build AzureLinuxV2 Gen2
  type: boolean
  default: true
- name: buildMarinerV2gen1fips
  displayName: Build MarinerV2 Gen1 FIPS 
  type: boolean
  default: true
- name: buildAzureLinuxV2gen1fips
  displayName: Build AzureLinuxV2 Gen1 FIPS
  type: boolean
  default: true
- name: buildMarinerV2gen2fips
  displayName: Build MarinerV2 Gen2 FIPS 
  type: boolean
  default: true
- name: buildAzureLinuxV2gen2fips
  displayName: Build AzureLinuxV2 Gen2 FIPS
  type: boolean
  default: true
- name: buildMarinerV2gen2kata
  displayName: Build MarinerV2 Gen2 Kata
  type: boolean
  default: true
- name: buildAzureLinuxV2gen2kata
  displayName: Build AzureLinuxV2 Gen2 Kata
  type: boolean
  default: true
- name: buildMarinerV2ARM64
  displayName: Build MarinerV2 Gen2 - ARM64
  type: boolean
  default: true
- name: buildAzureLinuxV2ARM64
  displayName: Build AzureLinuxV2 Gen2 - ARM64
  type: boolean
  default: true
- name: buildMarinerV2gen2TrustedLaunch
  displayName: Build MarinerV2 Gen2 - Trusted Launch
  type: boolean
  default: true
- name: buildAzureLinuxV2gen2TrustedLaunch
  displayName: Build AzureLinuxV2 Gen2 - Trusted Launch
  type: boolean
  default: true
- name: buildMarinerV2gen2kataTrustedLaunch
  displayName: Build MarinerV2 Gen2 Kata - Trusted Launch
  type: boolean
  default: false
- name: buildAzureLinuxV2gen2kataTrustedLaunch
  displayName: Build AzureLinuxV2 Gen2 Kata - Trusted Launch
  type: boolean
  default: false
- name: build1804fipscontainerd
  displayName: Build 1804 FIPS containerd
  type: boolean
  default: true
- name: build1804fipsgen2containerd
  displayName: Build 1804 FIPS Gen2 containerd
  type: boolean
  default: true
- name: build2004fipscontainerd
  displayName: Build 2004 FIPS containerd
  type: boolean
  default: true
- name: build2004fipsgen2containerd
  displayName: Build 2004 FIPS Gen2 containerd
  type: boolean
  default: true
- name: build2204arm64gen2containerd
  displayName: Build 2204 ARM64 Gen2 containerd
  type: boolean
  default: true
- name: build2204containerd
  displayName: Build 2204 Gen1 Containerd
  type: boolean
  default: true
- name: build2204gen2containerd
  displayName: Build 2204 Gen2 Containerd
  type: boolean
  default: true
- name: build2004cvmgen2containerd
  displayName: Build 2004 CVM Gen2 Containerd
  type: boolean
  default: true
- name: build2204tlgen2containerd
  displayName: Build 2204 TL Gen2 Containerd
  type: boolean
  default: true
- name: build2204minimalgen1containerd
  displayName: Build 2204 Minimal Gen1 Containerd
  type: boolean
  default: false
- name: build2204minimalgen2containerd
  displayName: Build 2204 Minimal Gen2 Containerd
  type: boolean
  default: false
- name: dryrun
  displayName: Dry run
  type: boolean
  default: False

variables:
- name: CONTAINER_IMAGE
  value: 'mcr.microsoft.com/oss/azcu/go-dev:v1.34.7'
  
pool:
  name: $(POOL_NAME)

stages:
  - stage: build_vhd_1804_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-containerd
  - stage: build_vhd_1804_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804gen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gen2-containerd
  - stage: build_vhd_1804_gpu_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804gpucontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gpu-containerd
  - stage: build_vhd_1804_gen2_gpu_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804gen2gpucontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-gen2-gpu-containerd
  - stage: build_vhd_marinerv2_gen1
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen1 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen1
  - stage: build_vhd_azurelinuxv2_gen1
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen1 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen1
  - stage: build_vhd_marinerv2_gen2
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen2 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen2
  - stage: build_vhd_azurelinuxv2_gen2
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen2 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen2
  - stage: build_vhd_marinerv2_gen1_fips
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen1fips }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen1-fips
  - stage: build_vhd_azurelinuxv2_gen1_fips
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen1fips }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen1-fips
  - stage: build_vhd_marinerv2_gen2_fips
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen2fips }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen2-fips
  - stage: build_vhd_azurelinuxv2_gen2_fips
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen2fips }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen2-fips
  - stage: build_vhd_mariner2_arm64
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2ARM64 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
          echo '##vso[task.setvariable variable=OS_VERSION]V2'
          echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
          echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
          echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-arm64'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4pds_V5'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
          echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
          echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
          echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: marinerv2-gen2-arm64
  - stage: build_vhd_azurelinuxv2_arm64
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2ARM64 }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
          echo '##vso[task.setvariable variable=OS_VERSION]V2'
          echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
          echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
          echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-arm64'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4pds_V5'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
          echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
          echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
          echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: azurelinuxv2-gen2-arm64
  - stage: build_vhd_marinerv2_gen2_kata
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen2kata }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4ads_v5'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen2-kata
  - stage: build_vhd_azurelinuxv2_gen2_kata
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen2kata }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-kata'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4ads_v5'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen2-kata
  - stage: build_vhd_marinerv2_gen2_trustedlaunch
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen2TrustedLaunch }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen2-trustedlaunch
  - stage: build_vhd_azurelinuxv2_gen2_trustedlaunch
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen2TrustedLaunch }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-gen2'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen2-trustedlaunch
  - stage: build_vhd_marinerv2_gen2_kata_trustedlaunch
    dependsOn: []
    condition: eq('${{ parameters.buildMarinerV2gen2kataTrustedLaunch }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]CBLMariner'
            echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-kata'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4ads_v5'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: marinerv2-gen2-kata-trustedlaunch
  - stage: build_vhd_azurelinuxv2_gen2_kata_trustedlaunch
    dependsOn: []
    condition: eq('${{ parameters.buildAzureLinuxV2gen2kataTrustedLaunch }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]AzureLinux'
            echo '##vso[task.setvariable variable=OS_VERSION]V2kata'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]MicrosoftCBLMariner'
            echo '##vso[task.setvariable variable=IMG_OFFER]cbl-mariner'
            echo '##vso[task.setvariable variable=IMG_SKU]cbl-mariner-2-kata'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4ads_v5'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]kata'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]false'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
            echo '##vso[task.setvariable variable=ENABLE_CGROUPV2]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: azurelinuxv2-gen2-kata-trustedlaunch
  - stage: build_vhd_1804_fips_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804fipscontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18.04-LTS'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-fips-containerd
  - stage: build_vhd_1804_fips_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build1804fipsgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]18.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]UbuntuServer'
            echo '##vso[task.setvariable variable=IMG_SKU]18_04-LTS-GEN2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 1804-fips-gen2-containerd
  - stage: build_vhd_2004_fips_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2004fipscontainerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]20.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-focal'
            echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2004-fips-containerd
  - stage: build_vhd_2004_fips_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2004fipsgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]20.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-focal'
            echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts-gen2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2004-fips-gen2-containerd
  - stage: build_vhd_2204_arm64_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204arm64gen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
            echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-arm64'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D4pds_V5'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]ARM64'
            echo '##vso[task.setvariable variable=ENABLE_FIPS]False'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-arm64-gen2-containerd
  - stage: build_vhd_2204_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
            echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-containerd
  - stage: build_vhd_2204_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204gen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
            echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-gen2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-gen2-containerd
  - stage: build_vhd_2004_cvm_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2004cvmgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]20.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-confidential-vm-focal'
            echo '##vso[task.setvariable variable=IMG_SKU]20_04-lts-cvm'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2004-cvm-gen2-containerd
  - stage: build_vhd_2204_tl_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204tlgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-server-jammy'
            echo '##vso[task.setvariable variable=IMG_SKU]22_04-lts-gen2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]True'
            echo '##vso[task.setvariable variable=SGX_INSTALL]True'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-tl-gen2-containerd
  - stage: build_vhd_2204_minimal_gen1_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204minimalgen1containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-minimal-jammy-aks-daily-preview'
            echo '##vso[task.setvariable variable=IMG_SKU]minimal-aks-22_04-daily-lts'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-minimal-gen1-containerd
  - stage: build_vhd_2204_minimal_gen2_containerd
    dependsOn: []
    condition: eq('${{ parameters.build2204minimalgen2containerd }}', true)
    jobs:
    - job: build
      timeoutInMinutes: 180
      steps:
        - bash: |
            echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
            echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
            echo '##vso[task.setvariable variable=OS_VERSION]22.04'
            echo '##vso[task.setvariable variable=IMG_PUBLISHER]Canonical'
            echo '##vso[task.setvariable variable=IMG_OFFER]0001-com-ubuntu-minimal-jammy-aks-daily-preview'
            echo '##vso[task.setvariable variable=IMG_SKU]minimal-aks-22_04-daily-lts-gen2'
            echo '##vso[task.setvariable variable=IMG_VERSION]latest'
            echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
            echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_D2s_v3'
            echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
            echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
            echo '##vso[task.setvariable variable=ARCHITECTURE]X86_64'
            echo '##vso[task.setvariable variable=ENABLE_TRUSTED_LAUNCH]False'
            echo '##vso[task.setvariable variable=SGX_INSTALL]False'
          displayName: Setup Build Variables
        - template: ./templates/.builder-release-template.yaml
          parameters:
            artifactName: 2204-minimal-gen2-containerd