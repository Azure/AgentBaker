name: $(Date:yyyyMMdd)$(Rev:.r)_$(Build.SourceBranchName)_$(BuildID)
trigger: none

parameters:
- name: build1604
  displayName: Build 1604
  type: boolean
  default: true
- name: build1804
  displayName: Build 1804
  type: boolean
  default: true
- name: build1804gen2
  displayName: Build 1804 Gen2
  type: boolean
  default: true
- name: build1804gpu
  displayName: Build 1804 GPU
  type: boolean
  default: true
- name: build1804gen2gpu
  displayName: Build 1804 Gen2 GPU
  type: boolean
  default: true
- name: build1804containerd
  displayName: Build 1804 containerd
  type: boolean
  default: true
- name: build1804gen2containerd
  displayName: Build 1804 Gen2 containerd
  type: boolean
  default: true
- name: build1804gpucontainerd
  displayName: Build 1804 GPU+containerd
  type: boolean
  default: true
- name: build1804gen2gpucontainerd
  displayName: Build 1804 Gen2 GPU+containerd
  type: boolean
  default: true
- name: buildMarinerV1
  displayName: Build MarinerV1
  type: boolean
  default: false
- name: build1804fipscontainerd
  displayName: Build 1804 FIPS containerd
  type: boolean
  default: false
- name: build1804fipsgen2containerd
  displayName: Build 1804 FIPS Gen2 containerd
  type: boolean
  default: false
- name: build1804fipsgpucontainerd
  displayName: Build 1804 FIPS GPU+containerd
  type: boolean
  default: false
- name: build1804fipsgen2gpucontainerd
  displayName: Build 1804 FIPS Gen2 GPU+containerd
  type: boolean
  default: false
- name: dryrun
  displayName: Dry run
  type: boolean
  default: false

variables:
  CONTAINER_IMAGE:  'mcr.microsoft.com/oss/azcu/go-dev:v1.28.5'

phases:
  - phase: build_vhd_1604
    condition: eq('${{ parameters.build1604 }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]16.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1604
  - phase: build_vhd_1804
    condition: eq('${{ parameters.build1804 }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804
  - phase: build_vhd_1804_gen2
    condition: eq('${{ parameters.build1804gen2 }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-gen2
  - phase: build_vhd_1804_gpu
    condition: eq('${{ parameters.build1804gpu }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-gpu
  - phase: build_vhd_1804_gen2_gpu
    condition: eq('${{ parameters.build1804gen2gpu }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]docker'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-gen2-gpu
  - phase: build_vhd_1804_containerd
    condition: eq('${{ parameters.build1804containerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-containerd
  - phase: build_vhd_1804_gen2_containerd
    condition: eq('${{ parameters.build1804gen2containerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-gen2-containerd
  - phase: build_vhd_1804_gpu_containerd
    condition: eq('${{ parameters.build1804gpucontainerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-gpu-containerd
  - phase: build_vhd_1804_gen2_gpu_containerd
    condition: eq('${{ parameters.build1804gen2gpucontainerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-gen2-gpu-containerd
  - phase: build_vhd_marinerv1
    condition: eq('${{ parameters.buildMarinerV1 }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Mariner'
          echo '##vso[task.setvariable variable=OS_VERSION]1.0'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: marinerv1
  - phase: build_vhd_1804_fips_containerd
    condition: eq('${{ parameters.build1804fipscontainerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-fips-containerd
  - phase: build_vhd_1804_fips_gen2_containerd
    condition: eq('${{ parameters.build1804fipsgen2containerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_DS2_v2'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]None'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-fips-gen2-containerd
  - phase: build_vhd_1804_fips_gpu_containerd
    condition: eq('${{ parameters.build1804fipsgpucontainerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V1'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-fips-gpu-containerd
  - phase: build_vhd_1804_fips_gen2_gpu_containerd
    condition: eq('${{ parameters.build1804fipsgen2gpucontainerd }}', true)
    queue:
      name: Hosted Ubuntu 1604
      timeoutInMinutes: 180
    steps:
      - bash: |
          echo '##vso[task.setvariable variable=DRY_RUN]${{parameters.dryrun}}'
          echo '##vso[task.setvariable variable=OS_SKU]Ubuntu'
          echo '##vso[task.setvariable variable=OS_VERSION]18.04'
          echo '##vso[task.setvariable variable=HYPERV_GENERATION]V2'
          echo '##vso[task.setvariable variable=AZURE_VM_SIZE]Standard_NC6s_v3'
          echo '##vso[task.setvariable variable=FEATURE_FLAGS]fullgpudaemon'
          echo '##vso[task.setvariable variable=CONTAINER_RUNTIME]containerd'
          echo '##vso[task.setvariable variable=ENABLE_FIPS]True'
        displayName: Setup Build Variables
      - template: ./templates/.builder-release-template.yaml
        parameters:
          artifactName: 1804-fips-gen2-gpu-containerd 
