syntax = "proto3";

package agentbaker.v1;

// illustrative division only
message Configuration {
  // System Configuration
  string api_server_endpoint = 1;
  string cluster_certificate_authority = 2;

  // only required until Secure TLS bootstrapping in place
  // would use kubelet identity after that.
  string tls_bootstrap_token = 3;

  // cluster/user config
  string kubernetes_version = 4; // Q: can this be auto-detected? Or is this part of specifying the desired node version?
  IdentityConfiguration identity_configuration = 5;
  NetworkPluginType network_plugin = 6;
  NetworkPolicyType network_policy = 7;

  // ... and a bunch of user-specified config
  HTTPProxyConfig http_proxy_configuration = 8;

  repeated string trusted_certificate_authorities = 9;

  FeatureState ssh_status = 10;
  FeatureState unatteded_upgrade_status = 11;

  string message_of_the_day = 12;
  string swap_file_size_mb = 13;
  SysctlConfig sysctls = 14;

  KubeletConfiguration kubelet_configuration = 15;

  optional string gpu_instance_profile = 16;
}

message KubeletConfiguration {
  // TODO(ace): remove these/make api defensible
  repeated string kubelet_flags = 1;
  map<string, string> kubelet_node_labels = 2;
  repeated Taint taints = 3;
  repeated Taint startup_taints = 4;
  KubeletDiskType kubelet_disk_type = 5;
}

message SysctlConfig {
  repeated Sysctl sysctls = 1;
}

enum FeatureState {
  FEATURE_STATE_UNSPECIFIED = 0;
  FEATURE_STATE_ENABLED = 1;
  FEATURE_STATE_DISABLED = 2;
}

message IdentityConfiguration {
  IdentityType identity_type = 1; // Q: I am assuming this is a better pattern than Oneof?
  string service_principal_id = 2;
  string service_principal_secret = 3;
  string user_identity_id = 4;
}

enum IdentityType {
  IDENTITY_TYPE_UNSPECIFIED = 0;
  IDENTITY_TYPE_SERVICE_PRINCIPAL = 1;
  IDENTITY_TYPE_SYSTEM_IDENTITY = 2;
  IDENTITY_TYPE_USER_IDENTITY = 3;
}

enum NetworkPluginType {
  NETWORK_PLUGIN_TYPE_UNSPECIFIED = 0;
  NETWORK_PLUGIN_TYPE_NONE = 1;
  NETWORK_PLUGIN_TYPE_AZURE = 2;
  NETWORK_PLUGIN_TYPE_KUBENET = 3;
}

enum NetworkPolicyType {
  NETWORK_POLICY_TYPE_UNSPECIFIED = 0;
  NETWORK_POLICY_TYPE_NONE = 1;
  NETWORK_POLICY_TYPE_AZURE = 2;
  NETWORK_POLICY_TYPE_CALICO = 3;
}

message HTTPProxyConfig {
  optional string http_proxy = 1;
  optional string https_proxy = 2;
  repeated string no_proxy = 3;
  optional string trusted_certificate_authority = 4;
}

enum KubeletDiskType {
  KUBELET_DISK_TYPE_UNSPECIFIED = 0;
  KUBELET_DISK_TYPE_OS_DISK = 1;
  KUBELET_DISK_TYPE_TEMP_DISK = 2;
}

message Taint {
  string key = 1;
  string effect = 2;
}

message Sysctl {
  string token = 1;
  string value = 2;
}
