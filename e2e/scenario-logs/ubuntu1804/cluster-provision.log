+ '[' -f /opt/azure/containers/provision.complete ']'
+ LOG_DIR=/var/log/azure/aks
+ mkdir -p /var/log/azure/aks
+ aptmarkWALinuxAgent hold
/opt/azure/containers/provision.sh: line 10: aptmarkWALinuxAgent: command not found
+ ln -s /var/log/azure/cluster-provision.log /var/log/azure/cluster-provision-cse-output.log /opt/azure/components.json /opt/azure/kube-proxy-images.json /opt/azure/manifest.json /opt/azure/cloud-init-files.paved /opt/azure/vhd-install.complete /var/log/azure/aks/
+ python3 /opt/azure/containers/provision_redact_cloud_config.py --cloud-config-path /var/lib/cloud/instance/cloud-config.txt --output-path /var/log/azure/aks/cloud-config.txt
Traceback (most recent call last):
  File "/opt/azure/containers/provision_redact_cloud_config.py", line 67, in <module>
    redact_cloud_config(args.cloud_config_path, args.output_path)
  File "/opt/azure/containers/provision_redact_cloud_config.py", line 29, in redact_cloud_config
    with open(cloud_config_path, 'r') as f:
FileNotFoundError: [Errno 2] No such file or directory: '/var/lib/cloud/instance/cloud-config.txt'
++ lsb_release -r -s
+ UBUNTU_RELEASE=18.04
+ [[ 18.04 == \1\6\.\0\4 ]]
++ date
++ hostname
+ echo Thu Jul 27 08:28:45 UTC 2023,abtestjxwc000000, startcustomscript
++ seq 1 3600
+ for i in $(seq 1 3600)
+ '[' -s /opt/azure/containers/provision_source.sh ']'
+ grep -Fq '#HELPERSEOF' /opt/azure/containers/provision_source.sh
+ break
+ sed -i /#HELPERSEOF/d /opt/azure/containers/provision_source.sh
+ source /opt/azure/containers/provision_source.sh
++ ERR_SYSTEMCTL_START_FAIL=4
++ ERR_CLOUD_INIT_TIMEOUT=5
++ ERR_FILE_WATCH_TIMEOUT=6
++ ERR_HOLD_WALINUXAGENT=7
++ ERR_RELEASE_HOLD_WALINUXAGENT=8
++ ERR_APT_INSTALL_TIMEOUT=9
++ ERR_DOCKER_INSTALL_TIMEOUT=20
++ ERR_DOCKER_DOWNLOAD_TIMEOUT=21
++ ERR_DOCKER_KEY_DOWNLOAD_TIMEOUT=22
++ ERR_DOCKER_APT_KEY_TIMEOUT=23
++ ERR_DOCKER_START_FAIL=24
++ ERR_MOBY_APT_LIST_TIMEOUT=25
++ ERR_MS_GPG_KEY_DOWNLOAD_TIMEOUT=26
++ ERR_MOBY_INSTALL_TIMEOUT=27
++ ERR_CONTAINERD_INSTALL_TIMEOUT=28
++ ERR_RUNC_INSTALL_TIMEOUT=29
++ ERR_K8S_RUNNING_TIMEOUT=30
++ ERR_K8S_DOWNLOAD_TIMEOUT=31
++ ERR_KUBECTL_NOT_FOUND=32
++ ERR_IMG_DOWNLOAD_TIMEOUT=33
++ ERR_KUBELET_START_FAIL=34
++ ERR_DOCKER_IMG_PULL_TIMEOUT=35
++ ERR_CONTAINERD_CTR_IMG_PULL_TIMEOUT=36
++ ERR_CONTAINERD_CRICTL_IMG_PULL_TIMEOUT=37
++ ERR_CONTAINERD_INSTALL_FILE_NOT_FOUND=38
++ ERR_CNI_DOWNLOAD_TIMEOUT=41
++ ERR_MS_PROD_DEB_DOWNLOAD_TIMEOUT=42
++ ERR_MS_PROD_DEB_PKG_ADD_FAIL=43
++ ERR_SYSTEMD_INSTALL_FAIL=48
++ ERR_MODPROBE_FAIL=49
++ ERR_OUTBOUND_CONN_FAIL=50
++ ERR_K8S_API_SERVER_CONN_FAIL=51
++ ERR_K8S_API_SERVER_DNS_LOOKUP_FAIL=52
++ ERR_K8S_API_SERVER_AZURE_DNS_LOOKUP_FAIL=53
++ ERR_KATA_KEY_DOWNLOAD_TIMEOUT=60
++ ERR_KATA_APT_KEY_TIMEOUT=61
++ ERR_KATA_INSTALL_TIMEOUT=62
++ ERR_VHD_FILE_NOT_FOUND=65
++ ERR_CONTAINERD_DOWNLOAD_TIMEOUT=70
++ ERR_RUNC_DOWNLOAD_TIMEOUT=71
++ ERR_CUSTOM_SEARCH_DOMAINS_FAIL=80
++ ERR_GPU_DOWNLOAD_TIMEOUT=83
++ ERR_GPU_DRIVERS_START_FAIL=84
++ ERR_GPU_DRIVERS_INSTALL_TIMEOUT=85
++ ERR_GPU_DEVICE_PLUGIN_START_FAIL=86
++ ERR_GPU_INFO_ROM_CORRUPTED=87
++ ERR_SGX_DRIVERS_INSTALL_TIMEOUT=90
++ ERR_SGX_DRIVERS_START_FAIL=91
++ ERR_APT_DAILY_TIMEOUT=98
++ ERR_APT_UPDATE_TIMEOUT=99
++ ERR_CSE_PROVISION_SCRIPT_NOT_READY_TIMEOUT=100
++ ERR_APT_DIST_UPGRADE_TIMEOUT=101
++ ERR_APT_PURGE_FAIL=102
++ ERR_SYSCTL_RELOAD=103
++ ERR_CIS_ASSIGN_ROOT_PW=111
++ ERR_CIS_ASSIGN_FILE_PERMISSION=112
++ ERR_PACKER_COPY_FILE=113
++ ERR_CIS_APPLY_PASSWORD_CONFIG=115
++ ERR_SYSTEMD_DOCKER_STOP_FAIL=116
++ ERR_CRICTL_DOWNLOAD_TIMEOUT=117
++ ERR_CRICTL_OPERATION_ERROR=118
++ ERR_CTR_OPERATION_ERROR=119
++ ERR_AZURE_STACK_GET_ARM_TOKEN=120
++ ERR_AZURE_STACK_GET_NETWORK_CONFIGURATION=121
++ ERR_AZURE_STACK_GET_SUBNET_PREFIX=122
++ ERR_VHD_BUILD_ERROR=125
++ ERR_SWAP_CREATE_FAIL=130
++ ERR_SWAP_CREATE_INSUFFICIENT_DISK_SPACE=131
++ ERR_TELEPORTD_DOWNLOAD_ERR=150
++ ERR_TELEPORTD_INSTALL_ERR=151
++ ERR_HTTP_PROXY_CA_CONVERT=160
++ ERR_UPDATE_CA_CERTS=161
++ ERR_DISBALE_IPTABLES=170
++ ERR_KRUSTLET_DOWNLOAD_TIMEOUT=171
++ ERR_DISABLE_SSH=172
++ ERR_VHD_REBOOT_REQUIRED=200
++ ERR_NO_PACKAGES_FOUND=201
++ ERR_SYSTEMCTL_MASK_FAIL=2
+++ gawk 'match($0, /^(ID_LIKE=(coreos)|ID=(.*))$/, a) { print toupper(a[2] a[3]); exit }'
+++ sort -r /etc/lsb-release /etc/os-release
++ OS=UBUNTU
+++ gawk 'match($0, /^(VERSION_ID=(.*))$/, a) { print toupper(a[2] a[3]); exit }'
+++ sort -r /etc/lsb-release /etc/os-release
+++ tr -d '"'
++ OS_VERSION=18.04
++ UBUNTU_OS_NAME=UBUNTU
++ MARINER_OS_NAME=MARINER
++ KUBECTL=/usr/local/bin/kubectl
++ DOCKER=/usr/bin/docker
++ export GPU_DV=cuda-525.85.12
++ GPU_DV=cuda-525.85.12
++ export GPU_DEST=/usr/local/nvidia
++ GPU_DEST=/usr/local/nvidia
++ NVIDIA_DOCKER_VERSION=2.8.0-1
++ DOCKER_VERSION=1.13.1-1
++ NVIDIA_CONTAINER_RUNTIME_VERSION=3.6.0
++ export NVIDIA_DRIVER_IMAGE_SHA=sha-e8873b
++ NVIDIA_DRIVER_IMAGE_SHA=sha-e8873b
++ export NVIDIA_DRIVER_IMAGE_TAG=cuda-525.85.12-sha-e8873b
++ NVIDIA_DRIVER_IMAGE_TAG=cuda-525.85.12-sha-e8873b
++ export NVIDIA_DRIVER_IMAGE=mcr.microsoft.com/aks/aks-gpu
++ NVIDIA_DRIVER_IMAGE=mcr.microsoft.com/aks/aks-gpu
++ export 'CTR_GPU_INSTALL_CMD=ctr run --privileged --rm --net-host --with-ns pid:/proc/1/ns/pid --mount type=bind,src=/opt/gpu,dst=/mnt/gpu,options=rbind --mount type=bind,src=/opt/actions,dst=/mnt/actions,options=rbind'
++ CTR_GPU_INSTALL_CMD='ctr run --privileged --rm --net-host --with-ns pid:/proc/1/ns/pid --mount type=bind,src=/opt/gpu,dst=/mnt/gpu,options=rbind --mount type=bind,src=/opt/actions,dst=/mnt/actions,options=rbind'
++ export 'DOCKER_GPU_INSTALL_CMD=docker run --privileged --net=host --pid=host -v /opt/gpu:/mnt/gpu -v /opt/actions:/mnt/actions --rm'
++ DOCKER_GPU_INSTALL_CMD='docker run --privileged --net=host --pid=host -v /opt/gpu:/mnt/gpu -v /opt/actions:/mnt/actions --rm'
++ APT_CACHE_DIR=/var/cache/apt/archives/
++ PERMANENT_CACHE_DIR=/root/aptcache/
++ EVENTS_LOGGING_DIR=/var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/
++ CURL_OUTPUT=/tmp/curl_verbose.out
+ source /opt/azure/containers/provision_source_distro.sh
++ echo 'Sourcing cse_helpers_distro.sh for Ubuntu'
Sourcing cse_helpers_distro.sh for Ubuntu
+ source /opt/azure/containers/provision_installs.sh
++ CC_SERVICE_IN_TMP=/opt/azure/containers/cc-proxy.service.in
++ CC_SOCKET_IN_TMP=/opt/azure/containers/cc-proxy.socket.in
++ CNI_CONFIG_DIR=/etc/cni/net.d
++ CNI_BIN_DIR=/opt/cni/bin
++ CNI_DOWNLOADS_DIR=/opt/cni/downloads
++ CRICTL_DOWNLOAD_DIR=/opt/crictl/downloads
++ CRICTL_BIN_DIR=/usr/local/bin
++ CONTAINERD_DOWNLOADS_DIR=/opt/containerd/downloads
++ RUNC_DOWNLOADS_DIR=/opt/runc/downloads
++ K8S_DOWNLOADS_DIR=/opt/kubernetes/downloads
+++ lsb_release -r -s
++ UBUNTU_RELEASE=18.04
++ TELEPORTD_PLUGIN_DOWNLOAD_DIR=/opt/teleportd/downloads
++ TELEPORTD_PLUGIN_BIN_DIR=/usr/local/bin
++ CONTAINERD_WASM_VERSIONS='v0.3.0 v0.5.1 v0.8.0'
++ MANIFEST_FILEPATH=/opt/azure/manifest.json
++ MAN_DB_AUTO_UPDATE_FLAG_FILEPATH=/var/lib/man-db/auto-update
++ CURL_OUTPUT=/tmp/curl_verbose.out
+ source /opt/azure/containers/provision_installs_distro.sh
++ echo 'Sourcing cse_install_distro.sh for Ubuntu'
Sourcing cse_install_distro.sh for Ubuntu
+ source /opt/azure/containers/provision_configs.sh
+++ hostname
+++ tail -c 2
++ NODE_INDEX=0
+++ hostname
++ NODE_NAME=abtestjxwc000000
+ [[ false == \t\r\u\e ]]
+ [[ false == \t\r\u\e ]]
+ [[ false == \t\r\u\e ]]
+ [[ -n curl -v --insecure --proxy-insecure https://mcr.microsoft.com/v2/ ]]
+ [[ -n export NO_PROXY=localhost,127.0.0.1,168.63.129.16,169.254.169.254,10.0.0.0/16,agentbaker-agentbaker-e2e-t-8ecadf-c82d8251.hcp.eastus.azmk8s.io;  ]]
+ eval export 'NO_PROXY=localhost,127.0.0.1,168.63.129.16,169.254.169.254,10.0.0.0/16,agentbaker-agentbaker-e2e-t-8ecadf-c82d8251.hcp.eastus.azmk8s.io;'
++ export NO_PROXY=localhost,127.0.0.1,168.63.129.16,169.254.169.254,10.0.0.0/16,agentbaker-agentbaker-e2e-t-8ecadf-c82d8251.hcp.eastus.azmk8s.io
++ NO_PROXY=localhost,127.0.0.1,168.63.129.16,169.254.169.254,10.0.0.0/16,agentbaker-agentbaker-e2e-t-8ecadf-c82d8251.hcp.eastus.azmk8s.io
+ retrycmd_if_failure 50 1 5 curl -v --insecure --proxy-insecure https://mcr.microsoft.com/v2/
+ source /etc/os-release
++ NAME=Ubuntu
++ VERSION='18.04.6 LTS (Bionic Beaver)'
++ ID=ubuntu
++ ID_LIKE=debian
++ PRETTY_NAME='Ubuntu 18.04.6 LTS'
++ VERSION_ID=18.04
++ HOME_URL=https://www.ubuntu.com/
++ SUPPORT_URL=https://help.ubuntu.com/
++ BUG_REPORT_URL=https://bugs.launchpad.net/ubuntu/
++ PRIVACY_POLICY_URL=https://www.ubuntu.com/legal/terms-and-policies/privacy-policy
++ VERSION_CODENAME=bionic
++ UBUNTU_CODENAME=bionic
+ [[ ubuntu != \m\a\r\i\n\e\r ]]
+ echo 'Removing man-db auto-update flag file...'
Removing man-db auto-update flag file...
+ logs_to_events AKS.CSE.removeManDbAutoUpdateFlagFile removeManDbAutoUpdateFlagFile
+ local task=AKS.CSE.removeManDbAutoUpdateFlagFile
+ shift
++ date +%s%3N
+ local eventsFileName=1690446525697
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:45.699'
+ removeManDbAutoUpdateFlagFile
+ rm -f /var/lib/man-db/auto-update
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:45.706'
++ jq -n --arg Timestamp '2023-07-27 08:28:45.699' --arg OperationId '2023-07-27 08:28:45.706' --arg Version 1.23 --arg TaskName AKS.CSE.removeManDbAutoUpdateFlagFile --arg EventLevel Informational --arg Message 'Completed: removeManDbAutoUpdateFlagFile' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:45.699",
  "OperationId": "2023-07-27 08:28:45.706",
  "Version": "1.23",
  "TaskName": "AKS.CSE.removeManDbAutoUpdateFlagFile",
  "EventLevel": "Informational",
  "Message": "Completed: removeManDbAutoUpdateFlagFile",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:45.699",' '"OperationId":' '"2023-07-27' '08:28:45.706",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.removeManDbAutoUpdateFlagFile",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'removeManDbAutoUpdateFlagFile",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446525697.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ export -f should_skip_nvidia_drivers
++ retrycmd_if_failure_no_stats 10 1 10 bash -cx should_skip_nvidia_drivers
++ retries=10
++ wait_sleep=1
++ timeout=10
++ shift
++ shift
++ shift
+++ seq 1 10
++ for i in $(seq 1 $retries)
++ timeout 10 bash -cx should_skip_nvidia_drivers
+ should_skip_nvidia_drivers
+ set -x
++ curl -fsSL -H 'Metadata: true' --noproxy '*' 'http://169.254.169.254/metadata/instance?api-version=2021-02-01'
+ body='{"compute":{"azEnvironment":"AzurePublicCloud","customData":"","evictionPolicy":"","isHostCompatibilityLayerVm":"false","licenseType":"","location":"eastus","name":"abtestjxwc_0","offer":"","osProfile":{"adminUsername":"azureuser","computerName":"abtestjxwc000000","disablePasswordAuthentication":"true"},"osType":"Linux","placementGroupId":"57b17199-9210-4600-ac3e-68fa94e84385","plan":{"name":"","product":"","publisher":""},"platformFaultDomain":"0","platformUpdateDomain":"0","priority":"","provider":"Microsoft.Compute","publicKeys":[{"keyData":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCy5Yn2u7qMGbxm8R9eh7dkElDqeYUqrzB5wMyI9+Wg55Gy62D6cBosYFjaURWQz8Upr1TMF4Zl8KYmzo8x4Ih88JPGsVDE0zZKIVEjXZwaQL2yGOkRyfB49gWf91FtRTqE8+j8xNeTl3tw+olb6NqK42OQa8E2WMKE8pzYIG0wZkbVR6r+H4FIRl8wlUVhYnuWkwTOs2ES57hZOOfQMnEF3smANbbDvGQhL7ayLwPHG1SduvF88r0llic+SL/H1Mm5IZAZedLhRuKBNwLbixXNMniZEGYWF73W274SHbQYqSWmPF97CwVIW3M6WxljMz0lmlnszqOH3Hn3lGt1Hx558h6me2fLddbM+02IMsIZ43r02Zn61/VzOhA9pQIHMITuiBy2V5/OOmlSqTZ5/VOA37MW95YiIRkqaFZj1qjdiqs1BxNl/WpJtXWyiCC/vq8grWslTyFYOdKbzdd7Hd8WVcQIIXLYLZXx/2n2uPotHAre0vpPn16z/Aly8tM6iw0AjOSU3iP/mtlOB8T2KfMYcu9i9Z6cT1h2iR3xO43RW5anqC+DhA90MLZcUC7LWqodYvWhidCYVASvfClSrA2QQy9M0XmpVgeF+qpfjFbqEn+Xfkd7C8bu3vRB50BG+bRARIdpmDXn3mYJULczGjmNksiivSB8hn5YhM8S6WxfjQ==\n","path":"/home/azureuser/.ssh/authorized_keys"}],"publisher":"","resourceGroupName":"MC_agentbaker-e2e-tests_agentbaker-e2e-test-cluster-fyzp2_eastus","resourceId":"/subscriptions/8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8/resourceGroups/MC_agentbaker-e2e-tests_agentbaker-e2e-test-cluster-fyzp2_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/abtestjxwc/virtualMachines/0","securityProfile":{"secureBootEnabled":"false","virtualTpmEnabled":"false"},"sku":"","storageProfile":{"dataDisks":[],"imageReference":{"id":"/subscriptions/8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8/resourceGroups/aksvhdtestbuildrg/providers/Microsoft.Compute/galleries/PackerSigGalleryEastUS/images/1804Gen2/versions/1.1690441692.21456","offer":"","publisher":"","sku":"","version":""},"osDisk":{"caching":"ReadWrite","createOption":"FromImage","diffDiskSettings":{"option":""},"diskSizeGB":"512","encryptionSettings":{"enabled":"false"},"image":{"uri":""},"managedDisk":{"id":"/subscriptions/8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8/resourceGroups/MC_agentbaker-e2e-tests_agentbaker-e2e-test-cluster-fyzp2_eastus/providers/Microsoft.Compute/disks/abtestjxwc_abtestjxwc_0_OsDisk_1_ecb26a23e8104b878c0e69416cd59724","storageAccountType":"Premium_LRS"},"name":"abtestjxwc_abtestjxwc_0_OsDisk_1_ecb26a23e8104b878c0e69416cd59724","osType":"Linux","vhd":{"uri":""},"writeAcceleratorEnabled":"false"},"resourceDisk":{"size":"14336"}},"subscriptionId":"8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8","tags":"","tagsList":[],"userData":"","version":"","vmId":"a1719149-2269-4812-b16c-74046b3140bb","vmScaleSetName":"abtestjxwc","vmSize":"Standard_DS2_v2","zone":""},"network":{"interface":[{"ipv4":{"ipAddress":[{"privateIpAddress":"10.224.0.39","publicIpAddress":""}],"subnet":[{"address":"10.224.0.0","prefix":"16"}]},"ipv6":{"ipAddress":[]},"macAddress":"0022482DF7BC"}]}}'
+ ret=0
+ '[' 0 '!=' 0 ']'
++ echo '{"compute":{"azEnvironment":"AzurePublicCloud","customData":"","evictionPolicy":"","isHostCompatibilityLayerVm":"false","licenseType":"","location":"eastus","name":"abtestjxwc_0","offer":"","osProfile":{"adminUsername":"azureuser","computerName":"abtestjxwc000000","disablePasswordAuthentication":"true"},"osType":"Linux","placementGroupId":"57b17199-9210-4600-ac3e-68fa94e84385","plan":{"name":"","product":"","publisher":""},"platformFaultDomain":"0","platformUpdateDomain":"0","priority":"","provider":"Microsoft.Compute","publicKeys":[{"keyData":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCy5Yn2u7qMGbxm8R9eh7dkElDqeYUqrzB5wMyI9+Wg55Gy62D6cBosYFjaURWQz8Upr1TMF4Zl8KYmzo8x4Ih88JPGsVDE0zZKIVEjXZwaQL2yGOkRyfB49gWf91FtRTqE8+j8xNeTl3tw+olb6NqK42OQa8E2WMKE8pzYIG0wZkbVR6r+H4FIRl8wlUVhYnuWkwTOs2ES57hZOOfQMnEF3smANbbDvGQhL7ayLwPHG1SduvF88r0llic+SL/H1Mm5IZAZedLhRuKBNwLbixXNMniZEGYWF73W274SHbQYqSWmPF97CwVIW3M6WxljMz0lmlnszqOH3Hn3lGt1Hx558h6me2fLddbM+02IMsIZ43r02Zn61/VzOhA9pQIHMITuiBy2V5/OOmlSqTZ5/VOA37MW95YiIRkqaFZj1qjdiqs1BxNl/WpJtXWyiCC/vq8grWslTyFYOdKbzdd7Hd8WVcQIIXLYLZXx/2n2uPotHAre0vpPn16z/Aly8tM6iw0AjOSU3iP/mtlOB8T2KfMYcu9i9Z6cT1h2iR3xO43RW5anqC+DhA90MLZcUC7LWqodYvWhidCYVASvfClSrA2QQy9M0XmpVgeF+qpfjFbqEn+Xfkd7C8bu3vRB50BG+bRARIdpmDXn3mYJULczGjmNksiivSB8hn5YhM8S6WxfjQ==\n","path":"/home/azureuser/.ssh/authorized_keys"}],"publisher":"","resourceGroupName":"MC_agentbaker-e2e-tests_agentbaker-e2e-test-cluster-fyzp2_eastus","resourceId":"/subscriptions/8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8/resourceGroups/MC_agentbaker-e2e-tests_agentbaker-e2e-test-cluster-fyzp2_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/abtestjxwc/virtualMachines/0","securityProfile":{"secureBootEnabled":"false","virtualTpmEnabled":"false"},"sku":"","storageProfile":{"dataDisks":[],"imageReference":{"id":"/subscriptions/8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8/resourceGroups/aksvhdtestbuildrg/providers/Microsoft.Compute/galleries/PackerSigGalleryEastUS/images/1804Gen2/versions/1.1690441692.21456","offer":"","publisher":"","sku":"","version":""},"osDisk":{"caching":"ReadWrite","createOption":"FromImage","diffDiskSettings":{"option":""},"diskSizeGB":"512","encryptionSettings":{"enabled":"false"},"image":{"uri":""},"managedDisk":{"id":"/subscriptions/8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8/resourceGroups/MC_agentbaker-e2e-tests_agentbaker-e2e-test-cluster-fyzp2_eastus/providers/Microsoft.Compute/disks/abtestjxwc_abtestjxwc_0_OsDisk_1_ecb26a23e8104b878c0e69416cd59724","storageAccountType":"Premium_LRS"},"name":"abtestjxwc_abtestjxwc_0_OsDisk_1_ecb26a23e8104b878c0e69416cd59724","osType":"Linux","vhd":{"uri":""},"writeAcceleratorEnabled":"false"},"resourceDisk":{"size":"14336"}},"subscriptionId":"8ecadfc9-d1a3-4ea4-b844-0d9f87e4d7c8","tags":"","tagsList":[],"userData":"","version":"","vmId":"a1719149-2269-4812-b16c-74046b3140bb","vmScaleSetName":"abtestjxwc","vmSize":"Standard_DS2_v2","zone":""},"network":{"interface":[{"ipv4":{"ipAddress":[{"privateIpAddress":"10.224.0.39","publicIpAddress":""}],"subnet":[{"address":"10.224.0.0","prefix":"16"}]},"ipv6":{"ipAddress":[]},"macAddress":"0022482DF7BC"}]}}'
++ jq -e '.compute.tagsList | map(select(.name | test("SkipGpuDriverInstall"; "i")))[0].value // "false" | test("true"; "i")'
+ should_skip=false
+ echo false
++ break
+ skip_nvidia_driver_install=false
+ ret=0
+ [[ 0 != \0 ]]
+ [[ false != \t\r\u\e ]]
+ logs_to_events AKS.CSE.cleanUpGPUDrivers cleanUpGPUDrivers
+ local task=AKS.CSE.cleanUpGPUDrivers
+ shift
++ date +%s%3N
+ local eventsFileName=1690446525920
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:45.921'
+ cleanUpGPUDrivers
+ rm -Rf /usr/local/nvidia /opt/gpu
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:46.002'
++ jq -n --arg Timestamp '2023-07-27 08:28:45.921' --arg OperationId '2023-07-27 08:28:46.002' --arg Version 1.23 --arg TaskName AKS.CSE.cleanUpGPUDrivers --arg EventLevel Informational --arg Message 'Completed: cleanUpGPUDrivers' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:45.921",
  "OperationId": "2023-07-27 08:28:46.002",
  "Version": "1.23",
  "TaskName": "AKS.CSE.cleanUpGPUDrivers",
  "EventLevel": "Informational",
  "Message": "Completed: cleanUpGPUDrivers",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:45.921",' '"OperationId":' '"2023-07-27' '08:28:46.002",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.cleanUpGPUDrivers",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'cleanUpGPUDrivers",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446525920.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ logs_to_events AKS.CSE.disableSystemdResolved disableSystemdResolved
+ local task=AKS.CSE.disableSystemdResolved
+ shift
++ date +%s%3N
+ local eventsFileName=1690446526009
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:46.011'
+ disableSystemdResolved
+ ls -ltr /etc/resolv.conf
lrwxrwxrwx 1 root root 39 Jun  7 15:58 /etc/resolv.conf -> ../run/systemd/resolve/stub-resolv.conf
+ cat /etc/resolv.conf
# This file is managed by man:systemd-resolved(8). Do not edit.
#
# This is a dynamic resolv.conf file for connecting local clients to the
# internal DNS stub resolver of systemd-resolved. This file lists all
# configured search domains.
#
# Run "systemd-resolve --status" to see details about the uplink DNS servers
# currently in use.
#
# Third party programs must not access this file directly, but only through the
# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
# replace this symlink by a static file or a different symlink.
#
# See man:systemd-resolved.service(8) for details about the supported modes of
# operation for /etc/resolv.conf.

nameserver 127.0.0.53
options edns0
search zb1vlfgxiliurmy2r0cnrx0qdc.bx.internal.cloudapp.net
++ lsb_release -r -s
+ UBUNTU_RELEASE=18.04
+ [[ 18.04 == \1\8\.\0\4 ]]
+ echo 'Ingorings systemd-resolved query service but using its resolv.conf file'
Ingorings systemd-resolved query service but using its resolv.conf file
+ echo 'This is the simplest approach to workaround resolved issues without completely uninstall it'
This is the simplest approach to workaround resolved issues without completely uninstall it
+ '[' -f /run/systemd/resolve/resolv.conf ']'
+ sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
+ ls -ltr /etc/resolv.conf
lrwxrwxrwx 1 root root 32 Jul 27 08:28 /etc/resolv.conf -> /run/systemd/resolve/resolv.conf
+ cat /etc/resolv.conf
# This file is managed by man:systemd-resolved(8). Do not edit.
#
# This is a dynamic resolv.conf file for connecting local clients directly to
# all known uplink DNS servers. This file lists all configured search domains.
#
# Third party programs must not access this file directly, but only through the
# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
# replace this symlink by a static file or a different symlink.
#
# See man:systemd-resolved.service(8) for details about the supported modes of
# operation for /etc/resolv.conf.

nameserver 168.63.129.16
search zb1vlfgxiliurmy2r0cnrx0qdc.bx.internal.cloudapp.net
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:46.348'
++ jq -n --arg Timestamp '2023-07-27 08:28:46.011' --arg OperationId '2023-07-27 08:28:46.348' --arg Version 1.23 --arg TaskName AKS.CSE.disableSystemdResolved --arg EventLevel Informational --arg Message 'Completed: disableSystemdResolved' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:46.011",
  "OperationId": "2023-07-27 08:28:46.348",
  "Version": "1.23",
  "TaskName": "AKS.CSE.disableSystemdResolved",
  "EventLevel": "Informational",
  "Message": "Completed: disableSystemdResolved",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:46.011",' '"OperationId":' '"2023-07-27' '08:28:46.348",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.disableSystemdResolved",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'disableSystemdResolved",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446526009.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ logs_to_events AKS.CSE.configureAdminUser configureAdminUser
+ local task=AKS.CSE.configureAdminUser
+ shift
++ date +%s%3N
+ local eventsFileName=1690446526355
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:46.357'
+ configureAdminUser
+ chage -E -1 -I -1 -m 0 -M 99999 azureuser
chage: user 'azureuser' does not exist in /etc/passwd
+ chage -l azureuser
chage: user 'azureuser' does not exist in /etc/passwd
+ ret=1
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:46.402'
++ jq -n --arg Timestamp '2023-07-27 08:28:46.357' --arg OperationId '2023-07-27 08:28:46.402' --arg Version 1.23 --arg TaskName AKS.CSE.configureAdminUser --arg EventLevel Informational --arg Message 'Completed: configureAdminUser' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:46.357",
  "OperationId": "2023-07-27 08:28:46.402",
  "Version": "1.23",
  "TaskName": "AKS.CSE.configureAdminUser",
  "EventLevel": "Informational",
  "Message": "Completed: configureAdminUser",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:46.357",' '"OperationId":' '"2023-07-27' '08:28:46.402",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.configureAdminUser",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'configureAdminUser",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446526355.json: No such file or directory
+ '[' 1 '!=' 0 ']'
+ return 1
+ VHD_LOGS_FILEPATH=/opt/azure/vhd-install.complete
+ '[' -f /opt/azure/vhd-install.complete ']'
+ echo 'detected golden image pre-install'
detected golden image pre-install
+ logs_to_events AKS.CSE.cleanUpContainerImages cleanUpContainerImages
+ local task=AKS.CSE.cleanUpContainerImages
+ shift
++ date +%s%3N
+ local eventsFileName=1690446526409
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:46.410'
+ cleanUpContainerImages
+ export KUBERNETES_VERSION
+ export CLI_TOOL
+ export -f retrycmd_if_failure
+ export -f removeContainerImage
+ export -f cleanUpImages
+ export -f cleanUpKubeProxyImages
+ ret=0
+ bash -c cleanUpKubeProxyImages
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:46.413'
++ jq -n --arg Timestamp '2023-07-27 08:28:46.410' --arg OperationId '2023-07-27 08:28:46.413' --arg Version 1.23 --arg TaskName AKS.CSE.cleanUpContainerImages --arg EventLevel Informational --arg Message 'Completed: cleanUpContainerImages' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:46.410",
  "OperationId": "2023-07-27 08:28:46.413",
  "Version": "1.23",
  "TaskName": "AKS.CSE.cleanUpContainerImages",
  "EventLevel": "Informational",
  "Message": "Completed: cleanUpContainerImages",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:46.410",' '"OperationId":' '"2023-07-27' '08:28:46.413",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.cleanUpContainerImages",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'cleanUpContainerImages",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446526409.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ FULL_INSTALL_REQUIRED=false
+ [[ UBUNTU == UBUNTU ]]
+ '[' false = true ']'
+ echo 'Golden image; skipping dependencies installation'
Golden image; skipping dependencies installation
+ logs_to_events AKS.CSE.installContainerRuntime installContainerRuntime
+ local task=AKS.CSE.installContainerRuntime
+ shift
Thu Jul 27 08:28:46 UTC 2023,abtestjxwc000000, startCleanUpKubeProxyImages
++ date +%s%3N
+ local eventsFileName=1690446526421
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:46.424'
+ installContainerRuntime
+ '[' true == true ']'
+ echo 'in installContainerRuntime - KUBERNETES_VERSION = 1.24.0'
in installContainerRuntime - KUBERNETES_VERSION = 1.24.0
+ local containerd_version
+ '[' -f /opt/azure/manifest.json ']'
++ jq -r .containerd.edge /opt/azure/manifest.json
+ containerd_version=1.7.1-1
++ echo 1.7.1-1
++ cut -d- -f1
+ containerd_patch_version=1.7.1
++ echo 1.7.1-1
++ cut -d- -f2
+ containerd_revision=1
+ '[' -z 1.7.1 ']'
+ '[' 1.7.1 == null ']'
+ '[' 1 == null ']'
+ logs_to_events AKS.CSE.installContainerRuntime.installStandaloneContainerd 'installStandaloneContainerd 1.7.1 1'
+ local task=AKS.CSE.installContainerRuntime.installStandaloneContainerd
+ shift
++ date +%s%3N
+ local eventsFileName=1690446526450
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:46.454'
+ installStandaloneContainerd 1.7.1 1
++ lsb_release -r -s
+ UBUNTU_RELEASE=18.04
++ lsb_release -c -s
+ UBUNTU_CODENAME=bionic
+ CONTAINERD_VERSION=1.7.1
+ CONTAINERD_PATCH_VERSION=1
+ logs_to_events AKS.CSE.installContainerRuntime.ensureRunc 'ensureRunc '
+ local task=AKS.CSE.installContainerRuntime.ensureRunc
+ shift
++ date +%s%3N
+ local eventsFileName=1690446526548
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:46.549'
+ ensureRunc
+ RUNC_PACKAGE_URL=
+ [[ ! -z '' ]]
+ TARGET_VERSION=
+ [[ -z '' ]]
+ TARGET_VERSION=1.1.7+azure-ubuntu18.04
++ isARM64
+++ getCPUArch
++++ uname -m
+++ arch=x86_64
+++ [[ x86_64 == \a\a\r\c\h\6\4 ]]
+++ [[ x86_64 == \a\r\m\6\4 ]]
+++ echo amd64
++ [[ amd64 == \a\r\m\6\4 ]]
++ echo 0
+ [[ 0 == 1 ]]
++ getCPUArch
+++ uname -m
++ arch=x86_64
++ [[ x86_64 == \a\a\r\c\h\6\4 ]]
++ [[ x86_64 == \a\r\m\6\4 ]]
++ echo amd64
+ CPU_ARCH=amd64
++ runc --version
++ head -n1
++ sed 's/runc version //'
+ CURRENT_VERSION=1.1.7
+ CLEANED_TARGET_VERSION=1.1.7
+ '[' 1.1.7 == 1.1.7 ']'
+ echo 'target moby-runc version 1.1.7 is already installed. skipping installRunc.'
target moby-runc version 1.1.7 is already installed. skipping installRunc.
+ return
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:47.906'
++ jq -n --arg Timestamp '2023-07-27 08:28:46.549' --arg OperationId '2023-07-27 08:28:47.906' --arg Version 1.23 --arg TaskName AKS.CSE.installContainerRuntime.ensureRunc --arg EventLevel Informational --arg Message 'Completed: ensureRunc ' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:46.549",
  "OperationId": "2023-07-27 08:28:47.906",
  "Version": "1.23",
  "TaskName": "AKS.CSE.installContainerRuntime.ensureRunc",
  "EventLevel": "Informational",
  "Message": "Completed: ensureRunc ",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:46.549",' '"OperationId":' '"2023-07-27' '08:28:47.906",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.installContainerRuntime.ensureRunc",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' ensureRunc '",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446526548.json: No such file or directory
+ '[' 0 '!=' 0 ']'
++ containerd -version
++ sed 's|v||'
++ cut -d ' ' -f 3
++ cut -d + -f 1
+ CURRENT_VERSION=1.7.1
++ containerd -version
++ cut -d ' ' -f 4
+ CURRENT_COMMIT=1677a17964311325ed1c31e2c0a3589ce6d5c30d
+ '[' -z 1.7.1 ']'
+ CONTAINERD_PACKAGE_URL=
+ [[ ! -z '' ]]
+ [[ -z 1.7.1 ]]
+ echo 'Using specified Containerd Version: 1.7.1-1'
Using specified Containerd Version: 1.7.1-1
++ paste -sd.
++ head -n 2
++ tr . '\n'
++ echo 1.7.1
+ CURRENT_MAJOR_MINOR=1.7
++ paste -sd.
++ tr . '\n'
++ echo 1.7.1
++ head -n 2
+ DESIRED_MAJOR_MINOR=1.7
+ semverCompare 1.7.1 1.7.1
++ echo 1.7.1
++ cut -d + -f 1
+ VERSION_A=1.7.1
++ cut -d + -f 1
++ echo 1.7.1
+ VERSION_B=1.7.1
+ [[ 1.7.1 == \1\.\7\.\1 ]]
+ return 0
+ HAS_GREATER_VERSION=0
+ [[ 0 == \0 ]]
+ [[ 1.7 == \1\.\7 ]]
+ echo 'currently installed containerd version 1.7.1 matches major.minor with higher patch 1.7.1. skipping installStandaloneContainerd.'
currently installed containerd version 1.7.1 matches major.minor with higher patch 1.7.1. skipping installStandaloneContainerd.
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:53.355'
++ jq -n --arg Timestamp '2023-07-27 08:28:46.454' --arg OperationId '2023-07-27 08:28:53.355' --arg Version 1.23 --arg TaskName AKS.CSE.installContainerRuntime.installStandaloneContainerd --arg EventLevel Informational --arg Message 'Completed: installStandaloneContainerd 1.7.1 1' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:46.454",
  "OperationId": "2023-07-27 08:28:53.355",
  "Version": "1.23",
  "TaskName": "AKS.CSE.installContainerRuntime.installStandaloneContainerd",
  "EventLevel": "Informational",
  "Message": "Completed: installStandaloneContainerd 1.7.1 1",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:46.454",' '"OperationId":' '"2023-07-27' '08:28:53.355",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.installContainerRuntime.installStandaloneContainerd",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' installStandaloneContainerd 1.7.1 '1",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446526450.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ echo 'in installContainerRuntime - CONTAINERD_VERION = 1.7.1'
in installContainerRuntime - CONTAINERD_VERION = 1.7.1
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:28:53.363'
++ jq -n --arg Timestamp '2023-07-27 08:28:46.424' --arg OperationId '2023-07-27 08:28:53.363' --arg Version 1.23 --arg TaskName AKS.CSE.installContainerRuntime --arg EventLevel Informational --arg Message 'Completed: installContainerRuntime' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:46.424",
  "OperationId": "2023-07-27 08:28:53.363",
  "Version": "1.23",
  "TaskName": "AKS.CSE.installContainerRuntime",
  "EventLevel": "Informational",
  "Message": "Completed: installContainerRuntime",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:46.424",' '"OperationId":' '"2023-07-27' '08:28:53.363",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.installContainerRuntime",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'installContainerRuntime",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446526421.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ '[' true == true ']'
+ '[' false == true ']'
+ setupCNIDirs
+ mkdir -p /opt/cni/bin
+ chown -R root:root /opt/cni/bin
+ chmod -R 755 /opt/cni/bin
+ mkdir -p /etc/cni/net.d
+ chown -R root:root /etc/cni/net.d
+ chmod 755 /etc/cni/net.d
+ logs_to_events AKS.CSE.installNetworkPlugin installNetworkPlugin
+ local task=AKS.CSE.installNetworkPlugin
+ shift
++ date +%s%3N
+ local eventsFileName=1690446533407
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:28:53.409'
+ installNetworkPlugin
+ [[ kubenet = \a\z\u\r\e ]]
+ installCNI
+ CNI_TGZ_TMP=cni-plugins-amd64-v0.7.6.tgz
+ CNI_DIR_TMP=cni-plugins-amd64-v0.7.6
+ [[ -d /opt/cni/downloads/cni-plugins-amd64-v0.7.6 ]]
+ [[ ! -f /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz ]]
+ downloadCNI
+ mkdir -p /opt/cni/downloads
+ CNI_TGZ_TMP=cni-plugins-amd64-v0.7.6.tgz
+ retrycmd_get_tarball 120 5 /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.6.tgz
+ tar_retries=120
+ wait_sleep=5
+ tarball=/opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz
+ url=https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.6.tgz
+ echo '120 retries'
120 retries
++ seq 1 120
+ for i in $(seq 1 $tar_retries)
+ tar -tzf /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz
tar (child): /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz: Cannot open: No such file or directory
tar (child): Error is not recoverable: exiting now
tar: Child returned status 2
tar: Error is not recoverable: exiting now
+ '[' 1 -eq 120 ']'
+ timeout 60 curl -fsSLv https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.6.tgz -o /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz
+ tee /tmp/curl_verbose.out
+ [[ 0 != 0 ]]
+ sleep 5
+ for i in $(seq 1 $tar_retries)
+ tar -tzf /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz
./
./flannel
./ptp
./host-local
./portmap
./tuning
./vlan
./host-device
./sample
./dhcp
./ipvlan
./macvlan
./loopback
ctr: failed to dial "/run/containerd/containerd.sock": context deadline exceeded: connection error: desc = "transport: error while dialing: dial unix:///run/containerd/containerd.sock: timeout"
Executed "bash -c cleanupImagesRun" 1 times
./bridge
Thu Jul 27 08:28:59 UTC 2023,abtestjxwc000000, endCleanUpKubeProxyImages
+ break
+ tar -xzf /opt/cni/downloads/cni-plugins-amd64-v0.7.6.tgz -C /opt/cni/bin
+ chown -R root:root /opt/cni/bin
+ rm -rf /opt/cni/downloads
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:00.202'
++ jq -n --arg Timestamp '2023-07-27 08:28:53.409' --arg OperationId '2023-07-27 08:29:00.202' --arg Version 1.23 --arg TaskName AKS.CSE.installNetworkPlugin --arg EventLevel Informational --arg Message 'Completed: installNetworkPlugin' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:28:53.409",
  "OperationId": "2023-07-27 08:29:00.202",
  "Version": "1.23",
  "TaskName": "AKS.CSE.installNetworkPlugin",
  "EventLevel": "Informational",
  "Message": "Completed: installNetworkPlugin",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:28:53.409",' '"OperationId":' '"2023-07-27' '08:29:00.202",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.installNetworkPlugin",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'installNetworkPlugin",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446533407.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ '[' false == true ']'
+ REBOOTREQUIRED=false
++ date
++ hostname
+ echo Thu Jul 27 08:29:00 UTC 2023,abtestjxwc000000, 'Start configuring GPU drivers'
Thu Jul 27 08:29:00 UTC 2023,abtestjxwc000000, Start configuring GPU drivers
+ [[ false = true ]]
++ date
++ hostname
+ echo Thu Jul 27 08:29:00 UTC 2023,abtestjxwc000000, 'End configuring GPU drivers'
Thu Jul 27 08:29:00 UTC 2023,abtestjxwc000000, End configuring GPU drivers
+ '[' false == true ']'
+ logs_to_events AKS.CSE.installKubeletKubectlAndKubeProxy installKubeletKubectlAndKubeProxy
+ local task=AKS.CSE.installKubeletKubectlAndKubeProxy
+ shift
++ date +%s%3N
+ local eventsFileName=1690446540225
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:00.227'
+ installKubeletKubectlAndKubeProxy
+ CUSTOM_KUBE_BINARY_DOWNLOAD_URL=
+ [[ ! -z '' ]]
+ [[ ! -f /usr/local/bin/kubectl-1.24.0 ]]
++ echo 1.24.0
++ cut -d. -f2
+ (( 24 >= 17 ))
+ '[' -n https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz ']'
+ logs_to_events AKS.CSE.installKubeletKubectlAndKubeProxy.extractKubeBinaries extractKubeBinaries 1.24.0 https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz
+ local task=AKS.CSE.installKubeletKubectlAndKubeProxy.extractKubeBinaries
+ shift
++ date +%s%3N
+ local eventsFileName=1690446540233
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:00.240'
+ extractKubeBinaries 1.24.0 https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz
+ K8S_VERSION=1.24.0
+ KUBE_BINARY_URL=https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz
+ mkdir -p /opt/kubernetes/downloads
+ K8S_TGZ_TMP=kubernetes-node-linux-amd64.tar.gz
+ retrycmd_get_tarball 120 5 /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz
+ tar_retries=120
+ wait_sleep=5
+ tarball=/opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz
+ url=https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz
+ echo '120 retries'
120 retries
++ seq 1 120
+ for i in $(seq 1 $tar_retries)
+ tar -tzf /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz
tar (child): /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz: Cannot open: No such file or directory
tar (child): Error is not recoverable: exiting now
tar: Child returned status 2
tar: Error is not recoverable: exiting now
+ '[' 1 -eq 120 ']'
+ tee /tmp/curl_verbose.out
+ timeout 60 curl -fsSLv https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz -o /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz
+ [[ 0 != 0 ]]
+ sleep 5
+ for i in $(seq 1 $tar_retries)
+ tar -tzf /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz
kubernetes/
kubernetes/node/
kubernetes/node/bin/
kubernetes/node/bin/kubeadm
kubernetes/node/bin/kube-log-runner
kubernetes/node/bin/kubectl-convert
kubernetes/node/bin/kubectl
kubernetes/node/bin/kube-proxy
kubernetes/node/bin/kubelet
kubernetes/LICENSES/
kubernetes/LICENSES/OWNERS
kubernetes/LICENSES/LICENSE
kubernetes/LICENSES/third_party/
kubernetes/LICENSES/third_party/multiarch/
kubernetes/LICENSES/third_party/multiarch/qemu-user-static/
kubernetes/LICENSES/third_party/multiarch/qemu-user-static/LICENSE
kubernetes/LICENSES/third_party/forked/
kubernetes/LICENSES/third_party/forked/shell2junit/
kubernetes/LICENSES/third_party/forked/shell2junit/LICENSE
kubernetes/LICENSES/third_party/forked/golang/
kubernetes/LICENSES/third_party/forked/golang/LICENSE
kubernetes/LICENSES/third_party/forked/gonum/
kubernetes/LICENSES/third_party/forked/gonum/graph/
kubernetes/LICENSES/third_party/forked/gonum/graph/LICENSE
kubernetes/LICENSES/third_party/forked/gotestsum/
kubernetes/LICENSES/third_party/forked/gotestsum/NOTICE
kubernetes/LICENSES/third_party/forked/gotestsum/LICENSE
kubernetes/LICENSES/vendor/
kubernetes/LICENSES/vendor/go.etcd.io/
kubernetes/LICENSES/vendor/go.etcd.io/bbolt/
kubernetes/LICENSES/vendor/go.etcd.io/bbolt/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/api/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/api/v3/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/api/v3/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/raft/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/raft/v3/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/raft/v3/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/pkg/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/pkg/v3/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/pkg/v3/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/v3/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/v3/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/v2/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/v2/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/pkg/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/pkg/v3/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/client/pkg/v3/LICENSE
kubernetes/LICENSES/vendor/go.etcd.io/etcd/server/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/server/v3/
kubernetes/LICENSES/vendor/go.etcd.io/etcd/server/v3/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/
kubernetes/LICENSES/vendor/gopkg.in/inf.v0/
kubernetes/LICENSES/vendor/gopkg.in/inf.v0/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/warnings.v0/
kubernetes/LICENSES/vendor/gopkg.in/warnings.v0/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/tomb.v1/
kubernetes/LICENSES/vendor/gopkg.in/tomb.v1/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/gcfg.v1/
kubernetes/LICENSES/vendor/gopkg.in/gcfg.v1/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/square/
kubernetes/LICENSES/vendor/gopkg.in/square/go-jose.v2/
kubernetes/LICENSES/vendor/gopkg.in/square/go-jose.v2/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/natefinch/
kubernetes/LICENSES/vendor/gopkg.in/natefinch/lumberjack.v2/
kubernetes/LICENSES/vendor/gopkg.in/natefinch/lumberjack.v2/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/yaml.v2/
kubernetes/LICENSES/vendor/gopkg.in/yaml.v2/LICENSE
kubernetes/LICENSES/vendor/gopkg.in/yaml.v3/
kubernetes/LICENSES/vendor/gopkg.in/yaml.v3/LICENSE
kubernetes/LICENSES/vendor/go.opencensus.io/
kubernetes/LICENSES/vendor/go.opencensus.io/LICENSE
kubernetes/LICENSES/vendor/cloud.google.com/
kubernetes/LICENSES/vendor/cloud.google.com/go/
kubernetes/LICENSES/vendor/cloud.google.com/go/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/
kubernetes/LICENSES/vendor/sigs.k8s.io/apiserver-network-proxy/
kubernetes/LICENSES/vendor/sigs.k8s.io/apiserver-network-proxy/konnectivity-client/
kubernetes/LICENSES/vendor/sigs.k8s.io/apiserver-network-proxy/konnectivity-client/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/yaml/
kubernetes/LICENSES/vendor/sigs.k8s.io/yaml/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/structured-merge-diff/
kubernetes/LICENSES/vendor/sigs.k8s.io/structured-merge-diff/v4/
kubernetes/LICENSES/vendor/sigs.k8s.io/structured-merge-diff/v4/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/api/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/api/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/qri-io/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/qri-io/starlib/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/qri-io/starlib/util/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/qri-io/starlib/util/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/go-yaml/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/go-yaml/yaml/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/go-yaml/yaml/NOTICE
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kyaml/internal/forked/github.com/go-yaml/yaml/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kustomize/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kustomize/v4/
kubernetes/LICENSES/vendor/sigs.k8s.io/kustomize/kustomize/v4/LICENSE
kubernetes/LICENSES/vendor/sigs.k8s.io/json/
kubernetes/LICENSES/vendor/sigs.k8s.io/json/LICENSE
kubernetes/LICENSES/vendor/golang.org/
kubernetes/LICENSES/vendor/golang.org/x/
kubernetes/LICENSES/vendor/golang.org/x/sync/
kubernetes/LICENSES/vendor/golang.org/x/sync/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/tools/
kubernetes/LICENSES/vendor/golang.org/x/tools/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/oauth2/
kubernetes/LICENSES/vendor/golang.org/x/oauth2/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/text/
kubernetes/LICENSES/vendor/golang.org/x/text/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/net/
kubernetes/LICENSES/vendor/golang.org/x/net/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/term/
kubernetes/LICENSES/vendor/golang.org/x/term/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/crypto/
kubernetes/LICENSES/vendor/golang.org/x/crypto/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/mod/
kubernetes/LICENSES/vendor/golang.org/x/mod/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/xerrors/
kubernetes/LICENSES/vendor/golang.org/x/xerrors/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/time/
kubernetes/LICENSES/vendor/golang.org/x/time/LICENSE
kubernetes/LICENSES/vendor/golang.org/x/sys/
kubernetes/LICENSES/vendor/golang.org/x/sys/LICENSE
kubernetes/LICENSES/vendor/bitbucket.org/
kubernetes/LICENSES/vendor/bitbucket.org/bertimus9/
kubernetes/LICENSES/vendor/bitbucket.org/bertimus9/systemstat/
kubernetes/LICENSES/vendor/bitbucket.org/bertimus9/systemstat/LICENSE
kubernetes/LICENSES/vendor/go.starlark.net/
kubernetes/LICENSES/vendor/go.starlark.net/LICENSE
kubernetes/LICENSES/vendor/github.com/
kubernetes/LICENSES/vendor/github.com/xiang90/
kubernetes/LICENSES/vendor/github.com/xiang90/probing/
kubernetes/LICENSES/vendor/github.com/xiang90/probing/LICENSE
kubernetes/LICENSES/vendor/github.com/robfig/
kubernetes/LICENSES/vendor/github.com/robfig/cron/
kubernetes/LICENSES/vendor/github.com/robfig/cron/v3/
kubernetes/LICENSES/vendor/github.com/robfig/cron/v3/LICENSE
kubernetes/LICENSES/vendor/github.com/onsi/
kubernetes/LICENSES/vendor/github.com/onsi/ginkgo/
kubernetes/LICENSES/vendor/github.com/onsi/ginkgo/LICENSE
kubernetes/LICENSES/vendor/github.com/onsi/gomega/
kubernetes/LICENSES/vendor/github.com/onsi/gomega/LICENSE
kubernetes/LICENSES/vendor/github.com/gogo/
kubernetes/LICENSES/vendor/github.com/gogo/protobuf/
kubernetes/LICENSES/vendor/github.com/gogo/protobuf/LICENSE
kubernetes/LICENSES/vendor/github.com/davecgh/
kubernetes/LICENSES/vendor/github.com/davecgh/go-spew/
kubernetes/LICENSES/vendor/github.com/davecgh/go-spew/LICENSE
kubernetes/LICENSES/vendor/github.com/russross/
kubernetes/LICENSES/vendor/github.com/russross/blackfriday/
kubernetes/LICENSES/vendor/github.com/russross/blackfriday/v2/
kubernetes/LICENSES/vendor/github.com/russross/blackfriday/v2/LICENSE
kubernetes/LICENSES/vendor/github.com/russross/blackfriday/LICENSE
kubernetes/LICENSES/vendor/github.com/inconshreveable/
kubernetes/LICENSES/vendor/github.com/inconshreveable/mousetrap/
kubernetes/LICENSES/vendor/github.com/inconshreveable/mousetrap/LICENSE
kubernetes/LICENSES/vendor/github.com/godbus/
kubernetes/LICENSES/vendor/github.com/godbus/dbus/
kubernetes/LICENSES/vendor/github.com/godbus/dbus/v5/
kubernetes/LICENSES/vendor/github.com/godbus/dbus/v5/LICENSE
kubernetes/LICENSES/vendor/github.com/asaskevich/
kubernetes/LICENSES/vendor/github.com/asaskevich/govalidator/
kubernetes/LICENSES/vendor/github.com/asaskevich/govalidator/LICENSE
kubernetes/LICENSES/vendor/github.com/mailru/
kubernetes/LICENSES/vendor/github.com/mailru/easyjson/
kubernetes/LICENSES/vendor/github.com/mailru/easyjson/LICENSE
kubernetes/LICENSES/vendor/github.com/go-logr/
kubernetes/LICENSES/vendor/github.com/go-logr/zapr/
kubernetes/LICENSES/vendor/github.com/go-logr/zapr/LICENSE
kubernetes/LICENSES/vendor/github.com/go-logr/logr/
kubernetes/LICENSES/vendor/github.com/go-logr/logr/LICENSE
kubernetes/LICENSES/vendor/github.com/heketi/
kubernetes/LICENSES/vendor/github.com/heketi/heketi/
kubernetes/LICENSES/vendor/github.com/heketi/heketi/LICENSE
kubernetes/LICENSES/vendor/github.com/vishvananda/
kubernetes/LICENSES/vendor/github.com/vishvananda/netlink/
kubernetes/LICENSES/vendor/github.com/vishvananda/netlink/LICENSE
kubernetes/LICENSES/vendor/github.com/vishvananda/netns/
kubernetes/LICENSES/vendor/github.com/vishvananda/netns/LICENSE
kubernetes/LICENSES/vendor/github.com/form3tech-oss/
kubernetes/LICENSES/vendor/github.com/form3tech-oss/jwt-go/
kubernetes/LICENSES/vendor/github.com/form3tech-oss/jwt-go/LICENSE
kubernetes/LICENSES/vendor/github.com/rubiojr/
kubernetes/LICENSES/vendor/github.com/rubiojr/go-vhd/
kubernetes/LICENSES/vendor/github.com/rubiojr/go-vhd/LICENSE
kubernetes/LICENSES/vendor/github.com/mvdan/
kubernetes/LICENSES/vendor/github.com/mvdan/xurls/
kubernetes/LICENSES/vendor/github.com/mvdan/xurls/LICENSE
kubernetes/LICENSES/vendor/github.com/beorn7/
kubernetes/LICENSES/vendor/github.com/beorn7/perks/
kubernetes/LICENSES/vendor/github.com/beorn7/perks/LICENSE
kubernetes/LICENSES/vendor/github.com/go-openapi/
kubernetes/LICENSES/vendor/github.com/go-openapi/swag/
kubernetes/LICENSES/vendor/github.com/go-openapi/swag/LICENSE
kubernetes/LICENSES/vendor/github.com/go-openapi/jsonreference/
kubernetes/LICENSES/vendor/github.com/go-openapi/jsonreference/LICENSE
kubernetes/LICENSES/vendor/github.com/go-openapi/jsonpointer/
kubernetes/LICENSES/vendor/github.com/go-openapi/jsonpointer/LICENSE
kubernetes/LICENSES/vendor/github.com/mxk/
kubernetes/LICENSES/vendor/github.com/mxk/go-flowrate/
kubernetes/LICENSES/vendor/github.com/mxk/go-flowrate/LICENSE
kubernetes/LICENSES/vendor/github.com/jonboulle/
kubernetes/LICENSES/vendor/github.com/jonboulle/clockwork/
kubernetes/LICENSES/vendor/github.com/jonboulle/clockwork/LICENSE
kubernetes/LICENSES/vendor/github.com/googleapis/
kubernetes/LICENSES/vendor/github.com/googleapis/gax-go/
kubernetes/LICENSES/vendor/github.com/googleapis/gax-go/v2/
kubernetes/LICENSES/vendor/github.com/googleapis/gax-go/v2/LICENSE
kubernetes/LICENSES/vendor/github.com/felixge/
kubernetes/LICENSES/vendor/github.com/felixge/httpsnoop/
kubernetes/LICENSES/vendor/github.com/felixge/httpsnoop/LICENSE
kubernetes/LICENSES/vendor/github.com/monochromegane/
kubernetes/LICENSES/vendor/github.com/monochromegane/go-gitignore/
kubernetes/LICENSES/vendor/github.com/monochromegane/go-gitignore/LICENSE
kubernetes/LICENSES/vendor/github.com/josharian/
kubernetes/LICENSES/vendor/github.com/josharian/intern/
kubernetes/LICENSES/vendor/github.com/josharian/intern/LICENSE
kubernetes/LICENSES/vendor/github.com/mitchellh/
kubernetes/LICENSES/vendor/github.com/mitchellh/mapstructure/
kubernetes/LICENSES/vendor/github.com/mitchellh/mapstructure/LICENSE
kubernetes/LICENSES/vendor/github.com/mitchellh/go-wordwrap/
kubernetes/LICENSES/vendor/github.com/mitchellh/go-wordwrap/LICENSE
kubernetes/LICENSES/vendor/github.com/syndtr/
kubernetes/LICENSES/vendor/github.com/syndtr/gocapability/
kubernetes/LICENSES/vendor/github.com/syndtr/gocapability/LICENSE
kubernetes/LICENSES/vendor/github.com/cespare/
kubernetes/LICENSES/vendor/github.com/cespare/xxhash/
kubernetes/LICENSES/vendor/github.com/cespare/xxhash/v2/
kubernetes/LICENSES/vendor/github.com/cespare/xxhash/v2/LICENSE
kubernetes/LICENSES/vendor/github.com/jmespath/
kubernetes/LICENSES/vendor/github.com/jmespath/go-jmespath/
kubernetes/LICENSES/vendor/github.com/jmespath/go-jmespath/LICENSE
kubernetes/LICENSES/vendor/github.com/pquerna/
kubernetes/LICENSES/vendor/github.com/pquerna/cachecontrol/
kubernetes/LICENSES/vendor/github.com/pquerna/cachecontrol/LICENSE
kubernetes/LICENSES/vendor/github.com/modern-go/
kubernetes/LICENSES/vendor/github.com/modern-go/concurrent/
kubernetes/LICENSES/vendor/github.com/modern-go/concurrent/LICENSE
kubernetes/LICENSES/vendor/github.com/modern-go/reflect2/
kubernetes/LICENSES/vendor/github.com/modern-go/reflect2/LICENSE
kubernetes/LICENSES/vendor/github.com/golang/
kubernetes/LICENSES/vendor/github.com/golang/groupcache/
kubernetes/LICENSES/vendor/github.com/golang/groupcache/LICENSE
kubernetes/LICENSES/vendor/github.com/golang/protobuf/
kubernetes/LICENSES/vendor/github.com/golang/protobuf/LICENSE
kubernetes/LICENSES/vendor/github.com/golang/mock/
kubernetes/LICENSES/vendor/github.com/golang/mock/LICENSE
kubernetes/LICENSES/vendor/github.com/armon/
kubernetes/LICENSES/vendor/github.com/armon/circbuf/
kubernetes/LICENSES/vendor/github.com/armon/circbuf/LICENSE
kubernetes/LICENSES/vendor/github.com/armon/go-socks5/
kubernetes/LICENSES/vendor/github.com/armon/go-socks5/LICENSE
kubernetes/LICENSES/vendor/github.com/mistifyio/
kubernetes/LICENSES/vendor/github.com/mistifyio/go-zfs/
kubernetes/LICENSES/vendor/github.com/mistifyio/go-zfs/LICENSE
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/grpc-gateway/
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/grpc-gateway/LICENSE
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/go-grpc-middleware/
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/go-grpc-middleware/LICENSE
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/
kubernetes/LICENSES/vendor/github.com/grpc-ecosystem/go-grpc-prometheus/LICENSE
kubernetes/LICENSES/vendor/github.com/go-ozzo/
kubernetes/LICENSES/vendor/github.com/go-ozzo/ozzo-validation/
kubernetes/LICENSES/vendor/github.com/go-ozzo/ozzo-validation/LICENSE
kubernetes/LICENSES/vendor/github.com/mohae/
kubernetes/LICENSES/vendor/github.com/mohae/deepcopy/
kubernetes/LICENSES/vendor/github.com/mohae/deepcopy/LICENSE
kubernetes/LICENSES/vendor/github.com/karrick/
kubernetes/LICENSES/vendor/github.com/karrick/godirwalk/
kubernetes/LICENSES/vendor/github.com/karrick/godirwalk/LICENSE
kubernetes/LICENSES/vendor/github.com/liggitt/
kubernetes/LICENSES/vendor/github.com/liggitt/tabwriter/
kubernetes/LICENSES/vendor/github.com/liggitt/tabwriter/LICENSE
kubernetes/LICENSES/vendor/github.com/MakeNowJust/
kubernetes/LICENSES/vendor/github.com/MakeNowJust/heredoc/
kubernetes/LICENSES/vendor/github.com/MakeNowJust/heredoc/LICENSE
kubernetes/LICENSES/vendor/github.com/Microsoft/
kubernetes/LICENSES/vendor/github.com/Microsoft/hcsshim/
kubernetes/LICENSES/vendor/github.com/Microsoft/hcsshim/LICENSE
kubernetes/LICENSES/vendor/github.com/Microsoft/go-winio/
kubernetes/LICENSES/vendor/github.com/Microsoft/go-winio/LICENSE
kubernetes/LICENSES/vendor/github.com/soheilhy/
kubernetes/LICENSES/vendor/github.com/soheilhy/cmux/
kubernetes/LICENSES/vendor/github.com/soheilhy/cmux/LICENSE
kubernetes/LICENSES/vendor/github.com/xlab/
kubernetes/LICENSES/vendor/github.com/xlab/treeprint/
kubernetes/LICENSES/vendor/github.com/xlab/treeprint/LICENSE
kubernetes/LICENSES/vendor/github.com/gorilla/
kubernetes/LICENSES/vendor/github.com/gorilla/websocket/
kubernetes/LICENSES/vendor/github.com/gorilla/websocket/LICENSE
kubernetes/LICENSES/vendor/github.com/opencontainers/
kubernetes/LICENSES/vendor/github.com/opencontainers/runtime-spec/
kubernetes/LICENSES/vendor/github.com/opencontainers/runtime-spec/LICENSE
kubernetes/LICENSES/vendor/github.com/opencontainers/runc/
kubernetes/LICENSES/vendor/github.com/opencontainers/runc/LICENSE
kubernetes/LICENSES/vendor/github.com/opencontainers/go-digest/
kubernetes/LICENSES/vendor/github.com/opencontainers/go-digest/LICENSE
kubernetes/LICENSES/vendor/github.com/opencontainers/selinux/
kubernetes/LICENSES/vendor/github.com/opencontainers/selinux/LICENSE
kubernetes/LICENSES/vendor/github.com/google/
kubernetes/LICENSES/vendor/github.com/google/gofuzz/
kubernetes/LICENSES/vendor/github.com/google/gofuzz/LICENSE
kubernetes/LICENSES/vendor/github.com/google/cel-go/
kubernetes/LICENSES/vendor/github.com/google/cel-go/LICENSE
kubernetes/LICENSES/vendor/github.com/google/shlex/
kubernetes/LICENSES/vendor/github.com/google/shlex/LICENSE
kubernetes/LICENSES/vendor/github.com/google/btree/
kubernetes/LICENSES/vendor/github.com/google/btree/LICENSE
kubernetes/LICENSES/vendor/github.com/google/gnostic/
kubernetes/LICENSES/vendor/github.com/google/gnostic/LICENSE
kubernetes/LICENSES/vendor/github.com/google/go-cmp/
kubernetes/LICENSES/vendor/github.com/google/go-cmp/LICENSE
kubernetes/LICENSES/vendor/github.com/google/uuid/
kubernetes/LICENSES/vendor/github.com/google/uuid/LICENSE
kubernetes/LICENSES/vendor/github.com/google/cadvisor/
kubernetes/LICENSES/vendor/github.com/google/cadvisor/LICENSE
kubernetes/LICENSES/vendor/github.com/prometheus/
kubernetes/LICENSES/vendor/github.com/prometheus/common/
kubernetes/LICENSES/vendor/github.com/prometheus/common/LICENSE
kubernetes/LICENSES/vendor/github.com/prometheus/client_golang/
kubernetes/LICENSES/vendor/github.com/prometheus/client_golang/LICENSE
kubernetes/LICENSES/vendor/github.com/prometheus/procfs/
kubernetes/LICENSES/vendor/github.com/prometheus/procfs/LICENSE
kubernetes/LICENSES/vendor/github.com/prometheus/client_model/
kubernetes/LICENSES/vendor/github.com/prometheus/client_model/LICENSE
kubernetes/LICENSES/vendor/github.com/quobyte/
kubernetes/LICENSES/vendor/github.com/quobyte/api/
kubernetes/LICENSES/vendor/github.com/quobyte/api/LICENSE
kubernetes/LICENSES/vendor/github.com/euank/
kubernetes/LICENSES/vendor/github.com/euank/go-kmsg-parser/
kubernetes/LICENSES/vendor/github.com/euank/go-kmsg-parser/LICENSE
kubernetes/LICENSES/vendor/github.com/cpuguy83/
kubernetes/LICENSES/vendor/github.com/cpuguy83/go-md2man/
kubernetes/LICENSES/vendor/github.com/cpuguy83/go-md2man/v2/
kubernetes/LICENSES/vendor/github.com/cpuguy83/go-md2man/v2/LICENSE
kubernetes/LICENSES/vendor/github.com/stoewer/
kubernetes/LICENSES/vendor/github.com/stoewer/go-strcase/
kubernetes/LICENSES/vendor/github.com/stoewer/go-strcase/LICENSE
kubernetes/LICENSES/vendor/github.com/aws/
kubernetes/LICENSES/vendor/github.com/aws/aws-sdk-go/
kubernetes/LICENSES/vendor/github.com/aws/aws-sdk-go/LICENSE
kubernetes/LICENSES/vendor/github.com/fatih/
kubernetes/LICENSES/vendor/github.com/fatih/camelcase/
kubernetes/LICENSES/vendor/github.com/fatih/camelcase/LICENSE
kubernetes/LICENSES/vendor/github.com/spf13/
kubernetes/LICENSES/vendor/github.com/spf13/pflag/
kubernetes/LICENSES/vendor/github.com/spf13/pflag/LICENSE
kubernetes/LICENSES/vendor/github.com/spf13/cobra/
kubernetes/LICENSES/vendor/github.com/spf13/cobra/LICENSE
kubernetes/LICENSES/vendor/github.com/emicklei/
kubernetes/LICENSES/vendor/github.com/emicklei/go-restful/
kubernetes/LICENSES/vendor/github.com/emicklei/go-restful/LICENSE
kubernetes/LICENSES/vendor/github.com/clusterhq/
kubernetes/LICENSES/vendor/github.com/clusterhq/flocker-go/
kubernetes/LICENSES/vendor/github.com/clusterhq/flocker-go/LICENSE
kubernetes/LICENSES/vendor/github.com/mindprince/
kubernetes/LICENSES/vendor/github.com/mindprince/gonvml/
kubernetes/LICENSES/vendor/github.com/mindprince/gonvml/LICENSE
kubernetes/LICENSES/vendor/github.com/cyphar/
kubernetes/LICENSES/vendor/github.com/cyphar/filepath-securejoin/
kubernetes/LICENSES/vendor/github.com/cyphar/filepath-securejoin/LICENSE
kubernetes/LICENSES/vendor/github.com/coredns/
kubernetes/LICENSES/vendor/github.com/coredns/corefile-migration/
kubernetes/LICENSES/vendor/github.com/coredns/corefile-migration/LICENSE
kubernetes/LICENSES/vendor/github.com/coredns/caddy/
kubernetes/LICENSES/vendor/github.com/coredns/caddy/LICENSE
kubernetes/LICENSES/vendor/github.com/pkg/
kubernetes/LICENSES/vendor/github.com/pkg/errors/
kubernetes/LICENSES/vendor/github.com/pkg/errors/LICENSE
kubernetes/LICENSES/vendor/github.com/pmezard/
kubernetes/LICENSES/vendor/github.com/pmezard/go-difflib/
kubernetes/LICENSES/vendor/github.com/pmezard/go-difflib/LICENSE
kubernetes/LICENSES/vendor/github.com/fsnotify/
kubernetes/LICENSES/vendor/github.com/fsnotify/fsnotify/
kubernetes/LICENSES/vendor/github.com/fsnotify/fsnotify/LICENSE
kubernetes/LICENSES/vendor/github.com/containerd/
kubernetes/LICENSES/vendor/github.com/containerd/ttrpc/
kubernetes/LICENSES/vendor/github.com/containerd/ttrpc/LICENSE
kubernetes/LICENSES/vendor/github.com/containerd/console/
kubernetes/LICENSES/vendor/github.com/containerd/console/LICENSE
kubernetes/LICENSES/vendor/github.com/containerd/containerd/
kubernetes/LICENSES/vendor/github.com/containerd/containerd/LICENSE
kubernetes/LICENSES/vendor/github.com/containerd/cgroups/
kubernetes/LICENSES/vendor/github.com/containerd/cgroups/LICENSE
kubernetes/LICENSES/vendor/github.com/exponent-io/
kubernetes/LICENSES/vendor/github.com/exponent-io/jsonpath/
kubernetes/LICENSES/vendor/github.com/exponent-io/jsonpath/LICENSE
kubernetes/LICENSES/vendor/github.com/JeffAshton/
kubernetes/LICENSES/vendor/github.com/JeffAshton/win_pdh/
kubernetes/LICENSES/vendor/github.com/JeffAshton/win_pdh/LICENSE
kubernetes/LICENSES/vendor/github.com/blang/
kubernetes/LICENSES/vendor/github.com/blang/semver/
kubernetes/LICENSES/vendor/github.com/blang/semver/v4/
kubernetes/LICENSES/vendor/github.com/blang/semver/v4/LICENSE
kubernetes/LICENSES/vendor/github.com/evanphx/
kubernetes/LICENSES/vendor/github.com/evanphx/json-patch/
kubernetes/LICENSES/vendor/github.com/evanphx/json-patch/LICENSE
kubernetes/LICENSES/vendor/github.com/chai2010/
kubernetes/LICENSES/vendor/github.com/chai2010/gettext-go/
kubernetes/LICENSES/vendor/github.com/chai2010/gettext-go/LICENSE
kubernetes/LICENSES/vendor/github.com/seccomp/
kubernetes/LICENSES/vendor/github.com/seccomp/libseccomp-golang/
kubernetes/LICENSES/vendor/github.com/seccomp/libseccomp-golang/LICENSE
kubernetes/LICENSES/vendor/github.com/ishidawataru/
kubernetes/LICENSES/vendor/github.com/ishidawataru/sctp/
kubernetes/LICENSES/vendor/github.com/ishidawataru/sctp/LICENSE
kubernetes/LICENSES/vendor/github.com/json-iterator/
kubernetes/LICENSES/vendor/github.com/json-iterator/go/
kubernetes/LICENSES/vendor/github.com/json-iterator/go/LICENSE
kubernetes/LICENSES/vendor/github.com/sirupsen/
kubernetes/LICENSES/vendor/github.com/sirupsen/logrus/
kubernetes/LICENSES/vendor/github.com/sirupsen/logrus/LICENSE
kubernetes/LICENSES/vendor/github.com/libopenstorage/
kubernetes/LICENSES/vendor/github.com/libopenstorage/openstorage/
kubernetes/LICENSES/vendor/github.com/libopenstorage/openstorage/LICENSE
kubernetes/LICENSES/vendor/github.com/dustin/
kubernetes/LICENSES/vendor/github.com/dustin/go-humanize/
kubernetes/LICENSES/vendor/github.com/dustin/go-humanize/LICENSE
kubernetes/LICENSES/vendor/github.com/docker/
kubernetes/LICENSES/vendor/github.com/docker/distribution/
kubernetes/LICENSES/vendor/github.com/docker/distribution/LICENSE
kubernetes/LICENSES/vendor/github.com/docker/go-units/
kubernetes/LICENSES/vendor/github.com/docker/go-units/LICENSE
kubernetes/LICENSES/vendor/github.com/fvbommel/
kubernetes/LICENSES/vendor/github.com/fvbommel/sortorder/
kubernetes/LICENSES/vendor/github.com/fvbommel/sortorder/LICENSE
kubernetes/LICENSES/vendor/github.com/cilium/
kubernetes/LICENSES/vendor/github.com/cilium/ebpf/
kubernetes/LICENSES/vendor/github.com/cilium/ebpf/LICENSE
kubernetes/LICENSES/vendor/github.com/gofrs/
kubernetes/LICENSES/vendor/github.com/gofrs/uuid/
kubernetes/LICENSES/vendor/github.com/gofrs/uuid/LICENSE
kubernetes/LICENSES/vendor/github.com/elazarl/
kubernetes/LICENSES/vendor/github.com/elazarl/goproxy/
kubernetes/LICENSES/vendor/github.com/elazarl/goproxy/LICENSE
kubernetes/LICENSES/vendor/github.com/coreos/
kubernetes/LICENSES/vendor/github.com/coreos/go-oidc/
kubernetes/LICENSES/vendor/github.com/coreos/go-oidc/LICENSE
kubernetes/LICENSES/vendor/github.com/coreos/go-semver/
kubernetes/LICENSES/vendor/github.com/coreos/go-semver/LICENSE
kubernetes/LICENSES/vendor/github.com/coreos/go-systemd/
kubernetes/LICENSES/vendor/github.com/coreos/go-systemd/v22/
kubernetes/LICENSES/vendor/github.com/coreos/go-systemd/v22/LICENSE
kubernetes/LICENSES/vendor/github.com/GoogleCloudPlatform/
kubernetes/LICENSES/vendor/github.com/GoogleCloudPlatform/k8s-cloud-provider/
kubernetes/LICENSES/vendor/github.com/GoogleCloudPlatform/k8s-cloud-provider/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/
kubernetes/LICENSES/vendor/github.com/Azure/go-ansiterm/
kubernetes/LICENSES/vendor/github.com/Azure/go-ansiterm/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/logger/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/logger/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/adal/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/adal/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/to/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/to/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/validation/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/validation/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/date/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/date/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/mocks/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/autorest/mocks/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/tracing/
kubernetes/LICENSES/vendor/github.com/Azure/go-autorest/tracing/LICENSE
kubernetes/LICENSES/vendor/github.com/Azure/azure-sdk-for-go/
kubernetes/LICENSES/vendor/github.com/Azure/azure-sdk-for-go/LICENSE
kubernetes/LICENSES/vendor/github.com/mrunalp/
kubernetes/LICENSES/vendor/github.com/mrunalp/fileutils/
kubernetes/LICENSES/vendor/github.com/mrunalp/fileutils/LICENSE
kubernetes/LICENSES/vendor/github.com/imdario/
kubernetes/LICENSES/vendor/github.com/imdario/mergo/
kubernetes/LICENSES/vendor/github.com/imdario/mergo/LICENSE
kubernetes/LICENSES/vendor/github.com/NYTimes/
kubernetes/LICENSES/vendor/github.com/NYTimes/gziphandler/
kubernetes/LICENSES/vendor/github.com/NYTimes/gziphandler/LICENSE
kubernetes/LICENSES/vendor/github.com/munnerz/
kubernetes/LICENSES/vendor/github.com/munnerz/goautoneg/
kubernetes/LICENSES/vendor/github.com/munnerz/goautoneg/LICENSE
kubernetes/LICENSES/vendor/github.com/antlr/
kubernetes/LICENSES/vendor/github.com/antlr/antlr4/
kubernetes/LICENSES/vendor/github.com/antlr/antlr4/runtime/
kubernetes/LICENSES/vendor/github.com/antlr/antlr4/runtime/Go/
kubernetes/LICENSES/vendor/github.com/antlr/antlr4/runtime/Go/antlr/
kubernetes/LICENSES/vendor/github.com/antlr/antlr4/runtime/Go/antlr/LICENSE
kubernetes/LICENSES/vendor/github.com/tmc/
kubernetes/LICENSES/vendor/github.com/tmc/grpc-websocket-proxy/
kubernetes/LICENSES/vendor/github.com/tmc/grpc-websocket-proxy/LICENSE
kubernetes/LICENSES/vendor/github.com/vmware/
kubernetes/LICENSES/vendor/github.com/vmware/govmomi/
kubernetes/LICENSES/vendor/github.com/vmware/govmomi/LICENSE
kubernetes/LICENSES/vendor/github.com/moby/
kubernetes/LICENSES/vendor/github.com/moby/term/
kubernetes/LICENSES/vendor/github.com/moby/term/LICENSE
kubernetes/LICENSES/vendor/github.com/moby/ipvs/
kubernetes/LICENSES/vendor/github.com/moby/ipvs/LICENSE
kubernetes/LICENSES/vendor/github.com/moby/sys/
kubernetes/LICENSES/vendor/github.com/moby/sys/mountinfo/
kubernetes/LICENSES/vendor/github.com/moby/sys/mountinfo/LICENSE
kubernetes/LICENSES/vendor/github.com/moby/spdystream/
kubernetes/LICENSES/vendor/github.com/moby/spdystream/LICENSE
kubernetes/LICENSES/vendor/github.com/go-errors/
kubernetes/LICENSES/vendor/github.com/go-errors/errors/
kubernetes/LICENSES/vendor/github.com/go-errors/errors/LICENSE
kubernetes/LICENSES/vendor/github.com/daviddengcn/
kubernetes/LICENSES/vendor/github.com/daviddengcn/go-colortext/
kubernetes/LICENSES/vendor/github.com/daviddengcn/go-colortext/LICENSE
kubernetes/LICENSES/vendor/github.com/PuerkitoBio/
kubernetes/LICENSES/vendor/github.com/PuerkitoBio/urlesc/
kubernetes/LICENSES/vendor/github.com/PuerkitoBio/urlesc/LICENSE
kubernetes/LICENSES/vendor/github.com/PuerkitoBio/purell/
kubernetes/LICENSES/vendor/github.com/PuerkitoBio/purell/LICENSE
kubernetes/LICENSES/vendor/github.com/container-storage-interface/
kubernetes/LICENSES/vendor/github.com/container-storage-interface/spec/
kubernetes/LICENSES/vendor/github.com/container-storage-interface/spec/LICENSE
kubernetes/LICENSES/vendor/github.com/gophercloud/
kubernetes/LICENSES/vendor/github.com/gophercloud/gophercloud/
kubernetes/LICENSES/vendor/github.com/gophercloud/gophercloud/LICENSE
kubernetes/LICENSES/vendor/github.com/lithammer/
kubernetes/LICENSES/vendor/github.com/lithammer/dedent/
kubernetes/LICENSES/vendor/github.com/lithammer/dedent/LICENSE
kubernetes/LICENSES/vendor/github.com/gregjones/
kubernetes/LICENSES/vendor/github.com/gregjones/httpcache/
kubernetes/LICENSES/vendor/github.com/gregjones/httpcache/LICENSE
kubernetes/LICENSES/vendor/github.com/peterbourgon/
kubernetes/LICENSES/vendor/github.com/peterbourgon/diskv/
kubernetes/LICENSES/vendor/github.com/peterbourgon/diskv/LICENSE
kubernetes/LICENSES/vendor/github.com/matttproud/
kubernetes/LICENSES/vendor/github.com/matttproud/golang_protobuf_extensions/
kubernetes/LICENSES/vendor/github.com/matttproud/golang_protobuf_extensions/LICENSE
kubernetes/LICENSES/vendor/github.com/checkpoint-restore/
kubernetes/LICENSES/vendor/github.com/checkpoint-restore/go-criu/
kubernetes/LICENSES/vendor/github.com/checkpoint-restore/go-criu/v5/
kubernetes/LICENSES/vendor/github.com/checkpoint-restore/go-criu/v5/LICENSE
kubernetes/LICENSES/vendor/github.com/storageos/
kubernetes/LICENSES/vendor/github.com/storageos/go-api/
kubernetes/LICENSES/vendor/github.com/storageos/go-api/LICENSE
kubernetes/LICENSES/vendor/github.com/nxadm/
kubernetes/LICENSES/vendor/github.com/nxadm/tail/
kubernetes/LICENSES/vendor/github.com/nxadm/tail/LICENSE
kubernetes/LICENSES/vendor/github.com/stretchr/
kubernetes/LICENSES/vendor/github.com/stretchr/objx/
kubernetes/LICENSES/vendor/github.com/stretchr/objx/LICENSE
kubernetes/LICENSES/vendor/github.com/stretchr/testify/
kubernetes/LICENSES/vendor/github.com/stretchr/testify/LICENSE
kubernetes/LICENSES/vendor/google.golang.org/
kubernetes/LICENSES/vendor/google.golang.org/api/
kubernetes/LICENSES/vendor/google.golang.org/api/LICENSE
kubernetes/LICENSES/vendor/google.golang.org/api/internal/
kubernetes/LICENSES/vendor/google.golang.org/api/internal/third_party/
kubernetes/LICENSES/vendor/google.golang.org/api/internal/third_party/uritemplates/
kubernetes/LICENSES/vendor/google.golang.org/api/internal/third_party/uritemplates/LICENSE
kubernetes/LICENSES/vendor/google.golang.org/protobuf/
kubernetes/LICENSES/vendor/google.golang.org/protobuf/LICENSE
kubernetes/LICENSES/vendor/google.golang.org/grpc/
kubernetes/LICENSES/vendor/google.golang.org/grpc/LICENSE
kubernetes/LICENSES/vendor/google.golang.org/appengine/
kubernetes/LICENSES/vendor/google.golang.org/appengine/LICENSE
kubernetes/LICENSES/vendor/google.golang.org/genproto/
kubernetes/LICENSES/vendor/google.golang.org/genproto/LICENSE
kubernetes/LICENSES/vendor/k8s.io/
kubernetes/LICENSES/vendor/k8s.io/gengo/
kubernetes/LICENSES/vendor/k8s.io/gengo/LICENSE
kubernetes/LICENSES/vendor/k8s.io/system-validators/
kubernetes/LICENSES/vendor/k8s.io/system-validators/LICENSE
kubernetes/LICENSES/vendor/k8s.io/utils/
kubernetes/LICENSES/vendor/k8s.io/utils/LICENSE
kubernetes/LICENSES/vendor/k8s.io/utils/internal/
kubernetes/LICENSES/vendor/k8s.io/utils/internal/third_party/
kubernetes/LICENSES/vendor/k8s.io/utils/internal/third_party/forked/
kubernetes/LICENSES/vendor/k8s.io/utils/internal/third_party/forked/golang/
kubernetes/LICENSES/vendor/k8s.io/utils/internal/third_party/forked/golang/LICENSE
kubernetes/LICENSES/vendor/k8s.io/kube-openapi/
kubernetes/LICENSES/vendor/k8s.io/kube-openapi/LICENSE
kubernetes/LICENSES/vendor/k8s.io/klog/
kubernetes/LICENSES/vendor/k8s.io/klog/v2/
kubernetes/LICENSES/vendor/k8s.io/klog/v2/LICENSE
kubernetes/LICENSES/vendor/gonum.org/
kubernetes/LICENSES/vendor/gonum.org/v1/
kubernetes/LICENSES/vendor/gonum.org/v1/gonum/
kubernetes/LICENSES/vendor/gonum.org/v1/gonum/LICENSE
kubernetes/LICENSES/vendor/go.uber.org/
kubernetes/LICENSES/vendor/go.uber.org/multierr/
kubernetes/LICENSES/vendor/go.uber.org/multierr/LICENSE
kubernetes/LICENSES/vendor/go.uber.org/zap/
kubernetes/LICENSES/vendor/go.uber.org/zap/LICENSE
kubernetes/LICENSES/vendor/go.uber.org/atomic/
kubernetes/LICENSES/vendor/go.uber.org/atomic/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/
kubernetes/LICENSES/vendor/go.opentelemetry.io/proto/
kubernetes/LICENSES/vendor/go.opentelemetry.io/proto/otlp/
kubernetes/LICENSES/vendor/go.opentelemetry.io/proto/otlp/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/net/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/net/http/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/google.golang.org/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc/
kubernetes/LICENSES/vendor/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/metric/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/metric/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/trace/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/trace/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/metric/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/metric/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/export/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/export/metric/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/sdk/export/metric/LICENSE
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/exporters/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/exporters/otlp/
kubernetes/LICENSES/vendor/go.opentelemetry.io/otel/exporters/otlp/LICENSE
+ break
+ tar '--transform=s|.*|&-1.24.0|' --show-transformed-names -xzvf /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz --strip-components=3 -C /usr/local/bin kubernetes/node/bin/kubelet kubernetes/node/bin/kubectl
kubectl-1.24.0
kubelet-1.24.0
+ rm -f /opt/kubernetes/downloads/kubernetes-node-linux-amd64.tar.gz
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:12.785'
++ jq -n --arg Timestamp '2023-07-27 08:29:00.240' --arg OperationId '2023-07-27 08:29:12.785' --arg Version 1.23 --arg TaskName AKS.CSE.installKubeletKubectlAndKubeProxy.extractKubeBinaries --arg EventLevel Informational --arg Message 'Completed: extractKubeBinaries' 1.24.0 https://acs-mirror.azureedge.net/kubernetes/v1.24.0/binaries/kubernetes-node-linux-amd64.tar.gz --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
jq: error: Invalid numeric literal at EOF at line 1, column 6 (while parsing '1.24.0') at <top-level>, line 1:
1.24.0
jq: 1 compile error
+ json_string=
+ echo
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446540233.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ mv /usr/local/bin/kubelet-1.24.0 /usr/local/bin/kubelet
+ mv /usr/local/bin/kubectl-1.24.0 /usr/local/bin/kubectl
+ chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl
+ ret=0
+ rm -rf /usr/local/bin/kubelet-1.24.10 /usr/local/bin/kubelet-1.24.15 /usr/local/bin/kubelet-1.24.9 /usr/local/bin/kubelet-1.25.11 /usr/local/bin/kubelet-1.25.5 /usr/local/bin/kubelet-1.25.6 /usr/local/bin/kubelet-1.26.0 /usr/local/bin/kubelet-1.26.3 /usr/local/bin/kubelet-1.26.6 /usr/local/bin/kubelet-1.27.1 /usr/local/bin/kubelet-1.27.3 /usr/local/bin/kubectl-1.24.10 /usr/local/bin/kubectl-1.24.15 /usr/local/bin/kubectl-1.24.9 /usr/local/bin/kubectl-1.25.11 /usr/local/bin/kubectl-1.25.5 /usr/local/bin/kubectl-1.25.6 /usr/local/bin/kubectl-1.26.0 /usr/local/bin/kubectl-1.26.3 /usr/local/bin/kubectl-1.26.6 /usr/local/bin/kubectl-1.27.1 /usr/local/bin/kubectl-1.27.3 /home/hyperkube-downloads
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:12.799'
++ jq -n --arg Timestamp '2023-07-27 08:29:00.227' --arg OperationId '2023-07-27 08:29:12.799' --arg Version 1.23 --arg TaskName AKS.CSE.installKubeletKubectlAndKubeProxy --arg EventLevel Informational --arg Message 'Completed: installKubeletKubectlAndKubeProxy' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:00.227",
  "OperationId": "2023-07-27 08:29:12.799",
  "Version": "1.23",
  "TaskName": "AKS.CSE.installKubeletKubectlAndKubeProxy",
  "EventLevel": "Informational",
  "Message": "Completed: installKubeletKubectlAndKubeProxy",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:00.227",' '"OperationId":' '"2023-07-27' '08:29:12.799",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.installKubeletKubectlAndKubeProxy",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'installKubeletKubectlAndKubeProxy",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446540225.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ createKubeManifestDir
+ KUBEMANIFESTDIR=/etc/kubernetes/manifests
+ mkdir -p /etc/kubernetes/manifests
+ '[' false == true ']'
+ mkdir -p /etc/systemd/system/kubelet.service.d
+ logs_to_events AKS.CSE.configureK8s configureK8s
+ local task=AKS.CSE.configureK8s
+ shift
++ date +%s%3N
+ local eventsFileName=1690446552810
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:12.812'
+ configureK8s
+ APISERVER_PUBLIC_KEY_PATH=/etc/kubernetes/certs/apiserver.crt
+ touch /etc/kubernetes/certs/apiserver.crt
touch: cannot touch '/etc/kubernetes/certs/apiserver.crt': No such file or directory
+ chmod 0644 /etc/kubernetes/certs/apiserver.crt
chmod: cannot access '/etc/kubernetes/certs/apiserver.crt': No such file or directory
+ chown root:root /etc/kubernetes/certs/apiserver.crt
chown: cannot access '/etc/kubernetes/certs/apiserver.crt': No such file or directory
+ AZURE_JSON_PATH=/etc/kubernetes/azure.json
+ touch /etc/kubernetes/azure.json
+ chmod 0600 /etc/kubernetes/azure.json
+ chown root:root /etc/kubernetes/azure.json
+ mkdir -p /etc/kubernetes/certs
+ '[' -n '' ']'
+ '[' -n '' ']'
+ '[' -n bXNp ']'
+ base64 -d
+ echo bXNp
+ set +x
+ [[ v2 = \v\2 ]]
+ sed -i /cloudProviderBackoffExponent/d /etc/kubernetes/azure.json
+ sed -i /cloudProviderBackoffJitter/d /etc/kubernetes/azure.json
+ configureKubeletServerCert
+ KUBELET_SERVER_PRIVATE_KEY_PATH=/etc/kubernetes/certs/kubeletserver.key
+ KUBELET_SERVER_CERT_PATH=/etc/kubernetes/certs/kubeletserver.crt
+ openssl genrsa -out /etc/kubernetes/certs/kubeletserver.key 2048
Generating RSA private key, 2048 bit long modulus (2 primes)
...................................................................................+++++
.........+++++
e is 65537 (0x010001)
+ openssl req -new -x509 -days 7300 -key /etc/kubernetes/certs/kubeletserver.key -out /etc/kubernetes/certs/kubeletserver.crt -subj /CN=abtestjxwc000000 -addext subjectAltName=DNS:abtestjxwc000000
Can't load ./.rnd into RNG
140678484816320:error:2406F079:random number generator:RAND_load_file:Cannot open file:../crypto/rand/randfile.c:88:Filename=./.rnd
+ '[' false == true ']'
+ '[' false == true ']'
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:12.981'
++ jq -n --arg Timestamp '2023-07-27 08:29:12.812' --arg OperationId '2023-07-27 08:29:12.981' --arg Version 1.23 --arg TaskName AKS.CSE.configureK8s --arg EventLevel Informational --arg Message 'Completed: configureK8s' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:12.812",
  "OperationId": "2023-07-27 08:29:12.981",
  "Version": "1.23",
  "TaskName": "AKS.CSE.configureK8s",
  "EventLevel": "Informational",
  "Message": "Completed: configureK8s",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:12.812",' '"OperationId":' '"2023-07-27' '08:29:12.981",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.configureK8s",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'configureK8s",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446552810.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ logs_to_events AKS.CSE.configureCNI configureCNI
+ local task=AKS.CSE.configureCNI
+ shift
++ date +%s%3N
+ local eventsFileName=1690446552990
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:12.992'
+ configureCNI
+ retrycmd_if_failure 120 5 25 modprobe br_netfilter
+ retries=120
+ wait_sleep=5
+ timeout=25
+ shift
+ shift
+ shift
++ seq 1 120
+ for i in $(seq 1 $retries)
+ timeout 25 modprobe br_netfilter
+ break
+ echo Executed '"modprobe' 'br_netfilter"' 1 times
Executed "modprobe br_netfilter" 1 times
+ echo -n br_netfilter
+ configureCNIIPTables
+ [[ kubenet = \a\z\u\r\e ]]
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:13.106'
++ jq -n --arg Timestamp '2023-07-27 08:29:12.992' --arg OperationId '2023-07-27 08:29:13.106' --arg Version 1.23 --arg TaskName AKS.CSE.configureCNI --arg EventLevel Informational --arg Message 'Completed: configureCNI' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:12.992",
  "OperationId": "2023-07-27 08:29:13.106",
  "Version": "1.23",
  "TaskName": "AKS.CSE.configureCNI",
  "EventLevel": "Informational",
  "Message": "Completed: configureCNI",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:12.992",' '"OperationId":' '"2023-07-27' '08:29:13.106",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.configureCNI",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'configureCNI",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446552990.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ '[' false == true ']'
+ '[' true == true ']'
+ logs_to_events AKS.CSE.ensureContainerd ensureContainerd
+ local task=AKS.CSE.ensureContainerd
+ shift
++ date +%s%3N
+ local eventsFileName=1690446553115
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:13.117'
+ ensureContainerd
+ '[' false == true ']'
+ mkdir -p /etc/systemd/system/containerd.service.d
+ tee /etc/systemd/system/containerd.service.d/exec_start.conf
+ mkdir -p /etc/containerd
+ [[ false = true ]]
+ echo 'Generating containerd config...'
Generating containerd config...
+ echo dmVyc2lvbiA9IDIKb29tX3Njb3JlID0gMApbcGx1Z2lucy4iaW8uY29udGFpbmVyZC5ncnBjLnYxLmNyaSJdCiAgc2FuZGJveF9pbWFnZSA9ICJtY3IubWljcm9zb2Z0LmNvbS9vc3Mva3ViZXJuZXRlcy9wYXVzZTozLjYiCiAgW3BsdWdpbnMuImlvLmNvbnRhaW5lcmQuZ3JwYy52MS5jcmkiLmNvbnRhaW5lcmRdCiAgICBkZWZhdWx0X3J1bnRpbWVfbmFtZSA9ICJydW5jIgogICAgW3BsdWdpbnMuImlvLmNvbnRhaW5lcmQuZ3JwYy52MS5jcmkiLmNvbnRhaW5lcmQucnVudGltZXMucnVuY10KICAgICAgcnVudGltZV90eXBlID0gImlvLmNvbnRhaW5lcmQucnVuYy52MiIKICAgIFtwbHVnaW5zLiJpby5jb250YWluZXJkLmdycGMudjEuY3JpIi5jb250YWluZXJkLnJ1bnRpbWVzLnJ1bmMub3B0aW9uc10KICAgICAgQmluYXJ5TmFtZSA9ICIvdXNyL2Jpbi9ydW5jIgogICAgW3BsdWdpbnMuImlvLmNvbnRhaW5lcmQuZ3JwYy52MS5jcmkiLmNvbnRhaW5lcmQucnVudGltZXMudW50cnVzdGVkXQogICAgICBydW50aW1lX3R5cGUgPSAiaW8uY29udGFpbmVyZC5ydW5jLnYyIgogICAgW3BsdWdpbnMuImlvLmNvbnRhaW5lcmQuZ3JwYy52MS5jcmkiLmNvbnRhaW5lcmQucnVudGltZXMudW50cnVzdGVkLm9wdGlvbnNdCiAgICAgIEJpbmFyeU5hbWUgPSAiL3Vzci9iaW4vcnVuYyIKICBbcGx1Z2lucy4iaW8uY29udGFpbmVyZC5ncnBjLnYxLmNyaSIuY25pXQogICAgYmluX2RpciA9ICIvb3B0L2NuaS9iaW4iCiAgICBjb25mX2RpciA9ICIvZXRjL2NuaS9uZXQuZCIKICAgIGNvbmZfdGVtcGxhdGUgPSAiL2V0Yy9jb250YWluZXJkL2t1YmVuZXRfdGVtcGxhdGUuY29uZiIKICBbcGx1Z2lucy4iaW8uY29udGFpbmVyZC5ncnBjLnYxLmNyaSIucmVnaXN0cnldCiAgICBjb25maWdfcGF0aCA9ICIvZXRjL2NvbnRhaW5lcmQvY2VydHMuZCIKICBbcGx1Z2lucy4iaW8uY29udGFpbmVyZC5ncnBjLnYxLmNyaSIucmVnaXN0cnkuaGVhZGVyc10KICAgIFgtTWV0YS1Tb3VyY2UtQ2xpZW50ID0gWyJhenVyZS9ha3MiXQpbbWV0cmljc10KICBhZGRyZXNzID0gIjAuMC4wLjA6MTAyNTciCg==
+ base64 -d
+ tee /etc/sysctl.d/99-force-bridge-forward.conf
+ retrycmd_if_failure 120 5 25 sysctl --system
+ retries=120
+ wait_sleep=5
+ timeout=25
+ shift
+ shift
+ shift
++ seq 1 120
+ for i in $(seq 1 $retries)
+ timeout 25 sysctl --system
* Applying /etc/sysctl.d/10-console-messages.conf ...
kernel.printk = 4 4 1 7
* Applying /etc/sysctl.d/10-ipv6-privacy.conf ...
net.ipv6.conf.all.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2
* Applying /etc/sysctl.d/10-kernel-hardening.conf ...
kernel.kptr_restrict = 1
* Applying /etc/sysctl.d/10-link-restrictions.conf ...
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
* Applying /etc/sysctl.d/10-lxd-inotify.conf ...
fs.inotify.max_user_instances = 1024
* Applying /etc/sysctl.d/10-magic-sysrq.conf ...
kernel.sysrq = 176
* Applying /etc/sysctl.d/10-network-security.conf ...
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.tcp_syncookies = 1
* Applying /etc/sysctl.d/10-ptrace.conf ...
kernel.yama.ptrace_scope = 1
* Applying /etc/sysctl.d/10-zeropage.conf ...
vm.mmap_min_addr = 65536
* Applying /usr/lib/sysctl.d/50-default.conf ...
net.ipv4.conf.all.promote_secondaries = 1
net.core.default_qdisc = fq_codel
* Applying /etc/sysctl.d/60-CIS.conf ...
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1
net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.tcp_syncookies = 1
vm.overcommit_memory = 1
kernel.panic = 10
kernel.panic_on_oops = 1
kernel.pid_max = 4194304
fs.inotify.max_user_watches = 1048576
fs.inotify.max_user_instances = 1024
* Applying /etc/sysctl.d/99-cloudimg-ipv6.conf ...
net.ipv6.conf.all.use_tempaddr = 0
net.ipv6.conf.default.use_tempaddr = 0
* Applying /etc/sysctl.d/99-force-bridge-forward.conf ...
net.ipv4.ip_forward = 1
net.ipv4.conf.all.forwarding = 1
net.ipv6.conf.all.forwarding = 1
net.bridge.bridge-nf-call-iptables = 1
* Applying /etc/sysctl.d/99-sysctl.conf ...
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.icmp_echo_ignore_broadcasts = 1
fs.suid_dumpable = 0
* Applying /etc/sysctl.conf ...
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.icmp_echo_ignore_broadcasts = 1
fs.suid_dumpable = 0
+ break
+ echo Executed '"sysctl' '--system"' 1 times
Executed "sysctl --system" 1 times
+ systemctl is-active --quiet docker
+ systemctlEnableAndStart containerd
+ systemctl_restart 100 5 30 containerd
+ retries=100
+ wait_sleep=5
+ timeout=30
+ svcname=containerd
++ seq 1 100
+ for i in $(seq 1 $retries)
+ timeout 30 systemctl daemon-reload
+ timeout 30 systemctl restart containerd
+ break
+ RESTART_STATUS=0
+ systemctl status containerd --no-pager -l
+ '[' 0 -ne 0 ']'
+ retrycmd_if_failure 120 5 25 systemctl enable containerd
+ retries=120
+ wait_sleep=5
+ timeout=25
+ shift
+ shift
+ shift
++ seq 1 120
+ for i in $(seq 1 $retries)
+ timeout 25 systemctl enable containerd
+ break
+ echo Executed '"systemctl' enable 'containerd"' 1 times
Executed "systemctl enable containerd" 1 times
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:13.704'
++ jq -n --arg Timestamp '2023-07-27 08:29:13.117' --arg OperationId '2023-07-27 08:29:13.704' --arg Version 1.23 --arg TaskName AKS.CSE.ensureContainerd --arg EventLevel Informational --arg Message 'Completed: ensureContainerd' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:13.117",
  "OperationId": "2023-07-27 08:29:13.704",
  "Version": "1.23",
  "TaskName": "AKS.CSE.ensureContainerd",
  "EventLevel": "Informational",
  "Message": "Completed: ensureContainerd",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:13.117",' '"OperationId":' '"2023-07-27' '08:29:13.704",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.ensureContainerd",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'ensureContainerd",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446553115.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ [[ '' != '' ]]
+ [[ AzurePublicCloud == \A\z\u\r\e\C\h\i\n\a\C\l\o\u\d ]]
+ [[ false == \t\r\u\e ]]
+ '[' false == true ']'
+ '[' false == true ']'
+ '[' false == true ']'
+ '[' true == true ']'
+ mkdir -p /etc/containerd
+ base64 -d
+ echo CnsKICAgICJjbmlWZXJzaW9uIjogIjAuMy4xIiwKICAgICJuYW1lIjogImt1YmVuZXQiLAogICAgInBsdWdpbnMiOiBbewogICAgInR5cGUiOiAiYnJpZGdlIiwKICAgICJicmlkZ2UiOiAiY2JyMCIsCiAgICAibXR1IjogMTUwMCwKICAgICJhZGRJZiI6ICJldGgwIiwKICAgICJpc0dhdGV3YXkiOiB0cnVlLAogICAgImlwTWFzcSI6IGZhbHNlLAogICAgInByb21pc2NNb2RlIjogdHJ1ZSwKICAgICJoYWlycGluTW9kZSI6IGZhbHNlLAogICAgImlwYW0iOiB7CiAgICAgICAgInR5cGUiOiAiaG9zdC1sb2NhbCIsCiAgICAgICAgInJhbmdlcyI6IFt7e3JhbmdlICRpLCAkcmFuZ2UgOj0gLlBvZENJRFJSYW5nZXN9fXt7aWYgJGl9fSwge3tlbmR9fVt7InN1Ym5ldCI6ICJ7eyRyYW5nZX19In1de3tlbmR9fV0sCiAgICAgICAgInJvdXRlcyI6IFt7e3JhbmdlICRpLCAkcm91dGUgOj0gLlJvdXRlc319e3tpZiAkaX19LCB7e2VuZH19eyJkc3QiOiAie3skcm91dGV9fSJ9e3tlbmR9fV0KICAgIH0KICAgIH0sCiAgICB7CiAgICAidHlwZSI6ICJwb3J0bWFwIiwKICAgICJjYXBhYmlsaXRpZXMiOiB7InBvcnRNYXBwaW5ncyI6IHRydWV9LAogICAgImV4dGVybmFsU2V0TWFya0NoYWluIjogIktVQkUtTUFSSy1NQVNRIgogICAgfV0KfQo=
+ tee /etc/systemd/system/kubelet.service.d/10-containerd-base-flag.conf
+ semverCompare 1.24.0 1.27.0
++ echo 1.24.0
++ cut -d + -f 1
+ VERSION_A=1.24.0
++ cut -d + -f 1
++ echo 1.27.0
+ VERSION_B=1.27.0
+ [[ 1.24.0 == \1\.\2\7\.\0 ]]
++ sort -V
++ tr ' ' '\n'
++ echo 1.24.0 1.27.0
+ sorted='1.24.0
1.27.0'
++ cut '-d
' -f2
++ IFS=
++ echo '1.24.0
1.27.0'
+ highestVersion=1.27.0
+ [[ 1.24.0 == 1.27.0 ]]
+ return 1
+ tee /etc/systemd/system/kubelet.service.d/10-container-runtime-flag.conf
+ '[' false == true ']'
+ logs_to_events AKS.CSE.ensureSysctl ensureSysctl
+ local task=AKS.CSE.ensureSysctl
+ shift
++ date +%s%3N
+ local eventsFileName=1690446553737
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:13.740'
+ ensureSysctl
+ SYSCTL_CONFIG_FILE=/etc/sysctl.d/999-sysctl-aks.conf
++ dirname /etc/sysctl.d/999-sysctl-aks.conf
+ mkdir -p /etc/sysctl.d
+ touch /etc/sysctl.d/999-sysctl-aks.conf
+ chmod 0644 /etc/sysctl.d/999-sysctl-aks.conf
+ echo IyBUaGlzIGlzIGEgcGFydGlhbCB3b3JrYXJvdW5kIHRvIHRoaXMgdXBzdHJlYW0gS3ViZXJuZXRlcyBpc3N1ZToKIyBodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy9rdWJlcm5ldGVzL2lzc3Vlcy80MTkxNiNpc3N1ZWNvbW1lbnQtMzEyNDI4NzMxCm5ldC5pcHY0LnRjcF9yZXRyaWVzMj04Cm5ldC5jb3JlLm1lc3NhZ2VfYnVyc3Q9ODAKbmV0LmNvcmUubWVzc2FnZV9jb3N0PTQwCm5ldC5jb3JlLnNvbWF4Y29ubj0xNjM4NApuZXQuaXB2NC50Y3BfbWF4X3N5bl9iYWNrbG9nPTE2Mzg0Cm5ldC5pcHY0Lm5laWdoLmRlZmF1bHQuZ2NfdGhyZXNoMT00MDk2Cm5ldC5pcHY0Lm5laWdoLmRlZmF1bHQuZ2NfdGhyZXNoMj04MTkyCm5ldC5pcHY0Lm5laWdoLmRlZmF1bHQuZ2NfdGhyZXNoMz0xNjM4NAo=
+ base64 -d
+ retrycmd_if_failure 24 5 25 sysctl --system
+ retries=24
+ wait_sleep=5
+ timeout=25
+ shift
+ shift
+ shift
++ seq 1 24
+ for i in $(seq 1 $retries)
+ timeout 25 sysctl --system
* Applying /etc/sysctl.d/10-console-messages.conf ...
kernel.printk = 4 4 1 7
* Applying /etc/sysctl.d/10-ipv6-privacy.conf ...
net.ipv6.conf.all.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2
* Applying /etc/sysctl.d/10-kernel-hardening.conf ...
kernel.kptr_restrict = 1
* Applying /etc/sysctl.d/10-link-restrictions.conf ...
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
* Applying /etc/sysctl.d/10-lxd-inotify.conf ...
fs.inotify.max_user_instances = 1024
* Applying /etc/sysctl.d/10-magic-sysrq.conf ...
kernel.sysrq = 176
* Applying /etc/sysctl.d/10-network-security.conf ...
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.tcp_syncookies = 1
* Applying /etc/sysctl.d/10-ptrace.conf ...
kernel.yama.ptrace_scope = 1
* Applying /etc/sysctl.d/10-zeropage.conf ...
vm.mmap_min_addr = 65536
* Applying /usr/lib/sysctl.d/50-default.conf ...
net.ipv4.conf.all.promote_secondaries = 1
net.core.default_qdisc = fq_codel
* Applying /etc/sysctl.d/60-CIS.conf ...
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1
net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.tcp_syncookies = 1
vm.overcommit_memory = 1
kernel.panic = 10
kernel.panic_on_oops = 1
kernel.pid_max = 4194304
fs.inotify.max_user_watches = 1048576
fs.inotify.max_user_instances = 1024
* Applying /etc/sysctl.d/99-cloudimg-ipv6.conf ...
net.ipv6.conf.all.use_tempaddr = 0
net.ipv6.conf.default.use_tempaddr = 0
* Applying /etc/sysctl.d/99-force-bridge-forward.conf ...
net.ipv4.ip_forward = 1
net.ipv4.conf.all.forwarding = 1
net.ipv6.conf.all.forwarding = 1
net.bridge.bridge-nf-call-iptables = 1
* Applying /etc/sysctl.d/99-sysctl.conf ...
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.icmp_echo_ignore_broadcasts = 1
fs.suid_dumpable = 0
* Applying /etc/sysctl.d/999-sysctl-aks.conf ...
net.ipv4.tcp_retries2 = 8
net.core.message_burst = 80
net.core.message_cost = 40
net.core.somaxconn = 16384
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.neigh.default.gc_thresh1 = 4096
net.ipv4.neigh.default.gc_thresh2 = 8192
net.ipv4.neigh.default.gc_thresh3 = 16384
* Applying /etc/sysctl.conf ...
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
net.ipv4.conf.default.log_martians = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.icmp_echo_ignore_broadcasts = 1
fs.suid_dumpable = 0
+ break
+ echo Executed '"sysctl' '--system"' 1 times
Executed "sysctl --system" 1 times
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:13.758'
++ jq -n --arg Timestamp '2023-07-27 08:29:13.740' --arg OperationId '2023-07-27 08:29:13.758' --arg Version 1.23 --arg TaskName AKS.CSE.ensureSysctl --arg EventLevel Informational --arg Message 'Completed: ensureSysctl' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:13.740",
  "OperationId": "2023-07-27 08:29:13.758",
  "Version": "1.23",
  "TaskName": "AKS.CSE.ensureSysctl",
  "EventLevel": "Informational",
  "Message": "Completed: ensureSysctl",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:13.740",' '"OperationId":' '"2023-07-27' '08:29:13.758",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.ensureSysctl",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'ensureSysctl",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446553737.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ '[' true == true ']'
+ '[' false == true ']'
+ logs_to_events AKS.CSE.ensureKubelet ensureKubelet
+ local task=AKS.CSE.ensureKubelet
+ shift
++ date +%s%3N
+ local eventsFileName=1690446553768
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:13.770'
+ ensureKubelet
+ KUBELET_DEFAULT_FILE=/etc/default/kubelet
+ mkdir -p /etc/default
+ echo 'KUBELET_FLAGS=--address=0.0.0.0 --anonymous-auth=false --authentication-token-webhook=true --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<750Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=DisableAcceleratorUsageMetrics=false,RotateKubeletServerCertificate=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kube-reserved=cpu=100m,memory=1638Mi --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --node-status-update-frequency=10s --pod-infra-container-image=mcr.microsoft.com/oss/kubernetes/pause:3.6 --pod-manifest-path=/etc/kubernetes/manifests --pod-max-pids=-1 --protect-kernel-defaults=true --read-only-port=0 --resolv-conf=/run/systemd/resolve/resolv.conf --rotate-certificates=false --streaming-connection-idle-timeout=4h --tls-cert-file=/etc/kubernetes/certs/kubeletserver.crt --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256 --tls-private-key-file=/etc/kubernetes/certs/kubeletserver.key '
+ echo KUBELET_REGISTER_SCHEDULABLE=true
+ echo NETWORK_POLICY=
+ echo KUBELET_IMAGE=
+ echo KUBELET_NODE_LABELS=agentpool=nodepool2,kubernetes.azure.com/agentpool=nodepool2,kubernetes.azure.com/mode=system,kubernetes.azure.com/node-image-version=AKSUbuntu-1804gen2containerd-2022.01.19
+ '[' -n '' ']'
+ KUBE_CA_FILE=/etc/kubernetes/certs/ca.crt
++ dirname /etc/kubernetes/certs/ca.crt
+ mkdir -p /etc/kubernetes/certs
+ base64 -d
+ echo LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRDZ0F3SUJBZ0lRSUtJMm9mZ1ZOMlJzMVJRN3l5eGFpekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWdGdzB5TXpBM01qUXdPVFUzTUROYUdBOHlNRFV6TURjeU5ERXdNRGN3TTFvdwpEVEVMTUFrR0ExVUVBeE1DWTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURBClZvamxyRTZ6NGtnUWlpaEdpalpDV0RackxPSFZHbTQ5b1hKUEVFZnJLc01lcVNSU1hVT3BTU25TK1E5bE9zNU4KRlc2WFd4eW1qK096Q2NuMTFMR2dSSzRIUVVRbVd2cjlwMUcweTRycHhqSVJtZWk3ZlZ6UjczeWZ0UXMrVmNDbwpDbG9sMFVFMVYyUmxIZHRwVzlaU2tMVW5hRTVqUGR3UFFPZGNKVnJ4OWNIUlBxRGFpUjMvOGdSeU5EN3A2SnJwCkUyb0p2NlBEV3B5c0JISndsbFRlZ3o2YlErTlZVTGIwUkhNRS9sVEdRUXAvQ1lGODI2WmRkUlBVUlVkY01nbHQKOXBtRDFKQndEaEdBbmsrcklzYlVDYzVEMEZGekdpdHZIeEdpOG5LNGFmUUxDeGNOZFJtRnF0M3hMazJuR3hWdApnZ25UT0JUbkg2WEhpbW44QkRtYjN0czdkbzlRMVpBSWsvUkFmbWpYNW1DeGxtWU0vd1p1cE9tZWNuWTE4akRJCjNqL3F5RVQ5NXZBYXArWExsbWhFc3FOZ0ZWNnNLbUZKUStjdlRBUWNBdzc5N1ZlTlk2OHJhS2FPL0NsYnNXYzQKYjJvMTc0V3hIY0Vqb25aTXM3bGVzdUFoQzJIRDVKQ0ovMHpOZTJneW5RZWtjcVhpRFNWVEhEYm5kdTYwcjZQbAo1aVRZZGRJRk9qTDFEQXdMTUFkelhydlliUFRPR0djRlI0Zi9qOExMTHE4REVFaUc0RWxlVndST1Vwck5zM0QrCm52OVpyRm5veHdqZTRxeCt0SU52TlY2QVpUSzZiK09ST3hoTE9PL2RCaUVHOW51Yk5ENWxabmFlYm13OHpqUDkKeVV1cTN3V1ZIc3JVTGNJd1BXQW5OeldvN0ZtOTh0UzZvdnNyTEFEVzFRSURBUUFCbzBJd1FEQU9CZ05WSFE4QgpBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVVakVhS2NSclhDamZ3Mit3CjFGR0VHSWlSOG5nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFJWHlrMWtiSjZGdXJLdXYza2ZkbXZQcnFEelAKKzNDejRDcjlGOWowZW1zTTNDWUttWDRaamtIalVxUVF0c093aVMxWS9mdHcxMWU4TE1XajhaSGl5eDA4azRPNwpXajcvcTF6ZGdyeG5FaW9FbFNxWHRhUEoxY3g3dVc3NlJ0ZkJidFJNdTBqNFFac2ZQZ0trSlJnTFFZaUtLdE5GCnAwdlNCSUlHZzB5bFoxZUw3TUFsUXErV1Vjc1lhdmIxOG8rcWlPN0FtWnJneGNEQW1UcVhSK3YwWUR2QzhxTVgKS1lmcFVCT0R4Zm1SZU1yZWhBUEZVS1ZjYmI0ZmNVMm9oOW5aY0lEQXlHdnp5WldwUTBzeUhzZ0lubTkxbFF2SApQWFU4b3lYemV3SEMyNVlPREV0ZVVZd0RsWVBVRTdNZFoyZ292MHJqd3ZpSGdMRmxiaE96YVRSeHI2SGpPODF4CjlSTnIxMUFuQ2hPZENiemJCWkJyOUs2R1RMMUtlZFhpWEJBb2k4MTJPYlBlWG1aR3QzeUkwVjNwVGZLeEhDZUoKdktPRERMc2FCNzdYWHFRc21JMUllalhVb3BsNDhYcll4aS8xT1R4alVSVHp0UnhIS3M4L0NXNXlKOFBUOW5vdgpBU29TZVJvSHZFeE9FOW8xSDRaSjJ4ZXJuelFiOVdrdzl3ZkRqeUZaZmVGYW1YRldVdWFvRzlRMjIzWlgxR2owCktJNkdqY25JcUNrWXYybXRHa0hRSTRac242UnJ6Vy8vczNQTlphSFJWTCtrN1JFYk5KWXNwQm1mZDlITG1jMWkKMFBXT1dyc0tBUllpUUZBSmRWUGRDZjdSaFh2bE1wdWJzcEhNVEgvUUdkeXdpNmZWdjRJS21VQzNJcnNoblBLTApRRFFORDMzMk85TlMramhDCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
+ chmod 0600 /etc/kubernetes/certs/ca.crt
+ '[' true == true ']'
+ KUBELET_TLS_DROP_IN=/etc/systemd/system/kubelet.service.d/10-tlsbootstrap.conf
++ dirname /etc/systemd/system/kubelet.service.d/10-tlsbootstrap.conf
+ mkdir -p /etc/systemd/system/kubelet.service.d
+ touch /etc/systemd/system/kubelet.service.d/10-tlsbootstrap.conf
+ chmod 0600 /etc/systemd/system/kubelet.service.d/10-tlsbootstrap.conf
+ tee /etc/systemd/system/kubelet.service.d/10-tlsbootstrap.conf
+ BOOTSTRAP_KUBECONFIG_FILE=/var/lib/kubelet/bootstrap-kubeconfig
++ dirname /var/lib/kubelet/bootstrap-kubeconfig
+ mkdir -p /var/lib/kubelet
+ touch /var/lib/kubelet/bootstrap-kubeconfig
+ chmod 0644 /var/lib/kubelet/bootstrap-kubeconfig
+ tee /var/lib/kubelet/bootstrap-kubeconfig
+ KUBELET_RUNTIME_CONFIG_SCRIPT_FILE=/opt/azure/containers/kubelet.sh
+ tee /opt/azure/containers/kubelet.sh
+ systemctlEnableAndStart kubelet
+ systemctl_restart 100 5 30 kubelet
+ retries=100
+ wait_sleep=5
+ timeout=30
+ svcname=kubelet
++ seq 1 100
+ for i in $(seq 1 $retries)
+ timeout 30 systemctl daemon-reload
+ timeout 30 systemctl restart kubelet
+ break
+ RESTART_STATUS=0
+ systemctl status kubelet --no-pager -l
+ '[' 0 -ne 0 ']'
+ retrycmd_if_failure 120 5 25 systemctl enable kubelet
+ retries=120
+ wait_sleep=5
+ timeout=25
+ shift
+ shift
+ shift
++ seq 1 120
+ for i in $(seq 1 $retries)
+ timeout 25 systemctl enable kubelet
Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /etc/systemd/system/kubelet.service.
+ break
+ echo Executed '"systemctl' enable 'kubelet"' 1 times
Executed "systemctl enable kubelet" 1 times
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:14.598'
++ jq -n --arg Timestamp '2023-07-27 08:29:13.770' --arg OperationId '2023-07-27 08:29:14.598' --arg Version 1.23 --arg TaskName AKS.CSE.ensureKubelet --arg EventLevel Informational --arg Message 'Completed: ensureKubelet' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:13.770",
  "OperationId": "2023-07-27 08:29:14.598",
  "Version": "1.23",
  "TaskName": "AKS.CSE.ensureKubelet",
  "EventLevel": "Informational",
  "Message": "Completed: ensureKubelet",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:13.770",' '"OperationId":' '"2023-07-27' '08:29:14.598",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.ensureKubelet",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'ensureKubelet",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446553768.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ '[' true == true ']'
+ logs_to_events AKS.CSE.ensureNoDupOnPromiscuBridge ensureNoDupOnPromiscuBridge
+ local task=AKS.CSE.ensureNoDupOnPromiscuBridge
+ shift
++ date +%s%3N
+ local eventsFileName=1690446554619
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:14.621'
+ ensureNoDupOnPromiscuBridge
+ systemctlEnableAndStart ensure-no-dup
+ systemctl_restart 100 5 30 ensure-no-dup
+ retries=100
+ wait_sleep=5
+ timeout=30
+ svcname=ensure-no-dup
++ seq 1 100
+ for i in $(seq 1 $retries)
+ timeout 30 systemctl daemon-reload
+ timeout 30 systemctl restart ensure-no-dup
+ break
+ RESTART_STATUS=0
+ systemctl status ensure-no-dup --no-pager -l
+ '[' 0 -ne 0 ']'
+ retrycmd_if_failure 120 5 25 systemctl enable ensure-no-dup
+ retries=120
+ wait_sleep=5
+ timeout=25
+ shift
+ shift
+ shift
++ seq 1 120
+ for i in $(seq 1 $retries)
+ timeout 25 systemctl enable ensure-no-dup
The unit files have no installation config (WantedBy, RequiredBy, Also, Alias
settings in the [Install] section, and DefaultInstance for template units).
This means they are not meant to be enabled using systemctl.
Possible reasons for having this kind of units are:
1) A unit may be statically enabled by being symlinked from another unit's
   .wants/ or .requires/ directory.
2) A unit's purpose may be to act as a helper for some other unit which has
   a requirement dependency on it.
3) A unit may be started when needed via activation (socket, path, timer,
   D-Bus, udev, scripted systemctl call, ...).
4) In case of template units, the unit is meant to be enabled with some
   instance name specified.
+ break
+ echo Executed '"systemctl' enable 'ensure-no-dup"' 1 times
Executed "systemctl enable ensure-no-dup" 1 times
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:15.085'
++ jq -n --arg Timestamp '2023-07-27 08:29:14.621' --arg OperationId '2023-07-27 08:29:15.085' --arg Version 1.23 --arg TaskName AKS.CSE.ensureNoDupOnPromiscuBridge --arg EventLevel Informational --arg Message 'Completed: ensureNoDupOnPromiscuBridge' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:14.621",
  "OperationId": "2023-07-27 08:29:15.085",
  "Version": "1.23",
  "TaskName": "AKS.CSE.ensureNoDupOnPromiscuBridge",
  "EventLevel": "Informational",
  "Message": "Completed: ensureNoDupOnPromiscuBridge",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:14.621",' '"OperationId":' '"2023-07-27' '08:29:15.085",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.ensureNoDupOnPromiscuBridge",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' 'ensureNoDupOnPromiscuBridge",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446554619.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ false
+ VALIDATION_ERR=0
+ API_SERVER_CONN_RETRIES=50
+ [[ agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io == *.privatelink.* ]]
+ [[ agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]
+ API_SERVER_DNS_RETRIES=100
+ [[ agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io == *.privatelink.* ]]
+ [[ false != \t\r\u\e ]]
++ logs_to_events AKS.CSE.apiserverNslookup 'retrycmd_if_failure 100 1 20 nslookup -timeout=5 -retry=0 agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io'
++ local task=AKS.CSE.apiserverNslookup
++ shift
+++ date +%s%3N
++ local eventsFileName=1690446555096
+++ date '+%F %T.%3N'
++ local 'startTime=2023-07-27 08:29:15.098'
++ retrycmd_if_failure 100 1 20 nslookup -timeout=5 -retry=0 agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io
++ retries=100
++ wait_sleep=1
++ timeout=20
++ shift
++ shift
++ shift
+++ seq 1 100
++ for i in $(seq 1 $retries)
++ timeout 20 nslookup -timeout=5 -retry=0 agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io
++ break
++ echo Executed '"nslookup' -timeout=5 -retry=0 'agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io"' 1 times
++ ret=0
+++ date '+%F %T.%3N'
++ local 'endTime=2023-07-27 08:29:15.828'
+++ jq -n --arg Timestamp '2023-07-27 08:29:15.098' --arg OperationId '2023-07-27 08:29:15.828' --arg Version 1.23 --arg TaskName AKS.CSE.apiserverNslookup --arg EventLevel Informational --arg Message 'Completed: retrycmd_if_failure 100 1 20 nslookup -timeout=5 -retry=0 agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
++ json_string='{
  "Timestamp": "2023-07-27 08:29:15.098",
  "OperationId": "2023-07-27 08:29:15.828",
  "Version": "1.23",
  "TaskName": "AKS.CSE.apiserverNslookup",
  "EventLevel": "Informational",
  "Message": "Completed: retrycmd_if_failure 100 1 20 nslookup -timeout=5 -retry=0 agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io",
  "EventPid": "0",
  "EventTid": "0"
}'
++ echo '{' '"Timestamp":' '"2023-07-27' '08:29:15.098",' '"OperationId":' '"2023-07-27' '08:29:15.828",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.apiserverNslookup",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' retrycmd_if_failure 100 1 20 nslookup -timeout=5 -retry=0 'agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446555096.json: No such file or directory
++ '[' 0 '!=' 0 ']'
+ RES='Server:		168.63.129.16
Address:	168.63.129.16#53

Non-authoritative answer:
Name:	agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io
Address: 20.62.178.109

Executed "nslookup -timeout=5 -retry=0 agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io" 1 times'
+ STS=0
+ [[ 0 != 0 ]]
+ logs_to_events AKS.CSE.apiserverNC 'retrycmd_if_failure 50 1 10 nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443'
+ local task=AKS.CSE.apiserverNC
+ shift
++ date +%s%3N
+ local eventsFileName=1690446555837
++ date '+%F %T.%3N'
+ local 'startTime=2023-07-27 08:29:15.839'
+ retrycmd_if_failure 50 1 10 nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443
+ retries=50
+ wait_sleep=1
+ timeout=10
+ shift
+ shift
+ shift
++ seq 1 50
+ for i in $(seq 1 $retries)
+ timeout 10 nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443
Connection to agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443 port [tcp/https] succeeded!
+ break
+ echo Executed '"nc' -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io '443"' 1 times
Executed "nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443" 1 times
+ ret=0
++ date '+%F %T.%3N'
+ local 'endTime=2023-07-27 08:29:15.859'
++ jq -n --arg Timestamp '2023-07-27 08:29:15.839' --arg OperationId '2023-07-27 08:29:15.859' --arg Version 1.23 --arg TaskName AKS.CSE.apiserverNC --arg EventLevel Informational --arg Message 'Completed: retrycmd_if_failure 50 1 10 nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443' --arg EventPid 0 --arg EventTid 0 '{Timestamp: $Timestamp, OperationId: $OperationId, Version: $Version, TaskName: $TaskName, EventLevel: $EventLevel, Message: $Message, EventPid: $EventPid, EventTid: $EventTid}'
+ json_string='{
  "Timestamp": "2023-07-27 08:29:15.839",
  "OperationId": "2023-07-27 08:29:15.859",
  "Version": "1.23",
  "TaskName": "AKS.CSE.apiserverNC",
  "EventLevel": "Informational",
  "Message": "Completed: retrycmd_if_failure 50 1 10 nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io 443",
  "EventPid": "0",
  "EventTid": "0"
}'
+ echo '{' '"Timestamp":' '"2023-07-27' '08:29:15.839",' '"OperationId":' '"2023-07-27' '08:29:15.859",' '"Version":' '"1.23",' '"TaskName":' '"AKS.CSE.apiserverNC",' '"EventLevel":' '"Informational",' '"Message":' '"Completed:' retrycmd_if_failure 50 1 10 nc -vz agentbaker-e2e-test-cluster-fyzp2-0vd1qvdw.hcp.eastus.azmk8s.io '443",' '"EventPid":' '"0",' '"EventTid":' '"0"' '}'
/opt/azure/containers/provision_source.sh: line 338: /var/log/azure/Microsoft.Azure.Extensions.CustomScript/events/1690446555837.json: No such file or directory
+ '[' 0 '!=' 0 ']'
+ [[ ubuntu != \m\a\r\i\n\e\r ]]
++ date
+ echo 'Recreating man-db auto-update flag file and kicking off man-db update process at Thu Jul 27 08:29:15 UTC 2023'
Recreating man-db auto-update flag file and kicking off man-db update process at Thu Jul 27 08:29:15 UTC 2023
+ createManDbAutoUpdateFlagFile
+ touch /var/lib/man-db/auto-update
+ false
+ [[ UBUNTU == UBUNTU ]]
+ '[' false == true ']'
+ aptmarkWALinuxAgent unhold
+ echo 'Custom script finished. API server connection check code:' 0
Custom script finished. API server connection check code: 0
+ /usr/bin/mandb
++ date
++ date
++ hostname
++ hostname
+ echo Thu Jul 27 08:29:15 UTC 2023,abtestjxwc000000, endcustomscript
+ mkdir -p /opt/azure/containers
+ echo Thu Jul 27 08:29:15 UTC 2023,abtestjxwc000000, startAptmarkWALinuxAgent unhold
Thu Jul 27 08:29:15 UTC 2023,abtestjxwc000000, startAptmarkWALinuxAgent unhold
+ wait_for_apt_locks
+ fuser /var/lib/dpkg/lock /var/lib/apt/lists/lock /var/cache/apt/archives/lock
+ touch /opt/azure/containers/provision.complete
+ exit 0
+ echo 'Waiting for release of apt locks'
Waiting for release of apt locks
+ sleep 3
